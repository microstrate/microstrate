{
  "name": "Payouts",
  "description": "Use the Payouts API to make payments to multiple PayPal or Venmo recipients. The Payouts API is a fast, convenient way to send commissions, rebates, rewards, and general disbursements. You can send up to 15,000 payments per call. If you integrated the Payouts API before September 1, 2017, you receive transaction reports through <a href=\"/docs/archive/mass-pay/integration-guide/MassPayReporting/\">Mass Payments Reporting</a>. Otherwise, <a href=\"/docs/payouts/features/view-reports/\">view reports from your PayPal Business account</a>. The Payouts API uses the <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">ISO 8601 Internet date and time format</a>.",
  "nodes": [
    {
      "id": "post_v1_payments_payouts",
      "operationId": "payouts.post",
      "name": "Payouts Post",
      "description": "Create batch payout",
      "schema": {
        "tags": [
          "payouts"
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/v1/payments/payouts"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "PayPal-Request-Id": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1000,
                  "pattern": "^.*$",
                  "description": "The server stores keys for 30 days."
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "title": "Create Payout Request",
                "description": "The create payout request.",
                "properties": {
                  "sender_batch_header": {
                    "description": "The sender-provided payout header for a payout request.",
                    "type": "object",
                    "title": "Sender Batch Header",
                    "properties": {
                      "sender_batch_id": {
                        "type": "string",
                        "description": "A sender-specified ID number. Tracks the payout in an accounting system.<blockquote><strong>Note:</strong> <p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>. The API completes a payment only once for a <code>sender_batch_id</code> that is used within 30 days.</p></blockquote>",
                        "minLength": 0,
                        "maxLength": 256,
                        "pattern": "^.*$"
                      },
                      "recipient_type": {
                        "type": "string",
                        "description": "The ID type that identifies the recipient of the payment. For example, <code>EMAIL</code>.",
                        "minLength": 0,
                        "maxLength": 13,
                        "pattern": "^.*$"
                      },
                      "email_subject": {
                        "type": "string",
                        "description": "The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string of up to 255 single-byte characters.",
                        "minLength": 0,
                        "maxLength": 255,
                        "pattern": "^.*$"
                      },
                      "email_message": {
                        "type": "string",
                        "description": "The email message that PayPal sends when the payout item completes. The message is the same for all recipients.",
                        "minLength": 0,
                        "maxLength": 1000,
                        "pattern": "^.*$"
                      },
                      "note": {
                        "type": "string",
                        "description": "The payouts and item-level notes are concatenated in the email. The maximum combined length of the notes is 1000 characters.",
                        "minLength": 0,
                        "maxLength": 1000,
                        "pattern": "^.*$"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "description": "An array of individual payout items.",
                    "maxItems": 15000,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "title": "Payout Item",
                      "description": "The sender-created payout to a recipient.",
                      "properties": {
                        "recipient_type": {
                          "type": "string",
                          "description": "The recipient type. Value is:<ul><li><p><code>EMAIL</code>. The unencrypted email. Value is a string of up to 127 single-byte characters.</p></li><li><p><code>PHONE</code>. The unencrypted phone number.</p><blockquote><strong>Note:</strong> The PayPal sandbox does not support the <code>PHONE</code> recipient type.</blockquote></li><li><p><code>PAYPAL_ID</code>. The encrypted PayPal account number.</p></li><li><p><code>USER_HANDLE</code>. User handle (or) Username associated with Venmo account.</p></li></ul><br/>If the <code>sender_batch_header</code> includes the <code>recipient_type</code> attribute, payout items use the <code>recipient_type</code> of the <code>sender_batch_header</code>, unless a payout item has its own <code>recipient_type</code> attribute. If the <code>sender_batch_header</code> omits the <code>recipient_type</code> attribute, each payout item must include its own <code>recipient_type</code> value.",
                          "minLength": 0,
                          "maxLength": 13,
                          "pattern": "^.*$"
                        },
                        "amount": {
                          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                          "type": "object",
                          "title": "Currency",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                            }
                          },
                          "required": [
                            "currency",
                            "value"
                          ]
                        },
                        "note": {
                          "type": "string",
                          "description": "The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.",
                          "minLength": 0,
                          "maxLength": 4000,
                          "pattern": "^.*$"
                        },
                        "receiver": {
                          "type": "string",
                          "description": "The receiver of the payment. Corresponds to the `recipient_type` value in the request. Max value of up to 127 single-byte characters.",
                          "minLength": 0,
                          "maxLength": 127,
                          "pattern": "^.*$"
                        },
                        "sender_item_id": {
                          "type": "string",
                          "description": "The sender-specified ID number. Tracks the payout in an accounting system.",
                          "minLength": 0,
                          "maxLength": 63,
                          "pattern": "^.*$"
                        },
                        "recipient_wallet": {
                          "type": "string",
                          "description": "The recipient wallet.",
                          "default": "PAYPAL",
                          "minLength": 0,
                          "maxLength": 36,
                          "pattern": "^.*$"
                        },
                        "alternate_notification_method": {
                          "description": "Captures additional notification modes to reach out to the receiver regarding this payment.",
                          "type": "object",
                          "title": "Alternate Notification Method",
                          "properties": {
                            "phone": {
                              "description": "The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
                              "type": "object",
                              "title": "Phone",
                              "properties": {
                                "country_code": {
                                  "type": "string",
                                  "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
                                  "minLength": 1,
                                  "maxLength": 3,
                                  "pattern": "^[0-9]{1,3}?$"
                                },
                                "national_number": {
                                  "type": "string",
                                  "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
                                  "minLength": 1,
                                  "maxLength": 14,
                                  "pattern": "^[0-9]{1,14}?$"
                                },
                                "extension_number": {
                                  "type": "string",
                                  "description": "The extension number.",
                                  "minLength": 1,
                                  "maxLength": 15,
                                  "pattern": "^[0-9]{1,15}?$"
                                }
                              },
                              "required": [
                                "country_code",
                                "national_number"
                              ]
                            }
                          }
                        },
                        "notification_language": {
                          "type": "string",
                          "description": "The language in which to show the payout recipient's email message. Used only when the recipient does not have a PayPal account. If you omit the language or provide invalid language and the recipient does not have a PayPal account, the email message is sent in the language of the merchant's PayPal account.",
                          "format": "ppaas_common_language_v3",
                          "maxLength": 10,
                          "minLength": 2,
                          "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$"
                        },
                        "application_context": {
                          "description": "Metadata for Venmo transactions.",
                          "type": "object",
                          "title": "Application Context",
                          "properties": {
                            "social_feed_privacy": {
                              "type": "string",
                              "default": "PRIVATE",
                              "description": "This attribute controls the privacy of a payout transaction in recipient’s feed. PUBLIC, FRIENDS_ONLY & PRIVATE are the values that can be used. PUBLIC - The payment displays on the recipient's public Venmo feed. FRIENDS_ONLY - The payment displays only to the recipient's Venmo friends. PRIVATE - The payment displays only on the recipient's personal feed. Defaults to `PRIVATE` if left blank.",
                              "minLength": 1,
                              "maxLength": 15,
                              "pattern": "^.*$"
                            },
                            "holler_url": {
                              "type": "string",
                              "description": "Link to a Holler sticker. For Venmo recipients, the sticker displays with the payout message. The maximum URL length is 151.",
                              "format": "uri",
                              "minLength": 1,
                              "maxLength": 1000,
                              "deprecated": true
                            },
                            "logo_url": {
                              "type": "string",
                              "description": "Link to a logo that displays as the sender's profile image in the recipient's Venmo feed. Used to add or update the business profile image. Max image size: 1024 x 1024 pixels. The image should be square and maximum URL length is 2000.",
                              "format": "uri",
                              "minLength": 0,
                              "maxLength": 1000
                            }
                          }
                        },
                        "purpose": {
                          "description": "The purpose of the transaction.",
                          "type": "string",
                          "title": "Purpose",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[A-Z0-9_]+$",
                          "enum": [
                            "AWARDS",
                            "PRIZES",
                            "DONATIONS",
                            "GOODS",
                            "SERVICES",
                            "REBATES",
                            "CASHBACK",
                            "DISCOUNTS",
                            "NON_GOODS_OR_SERVICES"
                          ]
                        }
                      },
                      "required": [
                        "amount",
                        "receiver"
                      ]
                    }
                  }
                },
                "required": [
                  "sender_batch_header",
                  "items"
                ]
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts/output-201.schema.json",
            "type": "object",
            "title": "Create Payout Response",
            "description": "The create payout response.",
            "properties": {
              "batch_header": {
                "description": "The payout header that is returned in response to a payout header request. Shows details for an entire payout request.",
                "type": "object",
                "title": "Payout Header",
                "properties": {
                  "payout_batch_id": {
                    "type": "string",
                    "description": "The PayPal-generated ID for a payout.",
                    "minLength": 0,
                    "maxLength": 30,
                    "pattern": "^.*$"
                  },
                  "batch_status": {
                    "description": "The payouts status.",
                    "title": "Batch status",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "DENIED",
                      "PENDING",
                      "PROCESSING",
                      "SUCCESS",
                      "CANCELED"
                    ]
                  },
                  "time_created": {
                    "type": "string",
                    "format": "date-time",
                    "minLength": 0,
                    "maxLength": 100,
                    "description": "The date and time when processing for the payout began, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6)."
                  },
                  "sender_batch_header": {
                    "description": "The sender-provided header for a payout request.",
                    "type": "object",
                    "title": "Payout Sender Batch Header",
                    "properties": {
                      "sender_batch_id": {
                        "type": "string",
                        "description": "The sender-specified ID number. Tracks the payout in an accounting system.<blockquote><strong>Note:</strong> <p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>. The API completes a payment only once for a <code>sender_batch_id</code> that is used within 30 days.</p></blockquote>",
                        "minLength": 0,
                        "maxLength": 256,
                        "pattern": "^.*$"
                      },
                      "recipient_type": {
                        "title": "Recipient type",
                        "description": "The ID type that identifies the payment receiver.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 36,
                        "pattern": "^[0-9A-Z_]+$",
                        "enum": [
                          "EMAIL",
                          "PHONE",
                          "PAYPAL_ID"
                        ]
                      },
                      "email_subject": {
                        "type": "string",
                        "description": "The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string with a maximum length of 255 single-byte characters.",
                        "minLength": 0,
                        "maxLength": 255,
                        "pattern": "^.*$"
                      },
                      "email_message": {
                        "type": "string",
                        "description": "The email message that PayPal sends when the payout item completes. The message is the same for all recipients.",
                        "minLength": 0,
                        "maxLength": 1000,
                        "pattern": "^.*$"
                      }
                    }
                  }
                },
                "required": [
                  "batch_status",
                  "payout_batch_id",
                  "sender_batch_header"
                ]
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  }
                },
                "minItems": 1,
                "maxItems": 15000
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts/output-400.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts/output-403.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts/output-500.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts/output-default.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          }
        ]
      }
    },
    {
      "id": "get_v1_payments_payouts__id_",
      "operationId": "payouts.get",
      "name": "Payouts Get",
      "description": "Show payout batch details",
      "schema": {
        "tags": [
          "payouts"
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/v1/payments/payouts/{id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "fields": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1000,
                  "pattern": "^.*$",
                  "description": "Shows details for only the specified fields."
                },
                "page": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1000,
                  "default": 1,
                  "description": "A non-zero integer representing the page of the results."
                },
                "page_size": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1000,
                  "description": "The maximum number of results to return at one time. Value is a non-negative, non-zero integer. If the user chooses pagination, the maximum page is `1000`."
                },
                "total_required": {
                  "type": "boolean",
                  "default": false,
                  "description": "Indicates whether to show the total items and total pages count in the response."
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1000,
                  "pattern": "^.*$",
                  "description": "The ID of the payout for which to show details."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts__id_/output-200.schema.json",
            "type": "object",
            "title": "Payout Batch",
            "description": "The PayPal-generated batch status.",
            "properties": {
              "total_items": {
                "description": "The total number of items in the full result list.",
                "type": "integer",
                "minimum": 0,
                "maximum": 15000
              },
              "total_pages": {
                "description": "The total number of pages.",
                "type": "integer",
                "minimum": 0,
                "maximum": 1000
              },
              "batch_header": {
                "description": "The payout header that is returned in response to a payout header request. Shows details for an entire payout request.",
                "type": "object",
                "title": "Payout Batch Header",
                "properties": {
                  "payout_batch_id": {
                    "type": "string",
                    "description": "The PayPal-generated ID for a payout.",
                    "minLength": 0,
                    "maxLength": 30,
                    "pattern": "^.*$"
                  },
                  "batch_status": {
                    "description": "The payouts status.",
                    "title": "Batch status",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "DENIED",
                      "PENDING",
                      "PROCESSING",
                      "SUCCESS",
                      "CANCELED"
                    ]
                  },
                  "time_created": {
                    "type": "string",
                    "format": "date-time",
                    "minLength": 0,
                    "maxLength": 100,
                    "description": "The date and time when processing for the payout began, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6)."
                  },
                  "time_completed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time when processing for the payout was completed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "minLength": 0,
                    "maxLength": 100
                  },
                  "time_closed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time when the payout was closed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). A payout is considered closed when all items in a batch are processed and the available balance from the temporary hold is released.",
                    "minLength": 0,
                    "maxLength": 100
                  },
                  "sender_batch_header": {
                    "description": "The sender-provided header for a payout request.",
                    "type": "object",
                    "title": "Payout Sender Batch Header",
                    "properties": {
                      "sender_batch_id": {
                        "type": "string",
                        "description": "The sender-specified ID number. Tracks the payout in an accounting system.<blockquote><strong>Note:</strong> <p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>. The API completes a payment only once for a <code>sender_batch_id</code> that is used within 30 days.</p></blockquote>",
                        "minLength": 0,
                        "maxLength": 256,
                        "pattern": "^.*$"
                      },
                      "recipient_type": {
                        "title": "Recipient type",
                        "description": "The ID type that identifies the payment receiver.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 36,
                        "pattern": "^[0-9A-Z_]+$",
                        "enum": [
                          "EMAIL",
                          "PHONE",
                          "PAYPAL_ID"
                        ]
                      },
                      "email_subject": {
                        "type": "string",
                        "description": "The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string with a maximum length of 255 single-byte characters.",
                        "minLength": 0,
                        "maxLength": 255,
                        "pattern": "^.*$"
                      },
                      "email_message": {
                        "type": "string",
                        "description": "The email message that PayPal sends when the payout item completes. The message is the same for all recipients.",
                        "minLength": 0,
                        "maxLength": 1000,
                        "pattern": "^.*$"
                      }
                    }
                  },
                  "funding_source": {
                    "description": "Identifies a funding source type.",
                    "title": "Funding source",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "BALANCE"
                    ]
                  },
                  "amount": {
                    "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                    "type": "object",
                    "title": "Currency",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "fees": {
                    "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                    "type": "object",
                    "title": "Currency",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  }
                },
                "required": [
                  "payout_batch_id",
                  "batch_status",
                  "sender_batch_header"
                ]
              },
              "items": {
                "type": "array",
                "description": "An array of individual items.",
                "items": {
                  "type": "object",
                  "title": "Payout Item",
                  "description": "The payout item status and other details.",
                  "properties": {
                    "payout_item_id": {
                      "type": "string",
                      "description": "The ID for the payout item. Viewable when you show details for a payout.",
                      "minLength": 0,
                      "maxLength": 30,
                      "pattern": "^.*$"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "The PayPal-generated ID for the transaction.",
                      "minLength": 0,
                      "maxLength": 30,
                      "pattern": "^.*$"
                    },
                    "activity_id": {
                      "type": "string",
                      "description": "The unique PayPal-generated common ID created to link sender side and receiver side transaction. Used for tracking.",
                      "minLength": 0,
                      "maxLength": 30,
                      "pattern": "^.*$"
                    },
                    "transaction_status": {
                      "title": "Transaction status",
                      "description": "The item transaction status.<blockquote><strong>Note:</strong> For <code>POST/v1/payments/payouts-item/{payout_item_id}/cancel</code>, the only possible <code>transaction_status</code> value is <code>RETURNED</code>.</blockquote>",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 36,
                      "pattern": "^[0-9A-Z_]+$",
                      "enum": [
                        "SUCCESS",
                        "FAILED",
                        "PENDING",
                        "UNCLAIMED",
                        "RETURNED",
                        "ONHOLD",
                        "BLOCKED",
                        "REFUNDED",
                        "REVERSED"
                      ]
                    },
                    "payout_item_fee": {
                      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                      "type": "object",
                      "title": "Currency",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                        },
                        "value": {
                          "type": "string",
                          "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                        }
                      },
                      "required": [
                        "currency",
                        "value"
                      ]
                    },
                    "payout_batch_id": {
                      "type": "string",
                      "description": "The PayPal-generated ID for the payout.",
                      "minLength": 0,
                      "maxLength": 30,
                      "pattern": "^.*$"
                    },
                    "payout_item": {
                      "description": "The details for a sender-created payout to a single recipient.",
                      "type": "object",
                      "title": "Payout Item Detail",
                      "properties": {
                        "recipient_type": {
                          "title": "Recipient type",
                          "description": "The ID type that identifies the payment receiver.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 36,
                          "pattern": "^[0-9A-Z_]+$",
                          "enum": [
                            "EMAIL",
                            "PHONE",
                            "PAYPAL_ID"
                          ]
                        },
                        "amount": {
                          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                          "type": "object",
                          "title": "Currency",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                            }
                          },
                          "required": [
                            "currency",
                            "value"
                          ]
                        },
                        "note": {
                          "type": "string",
                          "description": "The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.",
                          "minLength": 0,
                          "maxLength": 4000,
                          "pattern": "^.*$"
                        },
                        "receiver": {
                          "type": "string",
                          "description": "The receiver of the payment. Corresponds to the `recipient_type` value in the request.",
                          "minLength": 0,
                          "maxLength": 127,
                          "pattern": "^.*$"
                        },
                        "sender_item_id": {
                          "type": "string",
                          "description": "A sender-specified ID number. Tracks the payout in an accounting system.",
                          "minLength": 0,
                          "maxLength": 63,
                          "pattern": "^.*$"
                        },
                        "recipient_name": {
                          "description": "The name of the party.",
                          "type": "object",
                          "title": "Name",
                          "properties": {
                            "prefix": {
                              "type": "string",
                              "description": "The prefix, or title, to the party's name.",
                              "maxLength": 140
                            },
                            "given_name": {
                              "type": "string",
                              "description": "When the party is a person, the party's given, or first, name.",
                              "maxLength": 140
                            },
                            "surname": {
                              "type": "string",
                              "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
                              "maxLength": 140
                            },
                            "middle_name": {
                              "type": "string",
                              "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
                              "maxLength": 140
                            },
                            "suffix": {
                              "type": "string",
                              "description": "The suffix for the party's name.",
                              "maxLength": 140
                            },
                            "alternate_full_name": {
                              "type": "string",
                              "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
                              "maxLength": 300
                            },
                            "full_name": {
                              "type": "string",
                              "description": "When the party is a person, the party's full name.",
                              "maxLength": 300
                            }
                          }
                        },
                        "recipient_wallet": {
                          "description": "The wallet where the recipient receives the payout. Payouts to Venmo recipients require a 'note' string and a US mobile phone number.",
                          "title": "Recipient wallet",
                          "type": "string",
                          "default": "PAYPAL",
                          "minLength": 1,
                          "maxLength": 36,
                          "pattern": "^[0-9A-Z_]+$",
                          "enum": [
                            "PAYPAL",
                            "VENMO",
                            "RECIPIENT_SELECTED"
                          ]
                        },
                        "purpose": {
                          "description": "The purpose of the transaction.",
                          "type": "string",
                          "title": "Purpose",
                          "minLength": 1,
                          "maxLength": 40,
                          "pattern": "^[A-Z0-9_]+$",
                          "enum": [
                            "AWARDS",
                            "PRIZES",
                            "DONATIONS",
                            "GOODS",
                            "SERVICES",
                            "REBATES",
                            "CASHBACK",
                            "DISCOUNTS",
                            "NON_GOODS_OR_SERVICES"
                          ]
                        }
                      },
                      "required": [
                        "amount",
                        "receiver"
                      ]
                    },
                    "currency_conversion": {
                      "description": "The currency conversion resource.",
                      "type": "object",
                      "title": "Currency conversion resource",
                      "properties": {
                        "from_amount": {
                          "type": "object",
                          "title": "Currency",
                          "description": "The amount that is converted from.",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                            }
                          },
                          "required": [
                            "currency",
                            "value"
                          ]
                        },
                        "to_amount": {
                          "type": "object",
                          "title": "Currency",
                          "description": "The amount that is converted to.",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                            }
                          },
                          "required": [
                            "currency",
                            "value"
                          ]
                        },
                        "exchange_rate": {
                          "type": "string",
                          "description": "The exchange rate that is applied for this payout.",
                          "pattern": "^.*$",
                          "minLength": 0,
                          "maxLength": 30
                        }
                      }
                    },
                    "time_processed": {
                      "type": "string",
                      "format": "date-time",
                      "minLength": 0,
                      "maxLength": 100,
                      "description": "The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6)."
                    },
                    "errors": {
                      "type": "object",
                      "title": "Error",
                      "description": "The error details.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The human-readable, unique name of the error."
                        },
                        "message": {
                          "type": "string",
                          "description": "The message that describes the error."
                        },
                        "debug_id": {
                          "type": "string",
                          "description": "The PayPal internal ID. Used for correlation purposes."
                        },
                        "information_link": {
                          "type": "string",
                          "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                          "readOnly": true
                        },
                        "details": {
                          "type": "array",
                          "description": "An array of additional details about the error.",
                          "items": {
                            "title": "Error Details",
                            "type": "object",
                            "description": "The error details. Required for client-side `4XX` errors.",
                            "properties": {
                              "field": {
                                "type": "string",
                                "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the field that caused the error."
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                                "default": "body"
                              },
                              "issue": {
                                "type": "string",
                                "description": "The unique, fine-grained application-level error code."
                              },
                              "description": {
                                "type": "string",
                                "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                              }
                            },
                            "required": [
                              "issue"
                            ]
                          }
                        },
                        "links": {
                          "type": "array",
                          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "title": "Link Description",
                            "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                            "required": [
                              "href",
                              "rel"
                            ],
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                              },
                              "rel": {
                                "type": "string",
                                "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                              },
                              "method": {
                                "type": "string",
                                "description": "The HTTP method required to make the related call.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "DELETE",
                                  "HEAD",
                                  "CONNECT",
                                  "OPTIONS",
                                  "PATCH"
                                ]
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "required": [
                        "name",
                        "message",
                        "debug_id"
                      ]
                    },
                    "links": {
                      "type": "array",
                      "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "title": "Link Description",
                        "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "type": "string",
                            "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                          },
                          "rel": {
                            "type": "string",
                            "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                          },
                          "method": {
                            "type": "string",
                            "description": "The HTTP method required to make the related call.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "HEAD",
                              "CONNECT",
                              "OPTIONS",
                              "PATCH"
                            ]
                          }
                        }
                      },
                      "minItems": 0,
                      "maxItems": 15000
                    }
                  },
                  "required": [
                    "payout_item_id",
                    "payout_batch_id",
                    "payout_item"
                  ]
                },
                "minItems": 0,
                "maxItems": 15000
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  }
                },
                "minItems": 0,
                "maxItems": 15000
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts__id_/output-404.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts__id_/output-500.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts__id_/output-default.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          }
        ]
      }
    },
    {
      "id": "get_v1_payments_payouts-item__payout_item_id_",
      "operationId": "payouts-item.get",
      "name": "Payouts Item Get",
      "description": "Show payout item details",
      "schema": {
        "tags": [
          "payouts-item"
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts-item__payout_item_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/v1/payments/payouts-item/{payout_item_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "payout_item_id"
              ],
              "properties": {
                "payout_item_id": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "pattern": "^.*$",
                  "description": "The ID of the payout item to cancel."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts-item__payout_item_id_/output-200.schema.json",
            "type": "object",
            "title": "Payout Item",
            "description": "The payout item status and other details. A <code>payout_item_id</code> helps you identify denied payments. If a payment is denied, you can use the <code>payout_item_id</code> to identify the payment even if it lacks a <code>transaction_id</code>.",
            "properties": {
              "payout_item_id": {
                "type": "string",
                "description": "The ID for the payout item. Visible when you show details for a payout.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "transaction_id": {
                "type": "string",
                "description": "The PayPal-generated ID for the transaction.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "activity_id": {
                "type": "string",
                "description": "The unique PayPal-generated common ID that links the sender- and receiver-side transactions. Used for tracking.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "transaction_status": {
                "title": "Transaction status",
                "description": "The item transaction status.<blockquote><strong>Note:</strong> For <code>POST/v1/payments/payouts-item/{payout_item_id}/cancel</code>, the only possible <code>transaction_status</code> value is <code>RETURNED</code>.</blockquote>",
                "type": "string",
                "minLength": 1,
                "maxLength": 36,
                "pattern": "^[0-9A-Z_]+$",
                "enum": [
                  "SUCCESS",
                  "FAILED",
                  "PENDING",
                  "UNCLAIMED",
                  "RETURNED",
                  "ONHOLD",
                  "BLOCKED",
                  "REFUNDED",
                  "REVERSED"
                ]
              },
              "payout_item_fee": {
                "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                "type": "object",
                "title": "Currency",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                  },
                  "value": {
                    "type": "string",
                    "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                  }
                },
                "required": [
                  "currency",
                  "value"
                ]
              },
              "payout_batch_id": {
                "type": "string",
                "description": "The PayPal-generated ID for the payout batch.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "sender_batch_id": {
                "type": "string",
                "description": "A sender-specified ID. Tracks the payout in an accounting system. Should be unique within 30 days.",
                "minLength": 0,
                "maxLength": 256,
                "pattern": "^.*$"
              },
              "payout_item": {
                "description": "The details for a sender-created payout to a single recipient.",
                "type": "object",
                "title": "Payout Item Detail",
                "properties": {
                  "recipient_type": {
                    "title": "Recipient type",
                    "description": "The ID type that identifies the payment receiver.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "EMAIL",
                      "PHONE",
                      "PAYPAL_ID"
                    ]
                  },
                  "amount": {
                    "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                    "type": "object",
                    "title": "Currency",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "note": {
                    "type": "string",
                    "description": "The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.",
                    "minLength": 0,
                    "maxLength": 4000,
                    "pattern": "^.*$"
                  },
                  "receiver": {
                    "type": "string",
                    "description": "The receiver of the payment. Corresponds to the `recipient_type` value in the request.",
                    "minLength": 0,
                    "maxLength": 127,
                    "pattern": "^.*$"
                  },
                  "sender_item_id": {
                    "type": "string",
                    "description": "A sender-specified ID number. Tracks the payout in an accounting system.",
                    "minLength": 0,
                    "maxLength": 63,
                    "pattern": "^.*$"
                  },
                  "recipient_name": {
                    "description": "The name of the party.",
                    "type": "object",
                    "title": "Name",
                    "properties": {
                      "prefix": {
                        "type": "string",
                        "description": "The prefix, or title, to the party's name.",
                        "maxLength": 140
                      },
                      "given_name": {
                        "type": "string",
                        "description": "When the party is a person, the party's given, or first, name.",
                        "maxLength": 140
                      },
                      "surname": {
                        "type": "string",
                        "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
                        "maxLength": 140
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
                        "maxLength": 140
                      },
                      "suffix": {
                        "type": "string",
                        "description": "The suffix for the party's name.",
                        "maxLength": 140
                      },
                      "alternate_full_name": {
                        "type": "string",
                        "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
                        "maxLength": 300
                      },
                      "full_name": {
                        "type": "string",
                        "description": "When the party is a person, the party's full name.",
                        "maxLength": 300
                      }
                    }
                  },
                  "recipient_wallet": {
                    "description": "The wallet where the recipient receives the payout. Payouts to Venmo recipients require a 'note' string and a US mobile phone number.",
                    "title": "Recipient wallet",
                    "type": "string",
                    "default": "PAYPAL",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "PAYPAL",
                      "VENMO",
                      "RECIPIENT_SELECTED"
                    ]
                  },
                  "purpose": {
                    "description": "The purpose of the transaction.",
                    "type": "string",
                    "title": "Purpose",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^[A-Z0-9_]+$",
                    "enum": [
                      "AWARDS",
                      "PRIZES",
                      "DONATIONS",
                      "GOODS",
                      "SERVICES",
                      "REBATES",
                      "CASHBACK",
                      "DISCOUNTS",
                      "NON_GOODS_OR_SERVICES"
                    ]
                  }
                },
                "required": [
                  "amount",
                  "receiver"
                ]
              },
              "currency_conversion": {
                "description": "The currency conversion resource.",
                "type": "object",
                "title": "Currency conversion resource",
                "properties": {
                  "from_amount": {
                    "type": "object",
                    "title": "Currency",
                    "description": "The amount that is converted from.",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "to_amount": {
                    "type": "object",
                    "title": "Currency",
                    "description": "The amount that is converted to.",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "exchange_rate": {
                    "type": "string",
                    "description": "The exchange rate that is applied for this payout.",
                    "pattern": "^.*$",
                    "minLength": 0,
                    "maxLength": 30
                  }
                }
              },
              "time_processed": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "minLength": 1,
                "maxLength": 100
              },
              "errors": {
                "type": "object",
                "title": "Error",
                "description": "The error details.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The human-readable, unique name of the error."
                  },
                  "message": {
                    "type": "string",
                    "description": "The message that describes the error."
                  },
                  "debug_id": {
                    "type": "string",
                    "description": "The PayPal internal ID. Used for correlation purposes."
                  },
                  "information_link": {
                    "type": "string",
                    "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                    "readOnly": true
                  },
                  "details": {
                    "type": "array",
                    "description": "An array of additional details about the error.",
                    "items": {
                      "title": "Error Details",
                      "type": "object",
                      "description": "The error details. Required for client-side `4XX` errors.",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the field that caused the error."
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                          "default": "body"
                        },
                        "issue": {
                          "type": "string",
                          "description": "The unique, fine-grained application-level error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                        }
                      },
                      "required": [
                        "issue"
                      ]
                    }
                  },
                  "links": {
                    "type": "array",
                    "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "title": "Link Description",
                      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                      "required": [
                        "href",
                        "rel"
                      ],
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                        },
                        "rel": {
                          "type": "string",
                          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                        },
                        "method": {
                          "type": "string",
                          "description": "The HTTP method required to make the related call.",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "HEAD",
                            "CONNECT",
                            "OPTIONS",
                            "PATCH"
                          ]
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "required": [
                  "name",
                  "message",
                  "debug_id"
                ]
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  }
                },
                "minItems": 0,
                "maxItems": 15000
              }
            },
            "required": [
              "payout_item_id",
              "payout_batch_id",
              "payout_item"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts-item__payout_item_id_/output-404.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts-item__payout_item_id_/output-500.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/get_v1_payments_payouts-item__payout_item_id_/output-default.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          }
        ]
      }
    },
    {
      "id": "post_v1_payments_payouts-item__payout_item_id__cancel",
      "operationId": "payouts-item.cancel",
      "name": "Payouts Item Cancel",
      "description": "Cancel unclaimed payout item",
      "schema": {
        "tags": [
          "payouts-item"
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts-item__payout_item_id__cancel/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/v1/payments/payouts-item/{payout_item_id}/cancel"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "payout_item_id"
              ],
              "properties": {
                "payout_item_id": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "pattern": "^.*$",
                  "description": "The ID of the payout item to cancel."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts-item__payout_item_id__cancel/output-200.schema.json",
            "type": "object",
            "title": "Payout Item",
            "description": "The payout item status and other details. A <code>payout_item_id</code> helps you identify denied payments. If a payment is denied, you can use the <code>payout_item_id</code> to identify the payment even if it lacks a <code>transaction_id</code>.",
            "properties": {
              "payout_item_id": {
                "type": "string",
                "description": "The ID for the payout item. Visible when you show details for a payout.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "transaction_id": {
                "type": "string",
                "description": "The PayPal-generated ID for the transaction.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "activity_id": {
                "type": "string",
                "description": "The unique PayPal-generated common ID that links the sender- and receiver-side transactions. Used for tracking.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "transaction_status": {
                "title": "Transaction status",
                "description": "The item transaction status.<blockquote><strong>Note:</strong> For <code>POST/v1/payments/payouts-item/{payout_item_id}/cancel</code>, the only possible <code>transaction_status</code> value is <code>RETURNED</code>.</blockquote>",
                "type": "string",
                "minLength": 1,
                "maxLength": 36,
                "pattern": "^[0-9A-Z_]+$",
                "enum": [
                  "SUCCESS",
                  "FAILED",
                  "PENDING",
                  "UNCLAIMED",
                  "RETURNED",
                  "ONHOLD",
                  "BLOCKED",
                  "REFUNDED",
                  "REVERSED"
                ]
              },
              "payout_item_fee": {
                "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                "type": "object",
                "title": "Currency",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                  },
                  "value": {
                    "type": "string",
                    "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                  }
                },
                "required": [
                  "currency",
                  "value"
                ]
              },
              "payout_batch_id": {
                "type": "string",
                "description": "The PayPal-generated ID for the payout batch.",
                "minLength": 0,
                "maxLength": 30,
                "pattern": "^.*$"
              },
              "sender_batch_id": {
                "type": "string",
                "description": "A sender-specified ID. Tracks the payout in an accounting system. Should be unique within 30 days.",
                "minLength": 0,
                "maxLength": 256,
                "pattern": "^.*$"
              },
              "payout_item": {
                "description": "The details for a sender-created payout to a single recipient.",
                "type": "object",
                "title": "Payout Item Detail",
                "properties": {
                  "recipient_type": {
                    "title": "Recipient type",
                    "description": "The ID type that identifies the payment receiver.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "EMAIL",
                      "PHONE",
                      "PAYPAL_ID"
                    ]
                  },
                  "amount": {
                    "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
                    "type": "object",
                    "title": "Currency",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "note": {
                    "type": "string",
                    "description": "The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.",
                    "minLength": 0,
                    "maxLength": 4000,
                    "pattern": "^.*$"
                  },
                  "receiver": {
                    "type": "string",
                    "description": "The receiver of the payment. Corresponds to the `recipient_type` value in the request.",
                    "minLength": 0,
                    "maxLength": 127,
                    "pattern": "^.*$"
                  },
                  "sender_item_id": {
                    "type": "string",
                    "description": "A sender-specified ID number. Tracks the payout in an accounting system.",
                    "minLength": 0,
                    "maxLength": 63,
                    "pattern": "^.*$"
                  },
                  "recipient_name": {
                    "description": "The name of the party.",
                    "type": "object",
                    "title": "Name",
                    "properties": {
                      "prefix": {
                        "type": "string",
                        "description": "The prefix, or title, to the party's name.",
                        "maxLength": 140
                      },
                      "given_name": {
                        "type": "string",
                        "description": "When the party is a person, the party's given, or first, name.",
                        "maxLength": 140
                      },
                      "surname": {
                        "type": "string",
                        "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
                        "maxLength": 140
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
                        "maxLength": 140
                      },
                      "suffix": {
                        "type": "string",
                        "description": "The suffix for the party's name.",
                        "maxLength": 140
                      },
                      "alternate_full_name": {
                        "type": "string",
                        "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
                        "maxLength": 300
                      },
                      "full_name": {
                        "type": "string",
                        "description": "When the party is a person, the party's full name.",
                        "maxLength": 300
                      }
                    }
                  },
                  "recipient_wallet": {
                    "description": "The wallet where the recipient receives the payout. Payouts to Venmo recipients require a 'note' string and a US mobile phone number.",
                    "title": "Recipient wallet",
                    "type": "string",
                    "default": "PAYPAL",
                    "minLength": 1,
                    "maxLength": 36,
                    "pattern": "^[0-9A-Z_]+$",
                    "enum": [
                      "PAYPAL",
                      "VENMO",
                      "RECIPIENT_SELECTED"
                    ]
                  },
                  "purpose": {
                    "description": "The purpose of the transaction.",
                    "type": "string",
                    "title": "Purpose",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^[A-Z0-9_]+$",
                    "enum": [
                      "AWARDS",
                      "PRIZES",
                      "DONATIONS",
                      "GOODS",
                      "SERVICES",
                      "REBATES",
                      "CASHBACK",
                      "DISCOUNTS",
                      "NON_GOODS_OR_SERVICES"
                    ]
                  }
                },
                "required": [
                  "amount",
                  "receiver"
                ]
              },
              "currency_conversion": {
                "description": "The currency conversion resource.",
                "type": "object",
                "title": "Currency conversion resource",
                "properties": {
                  "from_amount": {
                    "type": "object",
                    "title": "Currency",
                    "description": "The amount that is converted from.",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "to_amount": {
                    "type": "object",
                    "title": "Currency",
                    "description": "The amount that is converted to.",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/)."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)."
                      }
                    },
                    "required": [
                      "currency",
                      "value"
                    ]
                  },
                  "exchange_rate": {
                    "type": "string",
                    "description": "The exchange rate that is applied for this payout.",
                    "pattern": "^.*$",
                    "minLength": 0,
                    "maxLength": 30
                  }
                }
              },
              "time_processed": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "minLength": 1,
                "maxLength": 100
              },
              "errors": {
                "type": "object",
                "title": "Error",
                "description": "The error details.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The human-readable, unique name of the error."
                  },
                  "message": {
                    "type": "string",
                    "description": "The message that describes the error."
                  },
                  "debug_id": {
                    "type": "string",
                    "description": "The PayPal internal ID. Used for correlation purposes."
                  },
                  "information_link": {
                    "type": "string",
                    "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                    "readOnly": true
                  },
                  "details": {
                    "type": "array",
                    "description": "An array of additional details about the error.",
                    "items": {
                      "title": "Error Details",
                      "type": "object",
                      "description": "The error details. Required for client-side `4XX` errors.",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the field that caused the error."
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                          "default": "body"
                        },
                        "issue": {
                          "type": "string",
                          "description": "The unique, fine-grained application-level error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                        }
                      },
                      "required": [
                        "issue"
                      ]
                    }
                  },
                  "links": {
                    "type": "array",
                    "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "title": "Link Description",
                      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                      "required": [
                        "href",
                        "rel"
                      ],
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                        },
                        "rel": {
                          "type": "string",
                          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                        },
                        "method": {
                          "type": "string",
                          "description": "The HTTP method required to make the related call.",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "HEAD",
                            "CONNECT",
                            "OPTIONS",
                            "PATCH"
                          ]
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "required": [
                  "name",
                  "message",
                  "debug_id"
                ]
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  }
                },
                "minItems": 0,
                "maxItems": 15000
              }
            },
            "required": [
              "payout_item_id",
              "payout_batch_id",
              "payout_item"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts-item__payout_item_id__cancel/output-400.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts-item__payout_item_id__cancel/output-404.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts-item__payout_item_id__cancel/output-500.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Payouts/post_v1_payments_payouts-item__payout_item_id__cancel/output-default.schema.json",
            "type": "object",
            "title": "Error",
            "description": "The error details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The human-readable, unique name of the error."
              },
              "message": {
                "type": "string",
                "description": "The message that describes the error."
              },
              "debug_id": {
                "type": "string",
                "description": "The PayPal internal ID. Used for correlation purposes."
              },
              "information_link": {
                "type": "string",
                "description": "The information link, or URI, that shows detailed information about this error for the developer.",
                "readOnly": true
              },
              "details": {
                "type": "array",
                "description": "An array of additional details about the error.",
                "items": {
                  "title": "Error Details",
                  "type": "object",
                  "description": "The error details. Required for client-side `4XX` errors.",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field that caused the error."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
                      "default": "body"
                    },
                    "issue": {
                      "type": "string",
                      "description": "The unique, fine-grained application-level error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
                    }
                  },
                  "required": [
                    "issue"
                  ]
                }
              },
              "links": {
                "type": "array",
                "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "title": "Link Description",
                  "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
                  "required": [
                    "href",
                    "rel"
                  ],
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
                    },
                    "rel": {
                      "type": "string",
                      "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method required to make the related call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "HEAD",
                        "CONNECT",
                        "OPTIONS",
                        "PATCH"
                      ]
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "required": [
              "name",
              "message",
              "debug_id"
            ]
          }
        ]
      }
    }
  ],
  "references": {
    "baseURL": {
      "type": "string",
      "enum": [
        "https://api-m.sandbox.paypal.com",
        "https://api-m.paypal.com"
      ]
    },
    "queryDesc": "Query parameters sent with the request",
    "paramDesc": "URL parameters sent with the request",
    "headerDesc": "HTTP headers sent when making the request",
    "dataDesc": "Data sent with the request",
    "schema": "https://json-schema.org/draft/2020-12/schema"
  },
  "securitySchemes": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flows": {
        "clientCredentials": {
          "tokenUrl": "/v1/oauth2/token",
          "scopes": {
            "https://uri.paypal.com/payments/payouts": "Payout to a list of recipients.",
            "https://uri.paypal.com/services/payments/payouts-item/reverse": "For reversing a completed payout item."
          }
        }
      }
    }
  }
}