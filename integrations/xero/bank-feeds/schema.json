{
  "name": "Xero Bank Feeds API",
  "description": "The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.",
  "nodes": [
    {
      "id": "get_FeedConnections",
      "operationId": "getFeedConnections",
      "name": "Get Feed Connections",
      "description": "Searches for feed connections",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_FeedConnections/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/FeedConnections"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "example": 1,
                  "description": "Page number which specifies the set of records to retrieve. By default the number of the records per set is 10. Example - https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?page=1 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                },
                "pageSize": {
                  "type": "integer",
                  "example": 100,
                  "description": "Page size which specifies how many records per page will be returned (default 10). Example - https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?pageSize=100 to specify page size of 100."
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_FeedConnections/output-202.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "externalDocs": {
                    "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                      "description": "GUID used to identify the Account."
                    },
                    "accountToken": {
                      "type": "string",
                      "example": "10000123",
                      "maximum": 50,
                      "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
                    },
                    "accountNumber": {
                      "type": "string",
                      "example": "3809087654321500",
                      "maximum": 40,
                      "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
                    },
                    "accountName": {
                      "type": "string",
                      "example": "Joe's Savings Account",
                      "maximum": 30,
                      "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
                    },
                    "accountId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                      "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
                    },
                    "accountType": {
                      "enum": [
                        "BANK",
                        "CREDITCARD"
                      ],
                      "example": "BANK",
                      "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
                    },
                    "currency": {
                      "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                      "example": "AUD",
                      "type": "string",
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZMK",
                        "ZWD"
                      ]
                    },
                    "country": {
                      "type": "string",
                      "example": "GB",
                      "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                      "enum": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CW",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GQ",
                        "GR",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SX",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "XK",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "REJECTED"
                      ],
                      "example": "REJECTED",
                      "description": "the current status of the feed connection"
                    },
                    "error": {
                      "type": "object",
                      "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable high level error description.",
                          "example": "Invalid Application"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The numeric HTTP Status Code, e.g. 404",
                          "example": 403
                        },
                        "detail": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable detailed error description.",
                          "example": "The application has not been configured to use these API endpoints."
                        },
                        "type": {
                          "type": "string",
                          "description": "Identifies the type of error.",
                          "enum": [
                            "invalid-request",
                            "invalid-application",
                            "invalid-feed-connection",
                            "duplicate-statement",
                            "invalid-end-balance",
                            "invalid-start-and-end-date",
                            "invalid-start-date",
                            "internal-error",
                            "feed-already-connected-in-current-organisation",
                            "invalid-end-date",
                            "statement-not-found",
                            "feed-connected-in-different-organisation",
                            "feed-already-connected-in-different-organisation",
                            "bank-feed-not-found",
                            "invalid-country-specified",
                            "invalid-organisation-bank-feeds",
                            "invalid-organisation-multi-currency",
                            "invalid-feed-connection-for-organisation",
                            "invalid-user-role",
                            "account-not-valid",
                            "feed-not-found-or-already-deleted"
                          ],
                          "example": "invalid-application"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": "post_FeedConnections",
      "operationId": "createFeedConnections",
      "name": "Create Feed Connections",
      "description": "Create one or more new feed connection",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_FeedConnections/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/FeedConnections"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Idempotency-Key": {
                  "type": "string",
                  "description": "This allows you to safely retry requests without the risk of duplicate processing. 128 character max."
                },
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "Feed Connection(s) array object in the body",
              "properties": {
                "externalDocs": {
                  "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                },
                "type": "object",
                "properties": {
                  "pagination": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                      },
                      "pageSize": {
                        "type": "integer",
                        "example": 10,
                        "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                      },
                      "pageCount": {
                        "type": "integer",
                        "example": 1,
                        "description": "Number of pages available"
                      },
                      "itemCount": {
                        "type": "integer",
                        "example": 2,
                        "description": "Number of items returned"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "externalDocs": {
                        "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                          "description": "GUID used to identify the Account."
                        },
                        "accountToken": {
                          "type": "string",
                          "example": "10000123",
                          "maximum": 50,
                          "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
                        },
                        "accountNumber": {
                          "type": "string",
                          "example": "3809087654321500",
                          "maximum": 40,
                          "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
                        },
                        "accountName": {
                          "type": "string",
                          "example": "Joe's Savings Account",
                          "maximum": 30,
                          "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
                        },
                        "accountId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                          "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
                        },
                        "accountType": {
                          "enum": [
                            "BANK",
                            "CREDITCARD"
                          ],
                          "example": "BANK",
                          "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
                        },
                        "currency": {
                          "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                          "example": "AUD",
                          "type": "string",
                          "enum": [
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHF",
                            "CLP",
                            "CNY",
                            "COP",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "EUR",
                            "FJD",
                            "FKP",
                            "GBP",
                            "GEL",
                            "GGP",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "IMP",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JEP",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SHP",
                            "SLL",
                            "SOS",
                            "SPL",
                            "SRD",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TVD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "UYU",
                            "UZS",
                            "VEF",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPF",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZMK",
                            "ZWD"
                          ]
                        },
                        "country": {
                          "type": "string",
                          "example": "GB",
                          "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                          "enum": [
                            "AD",
                            "AE",
                            "AF",
                            "AG",
                            "AI",
                            "AL",
                            "AM",
                            "AN",
                            "AO",
                            "AQ",
                            "AR",
                            "AS",
                            "AT",
                            "AU",
                            "AW",
                            "AZ",
                            "BA",
                            "BB",
                            "BD",
                            "BE",
                            "BF",
                            "BG",
                            "BH",
                            "BI",
                            "BJ",
                            "BL",
                            "BM",
                            "BN",
                            "BO",
                            "BR",
                            "BS",
                            "BT",
                            "BW",
                            "BY",
                            "BZ",
                            "CA",
                            "CC",
                            "CD",
                            "CF",
                            "CG",
                            "CH",
                            "CI",
                            "CK",
                            "CL",
                            "CM",
                            "CN",
                            "CO",
                            "CR",
                            "CU",
                            "CV",
                            "CW",
                            "CX",
                            "CY",
                            "CZ",
                            "DE",
                            "DJ",
                            "DK",
                            "DM",
                            "DO",
                            "DZ",
                            "EC",
                            "EE",
                            "EG",
                            "EH",
                            "ER",
                            "ES",
                            "ET",
                            "FI",
                            "FJ",
                            "FK",
                            "FM",
                            "FO",
                            "FR",
                            "GA",
                            "GB",
                            "GD",
                            "GE",
                            "GG",
                            "GH",
                            "GI",
                            "GL",
                            "GM",
                            "GN",
                            "GQ",
                            "GR",
                            "GT",
                            "GU",
                            "GW",
                            "GY",
                            "HK",
                            "HN",
                            "HR",
                            "HT",
                            "HU",
                            "ID",
                            "IE",
                            "IL",
                            "IM",
                            "IN",
                            "IO",
                            "IQ",
                            "IR",
                            "IS",
                            "IT",
                            "JE",
                            "JM",
                            "JO",
                            "JP",
                            "KE",
                            "KG",
                            "KH",
                            "KI",
                            "KM",
                            "KN",
                            "KP",
                            "KR",
                            "KW",
                            "KY",
                            "KZ",
                            "LA",
                            "LB",
                            "LC",
                            "LI",
                            "LK",
                            "LR",
                            "LS",
                            "LT",
                            "LU",
                            "LV",
                            "LY",
                            "MA",
                            "MC",
                            "MD",
                            "ME",
                            "MF",
                            "MG",
                            "MH",
                            "MK",
                            "ML",
                            "MM",
                            "MN",
                            "MO",
                            "MP",
                            "MR",
                            "MS",
                            "MT",
                            "MU",
                            "MV",
                            "MW",
                            "MX",
                            "MY",
                            "MZ",
                            "NA",
                            "NC",
                            "NE",
                            "NG",
                            "NI",
                            "NL",
                            "NO",
                            "NP",
                            "NR",
                            "NU",
                            "NZ",
                            "OM",
                            "PA",
                            "PE",
                            "PF",
                            "PG",
                            "PH",
                            "PK",
                            "PL",
                            "PM",
                            "PN",
                            "PR",
                            "PS",
                            "PT",
                            "PW",
                            "PY",
                            "QA",
                            "RE",
                            "RO",
                            "RS",
                            "RU",
                            "RW",
                            "SA",
                            "SB",
                            "SC",
                            "SD",
                            "SE",
                            "SG",
                            "SH",
                            "SI",
                            "SJ",
                            "SK",
                            "SL",
                            "SM",
                            "SN",
                            "SO",
                            "SR",
                            "SS",
                            "ST",
                            "SV",
                            "SX",
                            "SY",
                            "SZ",
                            "TC",
                            "TD",
                            "TG",
                            "TH",
                            "TJ",
                            "TK",
                            "TL",
                            "TM",
                            "TN",
                            "TO",
                            "TR",
                            "TT",
                            "TV",
                            "TW",
                            "TZ",
                            "UA",
                            "UG",
                            "US",
                            "UY",
                            "UZ",
                            "VA",
                            "VC",
                            "VE",
                            "VG",
                            "VI",
                            "VN",
                            "VU",
                            "WF",
                            "WS",
                            "XK",
                            "YE",
                            "YT",
                            "ZA",
                            "ZM",
                            "ZW"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "REJECTED"
                          ],
                          "example": "REJECTED",
                          "description": "the current status of the feed connection"
                        },
                        "error": {
                          "type": "object",
                          "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maximum": 255,
                              "description": "Human readable high level error description.",
                              "example": "Invalid Application"
                            },
                            "status": {
                              "type": "integer",
                              "description": "The numeric HTTP Status Code, e.g. 404",
                              "example": 403
                            },
                            "detail": {
                              "type": "string",
                              "maximum": 255,
                              "description": "Human readable detailed error description.",
                              "example": "The application has not been configured to use these API endpoints."
                            },
                            "type": {
                              "type": "string",
                              "description": "Identifies the type of error.",
                              "enum": [
                                "invalid-request",
                                "invalid-application",
                                "invalid-feed-connection",
                                "duplicate-statement",
                                "invalid-end-balance",
                                "invalid-start-and-end-date",
                                "invalid-start-date",
                                "internal-error",
                                "feed-already-connected-in-current-organisation",
                                "invalid-end-date",
                                "statement-not-found",
                                "feed-connected-in-different-organisation",
                                "feed-already-connected-in-different-organisation",
                                "bank-feed-not-found",
                                "invalid-country-specified",
                                "invalid-organisation-bank-feeds",
                                "invalid-organisation-multi-currency",
                                "invalid-feed-connection-for-organisation",
                                "invalid-user-role",
                                "account-not-valid",
                                "feed-not-found-or-already-deleted"
                              ],
                              "example": "invalid-application"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_FeedConnections/output-202.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "externalDocs": {
                    "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                      "description": "GUID used to identify the Account."
                    },
                    "accountToken": {
                      "type": "string",
                      "example": "10000123",
                      "maximum": 50,
                      "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
                    },
                    "accountNumber": {
                      "type": "string",
                      "example": "3809087654321500",
                      "maximum": 40,
                      "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
                    },
                    "accountName": {
                      "type": "string",
                      "example": "Joe's Savings Account",
                      "maximum": 30,
                      "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
                    },
                    "accountId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                      "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
                    },
                    "accountType": {
                      "enum": [
                        "BANK",
                        "CREDITCARD"
                      ],
                      "example": "BANK",
                      "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
                    },
                    "currency": {
                      "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                      "example": "AUD",
                      "type": "string",
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZMK",
                        "ZWD"
                      ]
                    },
                    "country": {
                      "type": "string",
                      "example": "GB",
                      "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                      "enum": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CW",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GQ",
                        "GR",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SX",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "XK",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "REJECTED"
                      ],
                      "example": "REJECTED",
                      "description": "the current status of the feed connection"
                    },
                    "error": {
                      "type": "object",
                      "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable high level error description.",
                          "example": "Invalid Application"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The numeric HTTP Status Code, e.g. 404",
                          "example": 403
                        },
                        "detail": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable detailed error description.",
                          "example": "The application has not been configured to use these API endpoints."
                        },
                        "type": {
                          "type": "string",
                          "description": "Identifies the type of error.",
                          "enum": [
                            "invalid-request",
                            "invalid-application",
                            "invalid-feed-connection",
                            "duplicate-statement",
                            "invalid-end-balance",
                            "invalid-start-and-end-date",
                            "invalid-start-date",
                            "internal-error",
                            "feed-already-connected-in-current-organisation",
                            "invalid-end-date",
                            "statement-not-found",
                            "feed-connected-in-different-organisation",
                            "feed-already-connected-in-different-organisation",
                            "bank-feed-not-found",
                            "invalid-country-specified",
                            "invalid-organisation-bank-feeds",
                            "invalid-organisation-multi-currency",
                            "invalid-feed-connection-for-organisation",
                            "invalid-user-role",
                            "account-not-valid",
                            "feed-not-found-or-already-deleted"
                          ],
                          "example": "invalid-application"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_FeedConnections/output-400.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "externalDocs": {
                    "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                      "description": "GUID used to identify the Account."
                    },
                    "accountToken": {
                      "type": "string",
                      "example": "10000123",
                      "maximum": 50,
                      "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
                    },
                    "accountNumber": {
                      "type": "string",
                      "example": "3809087654321500",
                      "maximum": 40,
                      "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
                    },
                    "accountName": {
                      "type": "string",
                      "example": "Joe's Savings Account",
                      "maximum": 30,
                      "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
                    },
                    "accountId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                      "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
                    },
                    "accountType": {
                      "enum": [
                        "BANK",
                        "CREDITCARD"
                      ],
                      "example": "BANK",
                      "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
                    },
                    "currency": {
                      "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                      "example": "AUD",
                      "type": "string",
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZMK",
                        "ZWD"
                      ]
                    },
                    "country": {
                      "type": "string",
                      "example": "GB",
                      "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                      "enum": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CW",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GQ",
                        "GR",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SX",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "XK",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "REJECTED"
                      ],
                      "example": "REJECTED",
                      "description": "the current status of the feed connection"
                    },
                    "error": {
                      "type": "object",
                      "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable high level error description.",
                          "example": "Invalid Application"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The numeric HTTP Status Code, e.g. 404",
                          "example": 403
                        },
                        "detail": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable detailed error description.",
                          "example": "The application has not been configured to use these API endpoints."
                        },
                        "type": {
                          "type": "string",
                          "description": "Identifies the type of error.",
                          "enum": [
                            "invalid-request",
                            "invalid-application",
                            "invalid-feed-connection",
                            "duplicate-statement",
                            "invalid-end-balance",
                            "invalid-start-and-end-date",
                            "invalid-start-date",
                            "internal-error",
                            "feed-already-connected-in-current-organisation",
                            "invalid-end-date",
                            "statement-not-found",
                            "feed-connected-in-different-organisation",
                            "feed-already-connected-in-different-organisation",
                            "bank-feed-not-found",
                            "invalid-country-specified",
                            "invalid-organisation-bank-feeds",
                            "invalid-organisation-multi-currency",
                            "invalid-feed-connection-for-organisation",
                            "invalid-user-role",
                            "account-not-valid",
                            "feed-not-found-or-already-deleted"
                          ],
                          "example": "invalid-application"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": "get_FeedConnections__id_",
      "operationId": "getFeedConnection",
      "name": "Get Feed Connection",
      "description": "Retrieve single feed connection based on a unique id provided",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_FeedConnections__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/FeedConnections/{id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for retrieving single object"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_FeedConnections__id_/output-200.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                "description": "GUID used to identify the Account."
              },
              "accountToken": {
                "type": "string",
                "example": "10000123",
                "maximum": 50,
                "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
              },
              "accountNumber": {
                "type": "string",
                "example": "3809087654321500",
                "maximum": 40,
                "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
              },
              "accountName": {
                "type": "string",
                "example": "Joe's Savings Account",
                "maximum": 30,
                "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
              },
              "accountId": {
                "type": "string",
                "format": "uuid",
                "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
              },
              "accountType": {
                "enum": [
                  "BANK",
                  "CREDITCARD"
                ],
                "example": "BANK",
                "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
              },
              "currency": {
                "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                "example": "AUD",
                "type": "string",
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRU",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STN",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZMK",
                  "ZWD"
                ]
              },
              "country": {
                "type": "string",
                "example": "GB",
                "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                "enum": [
                  "AD",
                  "AE",
                  "AF",
                  "AG",
                  "AI",
                  "AL",
                  "AM",
                  "AN",
                  "AO",
                  "AQ",
                  "AR",
                  "AS",
                  "AT",
                  "AU",
                  "AW",
                  "AZ",
                  "BA",
                  "BB",
                  "BD",
                  "BE",
                  "BF",
                  "BG",
                  "BH",
                  "BI",
                  "BJ",
                  "BL",
                  "BM",
                  "BN",
                  "BO",
                  "BR",
                  "BS",
                  "BT",
                  "BW",
                  "BY",
                  "BZ",
                  "CA",
                  "CC",
                  "CD",
                  "CF",
                  "CG",
                  "CH",
                  "CI",
                  "CK",
                  "CL",
                  "CM",
                  "CN",
                  "CO",
                  "CR",
                  "CU",
                  "CV",
                  "CW",
                  "CX",
                  "CY",
                  "CZ",
                  "DE",
                  "DJ",
                  "DK",
                  "DM",
                  "DO",
                  "DZ",
                  "EC",
                  "EE",
                  "EG",
                  "EH",
                  "ER",
                  "ES",
                  "ET",
                  "FI",
                  "FJ",
                  "FK",
                  "FM",
                  "FO",
                  "FR",
                  "GA",
                  "GB",
                  "GD",
                  "GE",
                  "GG",
                  "GH",
                  "GI",
                  "GL",
                  "GM",
                  "GN",
                  "GQ",
                  "GR",
                  "GT",
                  "GU",
                  "GW",
                  "GY",
                  "HK",
                  "HN",
                  "HR",
                  "HT",
                  "HU",
                  "ID",
                  "IE",
                  "IL",
                  "IM",
                  "IN",
                  "IO",
                  "IQ",
                  "IR",
                  "IS",
                  "IT",
                  "JE",
                  "JM",
                  "JO",
                  "JP",
                  "KE",
                  "KG",
                  "KH",
                  "KI",
                  "KM",
                  "KN",
                  "KP",
                  "KR",
                  "KW",
                  "KY",
                  "KZ",
                  "LA",
                  "LB",
                  "LC",
                  "LI",
                  "LK",
                  "LR",
                  "LS",
                  "LT",
                  "LU",
                  "LV",
                  "LY",
                  "MA",
                  "MC",
                  "MD",
                  "ME",
                  "MF",
                  "MG",
                  "MH",
                  "MK",
                  "ML",
                  "MM",
                  "MN",
                  "MO",
                  "MP",
                  "MR",
                  "MS",
                  "MT",
                  "MU",
                  "MV",
                  "MW",
                  "MX",
                  "MY",
                  "MZ",
                  "NA",
                  "NC",
                  "NE",
                  "NG",
                  "NI",
                  "NL",
                  "NO",
                  "NP",
                  "NR",
                  "NU",
                  "NZ",
                  "OM",
                  "PA",
                  "PE",
                  "PF",
                  "PG",
                  "PH",
                  "PK",
                  "PL",
                  "PM",
                  "PN",
                  "PR",
                  "PS",
                  "PT",
                  "PW",
                  "PY",
                  "QA",
                  "RE",
                  "RO",
                  "RS",
                  "RU",
                  "RW",
                  "SA",
                  "SB",
                  "SC",
                  "SD",
                  "SE",
                  "SG",
                  "SH",
                  "SI",
                  "SJ",
                  "SK",
                  "SL",
                  "SM",
                  "SN",
                  "SO",
                  "SR",
                  "SS",
                  "ST",
                  "SV",
                  "SX",
                  "SY",
                  "SZ",
                  "TC",
                  "TD",
                  "TG",
                  "TH",
                  "TJ",
                  "TK",
                  "TL",
                  "TM",
                  "TN",
                  "TO",
                  "TR",
                  "TT",
                  "TV",
                  "TW",
                  "TZ",
                  "UA",
                  "UG",
                  "US",
                  "UY",
                  "UZ",
                  "VA",
                  "VC",
                  "VE",
                  "VG",
                  "VI",
                  "VN",
                  "VU",
                  "WF",
                  "WS",
                  "XK",
                  "YE",
                  "YT",
                  "ZA",
                  "ZM",
                  "ZW"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "REJECTED"
                ],
                "example": "REJECTED",
                "description": "the current status of the feed connection"
              },
              "error": {
                "type": "object",
                "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                "properties": {
                  "title": {
                    "type": "string",
                    "maximum": 255,
                    "description": "Human readable high level error description.",
                    "example": "Invalid Application"
                  },
                  "status": {
                    "type": "integer",
                    "description": "The numeric HTTP Status Code, e.g. 404",
                    "example": 403
                  },
                  "detail": {
                    "type": "string",
                    "maximum": 255,
                    "description": "Human readable detailed error description.",
                    "example": "The application has not been configured to use these API endpoints."
                  },
                  "type": {
                    "type": "string",
                    "description": "Identifies the type of error.",
                    "enum": [
                      "invalid-request",
                      "invalid-application",
                      "invalid-feed-connection",
                      "duplicate-statement",
                      "invalid-end-balance",
                      "invalid-start-and-end-date",
                      "invalid-start-date",
                      "internal-error",
                      "feed-already-connected-in-current-organisation",
                      "invalid-end-date",
                      "statement-not-found",
                      "feed-connected-in-different-organisation",
                      "feed-already-connected-in-different-organisation",
                      "bank-feed-not-found",
                      "invalid-country-specified",
                      "invalid-organisation-bank-feeds",
                      "invalid-organisation-multi-currency",
                      "invalid-feed-connection-for-organisation",
                      "invalid-user-role",
                      "account-not-valid",
                      "feed-not-found-or-already-deleted"
                    ],
                    "example": "invalid-application"
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": "post_FeedConnections_DeleteRequests",
      "operationId": "deleteFeedConnections",
      "name": "Delete Feed Connections",
      "description": "Delete an existing feed connection",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_FeedConnections_DeleteRequests/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/FeedConnections/DeleteRequests"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Idempotency-Key": {
                  "type": "string",
                  "description": "This allows you to safely retry requests without the risk of duplicate processing. 128 character max."
                },
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "Feed Connections array object in the body",
              "properties": {
                "externalDocs": {
                  "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                },
                "type": "object",
                "properties": {
                  "pagination": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                      },
                      "pageSize": {
                        "type": "integer",
                        "example": 10,
                        "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                      },
                      "pageCount": {
                        "type": "integer",
                        "example": 1,
                        "description": "Number of pages available"
                      },
                      "itemCount": {
                        "type": "integer",
                        "example": 2,
                        "description": "Number of items returned"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "externalDocs": {
                        "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                          "description": "GUID used to identify the Account."
                        },
                        "accountToken": {
                          "type": "string",
                          "example": "10000123",
                          "maximum": 50,
                          "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
                        },
                        "accountNumber": {
                          "type": "string",
                          "example": "3809087654321500",
                          "maximum": 40,
                          "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
                        },
                        "accountName": {
                          "type": "string",
                          "example": "Joe's Savings Account",
                          "maximum": 30,
                          "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
                        },
                        "accountId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                          "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
                        },
                        "accountType": {
                          "enum": [
                            "BANK",
                            "CREDITCARD"
                          ],
                          "example": "BANK",
                          "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
                        },
                        "currency": {
                          "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                          "example": "AUD",
                          "type": "string",
                          "enum": [
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHF",
                            "CLP",
                            "CNY",
                            "COP",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "EUR",
                            "FJD",
                            "FKP",
                            "GBP",
                            "GEL",
                            "GGP",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "IMP",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JEP",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SHP",
                            "SLL",
                            "SOS",
                            "SPL",
                            "SRD",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TVD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "UYU",
                            "UZS",
                            "VEF",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPF",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZMK",
                            "ZWD"
                          ]
                        },
                        "country": {
                          "type": "string",
                          "example": "GB",
                          "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                          "enum": [
                            "AD",
                            "AE",
                            "AF",
                            "AG",
                            "AI",
                            "AL",
                            "AM",
                            "AN",
                            "AO",
                            "AQ",
                            "AR",
                            "AS",
                            "AT",
                            "AU",
                            "AW",
                            "AZ",
                            "BA",
                            "BB",
                            "BD",
                            "BE",
                            "BF",
                            "BG",
                            "BH",
                            "BI",
                            "BJ",
                            "BL",
                            "BM",
                            "BN",
                            "BO",
                            "BR",
                            "BS",
                            "BT",
                            "BW",
                            "BY",
                            "BZ",
                            "CA",
                            "CC",
                            "CD",
                            "CF",
                            "CG",
                            "CH",
                            "CI",
                            "CK",
                            "CL",
                            "CM",
                            "CN",
                            "CO",
                            "CR",
                            "CU",
                            "CV",
                            "CW",
                            "CX",
                            "CY",
                            "CZ",
                            "DE",
                            "DJ",
                            "DK",
                            "DM",
                            "DO",
                            "DZ",
                            "EC",
                            "EE",
                            "EG",
                            "EH",
                            "ER",
                            "ES",
                            "ET",
                            "FI",
                            "FJ",
                            "FK",
                            "FM",
                            "FO",
                            "FR",
                            "GA",
                            "GB",
                            "GD",
                            "GE",
                            "GG",
                            "GH",
                            "GI",
                            "GL",
                            "GM",
                            "GN",
                            "GQ",
                            "GR",
                            "GT",
                            "GU",
                            "GW",
                            "GY",
                            "HK",
                            "HN",
                            "HR",
                            "HT",
                            "HU",
                            "ID",
                            "IE",
                            "IL",
                            "IM",
                            "IN",
                            "IO",
                            "IQ",
                            "IR",
                            "IS",
                            "IT",
                            "JE",
                            "JM",
                            "JO",
                            "JP",
                            "KE",
                            "KG",
                            "KH",
                            "KI",
                            "KM",
                            "KN",
                            "KP",
                            "KR",
                            "KW",
                            "KY",
                            "KZ",
                            "LA",
                            "LB",
                            "LC",
                            "LI",
                            "LK",
                            "LR",
                            "LS",
                            "LT",
                            "LU",
                            "LV",
                            "LY",
                            "MA",
                            "MC",
                            "MD",
                            "ME",
                            "MF",
                            "MG",
                            "MH",
                            "MK",
                            "ML",
                            "MM",
                            "MN",
                            "MO",
                            "MP",
                            "MR",
                            "MS",
                            "MT",
                            "MU",
                            "MV",
                            "MW",
                            "MX",
                            "MY",
                            "MZ",
                            "NA",
                            "NC",
                            "NE",
                            "NG",
                            "NI",
                            "NL",
                            "NO",
                            "NP",
                            "NR",
                            "NU",
                            "NZ",
                            "OM",
                            "PA",
                            "PE",
                            "PF",
                            "PG",
                            "PH",
                            "PK",
                            "PL",
                            "PM",
                            "PN",
                            "PR",
                            "PS",
                            "PT",
                            "PW",
                            "PY",
                            "QA",
                            "RE",
                            "RO",
                            "RS",
                            "RU",
                            "RW",
                            "SA",
                            "SB",
                            "SC",
                            "SD",
                            "SE",
                            "SG",
                            "SH",
                            "SI",
                            "SJ",
                            "SK",
                            "SL",
                            "SM",
                            "SN",
                            "SO",
                            "SR",
                            "SS",
                            "ST",
                            "SV",
                            "SX",
                            "SY",
                            "SZ",
                            "TC",
                            "TD",
                            "TG",
                            "TH",
                            "TJ",
                            "TK",
                            "TL",
                            "TM",
                            "TN",
                            "TO",
                            "TR",
                            "TT",
                            "TV",
                            "TW",
                            "TZ",
                            "UA",
                            "UG",
                            "US",
                            "UY",
                            "UZ",
                            "VA",
                            "VC",
                            "VE",
                            "VG",
                            "VI",
                            "VN",
                            "VU",
                            "WF",
                            "WS",
                            "XK",
                            "YE",
                            "YT",
                            "ZA",
                            "ZM",
                            "ZW"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "REJECTED"
                          ],
                          "example": "REJECTED",
                          "description": "the current status of the feed connection"
                        },
                        "error": {
                          "type": "object",
                          "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                          "properties": {
                            "title": {
                              "type": "string",
                              "maximum": 255,
                              "description": "Human readable high level error description.",
                              "example": "Invalid Application"
                            },
                            "status": {
                              "type": "integer",
                              "description": "The numeric HTTP Status Code, e.g. 404",
                              "example": 403
                            },
                            "detail": {
                              "type": "string",
                              "maximum": 255,
                              "description": "Human readable detailed error description.",
                              "example": "The application has not been configured to use these API endpoints."
                            },
                            "type": {
                              "type": "string",
                              "description": "Identifies the type of error.",
                              "enum": [
                                "invalid-request",
                                "invalid-application",
                                "invalid-feed-connection",
                                "duplicate-statement",
                                "invalid-end-balance",
                                "invalid-start-and-end-date",
                                "invalid-start-date",
                                "internal-error",
                                "feed-already-connected-in-current-organisation",
                                "invalid-end-date",
                                "statement-not-found",
                                "feed-connected-in-different-organisation",
                                "feed-already-connected-in-different-organisation",
                                "bank-feed-not-found",
                                "invalid-country-specified",
                                "invalid-organisation-bank-feeds",
                                "invalid-organisation-multi-currency",
                                "invalid-feed-connection-for-organisation",
                                "invalid-user-role",
                                "account-not-valid",
                                "feed-not-found-or-already-deleted"
                              ],
                              "example": "invalid-application"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_FeedConnections_DeleteRequests/output-202.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "externalDocs": {
                    "url": "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                      "description": "GUID used to identify the Account."
                    },
                    "accountToken": {
                      "type": "string",
                      "example": "10000123",
                      "maximum": 50,
                      "description": "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."
                    },
                    "accountNumber": {
                      "type": "string",
                      "example": "3809087654321500",
                      "maximum": 40,
                      "description": "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."
                    },
                    "accountName": {
                      "type": "string",
                      "example": "Joe's Savings Account",
                      "maximum": 30,
                      "description": "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."
                    },
                    "accountId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "079a88ea-276d-41fb-a1f1-366ef3e22921",
                      "description": "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."
                    },
                    "accountType": {
                      "enum": [
                        "BANK",
                        "CREDITCARD"
                      ],
                      "example": "BANK",
                      "description": "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."
                    },
                    "currency": {
                      "description": "3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.",
                      "example": "AUD",
                      "type": "string",
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRU",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STN",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZMK",
                        "ZWD"
                      ]
                    },
                    "country": {
                      "type": "string",
                      "example": "GB",
                      "description": "ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.",
                      "enum": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CW",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GQ",
                        "GR",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SX",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "XK",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "REJECTED"
                      ],
                      "example": "REJECTED",
                      "description": "the current status of the feed connection"
                    },
                    "error": {
                      "type": "object",
                      "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable high level error description.",
                          "example": "Invalid Application"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The numeric HTTP Status Code, e.g. 404",
                          "example": 403
                        },
                        "detail": {
                          "type": "string",
                          "maximum": 255,
                          "description": "Human readable detailed error description.",
                          "example": "The application has not been configured to use these API endpoints."
                        },
                        "type": {
                          "type": "string",
                          "description": "Identifies the type of error.",
                          "enum": [
                            "invalid-request",
                            "invalid-application",
                            "invalid-feed-connection",
                            "duplicate-statement",
                            "invalid-end-balance",
                            "invalid-start-and-end-date",
                            "invalid-start-date",
                            "internal-error",
                            "feed-already-connected-in-current-organisation",
                            "invalid-end-date",
                            "statement-not-found",
                            "feed-connected-in-different-organisation",
                            "feed-already-connected-in-different-organisation",
                            "bank-feed-not-found",
                            "invalid-country-specified",
                            "invalid-organisation-bank-feeds",
                            "invalid-organisation-multi-currency",
                            "invalid-feed-connection-for-organisation",
                            "invalid-user-role",
                            "account-not-valid",
                            "feed-not-found-or-already-deleted"
                          ],
                          "example": "invalid-application"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": "get_Statements",
      "operationId": "getStatements",
      "name": "Get Statements",
      "description": "Retrieve all statements",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_Statements/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/Statements"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "unique id for single object"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Page size which specifies how many records per page will be returned (default 10). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Xero-Application-Id": {
                  "type": "string",
                  "default": "00000000-0000-0000-0000-0000000010000"
                },
                "Xero-User-Id": {
                  "type": "string",
                  "default": "00000000-0000-0000-0000-0000030000000"
                },
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_Statements/output-200.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_Statements/output-400.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": "post_Statements",
      "operationId": "createStatements",
      "name": "Create Statements",
      "description": "Creates one or more new statements",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/Statements"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Idempotency-Key": {
                  "type": "string",
                  "description": "This allows you to safely retry requests without the risk of duplicate processing. 128 character max."
                },
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "Statements array of objects in the body",
              "properties": {
                "externalDocs": {
                  "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
                },
                "type": "object",
                "properties": {
                  "pagination": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                      },
                      "pageSize": {
                        "type": "integer",
                        "example": 10,
                        "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                      },
                      "pageCount": {
                        "type": "integer",
                        "example": 1,
                        "description": "Number of pages available"
                      },
                      "itemCount": {
                        "type": "integer",
                        "example": 2,
                        "description": "Number of items returned"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                          "description": "GUID used to identify the Statement."
                        },
                        "feedConnectionId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                          "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                        },
                        "status": {
                          "enum": [
                            "PENDING",
                            "REJECTED",
                            "DELIVERED"
                          ],
                          "example": "PENDING",
                          "description": "Current status of statements"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date",
                          "example": "2018-07-27",
                          "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date",
                          "example": "2018-07-27",
                          "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                        },
                        "startBalance": {
                          "description": "The starting balance of the statement",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "example": "9.0000",
                              "description": "decimal(19,4) unsigned Opening/closing balance amount."
                            },
                            "creditDebitIndicator": {
                              "type": "string",
                              "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                              "enum": [
                                "CREDIT",
                                "DEBIT"
                              ]
                            }
                          }
                        },
                        "endBalance": {
                          "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "example": "10.1340"
                            },
                            "creditDebitIndicator": {
                              "type": "string",
                              "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                              "enum": [
                                "CREDIT",
                                "DEBIT"
                              ]
                            }
                          }
                        },
                        "statementLines": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "the lines details for a statement",
                            "properties": {
                              "postedDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2018-06-10",
                                "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                              },
                              "description": {
                                "type": "string",
                                "example": "Description for statement line 2",
                                "maximum": 2000,
                                "description": "Transaction description"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "example": "5.00",
                                "description": "Transaction amount"
                              },
                              "creditDebitIndicator": {
                                "type": "string",
                                "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                                "enum": [
                                  "CREDIT",
                                  "DEBIT"
                                ]
                              },
                              "transactionId": {
                                "type": "string",
                                "example": "transaction-id-2",
                                "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                              },
                              "payeeName": {
                                "type": "string",
                                "example": "Payee name for statement line 2",
                                "description": "Typically the merchant or payee name",
                                "maximum": 255
                              },
                              "reference": {
                                "type": "string",
                                "example": "Reference for statement line 2",
                                "description": "Optional field to enhance the Description",
                                "maximum": 255
                              },
                              "chequeNumber": {
                                "type": "string",
                                "example": "021",
                                "description": "The cheque/check number",
                                "maximum": 20
                              },
                              "transactionType": {
                                "type": "string",
                                "example": "Refund",
                                "description": "Descriptive transaction type",
                                "maximum": 30
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                            "properties": {
                              "title": {
                                "type": "string",
                                "maximum": 255,
                                "description": "Human readable high level error description.",
                                "example": "Invalid Application"
                              },
                              "status": {
                                "type": "integer",
                                "description": "The numeric HTTP Status Code, e.g. 404",
                                "example": 403
                              },
                              "detail": {
                                "type": "string",
                                "maximum": 255,
                                "description": "Human readable detailed error description.",
                                "example": "The application has not been configured to use these API endpoints."
                              },
                              "type": {
                                "type": "string",
                                "description": "Identifies the type of error.",
                                "enum": [
                                  "invalid-request",
                                  "invalid-application",
                                  "invalid-feed-connection",
                                  "duplicate-statement",
                                  "invalid-end-balance",
                                  "invalid-start-and-end-date",
                                  "invalid-start-date",
                                  "internal-error",
                                  "feed-already-connected-in-current-organisation",
                                  "invalid-end-date",
                                  "statement-not-found",
                                  "feed-connected-in-different-organisation",
                                  "feed-already-connected-in-different-organisation",
                                  "bank-feed-not-found",
                                  "invalid-country-specified",
                                  "invalid-organisation-bank-feeds",
                                  "invalid-organisation-multi-currency",
                                  "invalid-feed-connection-for-organisation",
                                  "invalid-user-role",
                                  "account-not-valid",
                                  "feed-not-found-or-already-deleted"
                                ],
                                "example": "invalid-application"
                              }
                            }
                          }
                        },
                        "statementLineCount": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-202.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-400.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-403.schema.json",
            "type": "object",
            "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
            "properties": {
              "title": {
                "type": "string",
                "maximum": 255,
                "description": "Human readable high level error description.",
                "example": "Invalid Application"
              },
              "status": {
                "type": "integer",
                "description": "The numeric HTTP Status Code, e.g. 404",
                "example": 403
              },
              "detail": {
                "type": "string",
                "maximum": 255,
                "description": "Human readable detailed error description.",
                "example": "The application has not been configured to use these API endpoints."
              },
              "type": {
                "type": "string",
                "description": "Identifies the type of error.",
                "enum": [
                  "invalid-request",
                  "invalid-application",
                  "invalid-feed-connection",
                  "duplicate-statement",
                  "invalid-end-balance",
                  "invalid-start-and-end-date",
                  "invalid-start-date",
                  "internal-error",
                  "feed-already-connected-in-current-organisation",
                  "invalid-end-date",
                  "statement-not-found",
                  "feed-connected-in-different-organisation",
                  "feed-already-connected-in-different-organisation",
                  "bank-feed-not-found",
                  "invalid-country-specified",
                  "invalid-organisation-bank-feeds",
                  "invalid-organisation-multi-currency",
                  "invalid-feed-connection-for-organisation",
                  "invalid-user-role",
                  "account-not-valid",
                  "feed-not-found-or-already-deleted"
                ],
                "example": "invalid-application"
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-409.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-413.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-422.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/post_Statements/output-500.schema.json",
            "type": "object",
            "externalDocs": {
              "url": "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."
                  },
                  "pageSize": {
                    "type": "integer",
                    "example": 10,
                    "description": "Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."
                  },
                  "pageCount": {
                    "type": "integer",
                    "example": 1,
                    "description": "Number of pages available"
                  },
                  "itemCount": {
                    "type": "integer",
                    "example": 2,
                    "description": "Number of items returned"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                      "description": "GUID used to identify the Statement."
                    },
                    "feedConnectionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                      "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
                    },
                    "status": {
                      "enum": [
                        "PENDING",
                        "REJECTED",
                        "DELIVERED"
                      ],
                      "example": "PENDING",
                      "description": "Current status of statements"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-07-27",
                      "description": "Closing balance date ISO-8601 YYYY-MM-DD"
                    },
                    "startBalance": {
                      "description": "The starting balance of the statement",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "9.0000",
                          "description": "decimal(19,4) unsigned Opening/closing balance amount."
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "endBalance": {
                      "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "example": "10.1340"
                        },
                        "creditDebitIndicator": {
                          "type": "string",
                          "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                          "enum": [
                            "CREDIT",
                            "DEBIT"
                          ]
                        }
                      }
                    },
                    "statementLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "the lines details for a statement",
                        "properties": {
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2018-06-10",
                            "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for statement line 2",
                            "maximum": 2000,
                            "description": "Transaction description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "example": "5.00",
                            "description": "Transaction amount"
                          },
                          "creditDebitIndicator": {
                            "type": "string",
                            "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                            "enum": [
                              "CREDIT",
                              "DEBIT"
                            ]
                          },
                          "transactionId": {
                            "type": "string",
                            "example": "transaction-id-2",
                            "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                          },
                          "payeeName": {
                            "type": "string",
                            "example": "Payee name for statement line 2",
                            "description": "Typically the merchant or payee name",
                            "maximum": 255
                          },
                          "reference": {
                            "type": "string",
                            "example": "Reference for statement line 2",
                            "description": "Optional field to enhance the Description",
                            "maximum": 255
                          },
                          "chequeNumber": {
                            "type": "string",
                            "example": "021",
                            "description": "The cheque/check number",
                            "maximum": 20
                          },
                          "transactionType": {
                            "type": "string",
                            "example": "Refund",
                            "description": "Descriptive transaction type",
                            "maximum": 30
                          }
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable high level error description.",
                            "example": "Invalid Application"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The numeric HTTP Status Code, e.g. 404",
                            "example": 403
                          },
                          "detail": {
                            "type": "string",
                            "maximum": 255,
                            "description": "Human readable detailed error description.",
                            "example": "The application has not been configured to use these API endpoints."
                          },
                          "type": {
                            "type": "string",
                            "description": "Identifies the type of error.",
                            "enum": [
                              "invalid-request",
                              "invalid-application",
                              "invalid-feed-connection",
                              "duplicate-statement",
                              "invalid-end-balance",
                              "invalid-start-and-end-date",
                              "invalid-start-date",
                              "internal-error",
                              "feed-already-connected-in-current-organisation",
                              "invalid-end-date",
                              "statement-not-found",
                              "feed-connected-in-different-organisation",
                              "feed-already-connected-in-different-organisation",
                              "bank-feed-not-found",
                              "invalid-country-specified",
                              "invalid-organisation-bank-feeds",
                              "invalid-organisation-multi-currency",
                              "invalid-feed-connection-for-organisation",
                              "invalid-user-role",
                              "account-not-valid",
                              "feed-not-found-or-already-deleted"
                            ],
                            "example": "invalid-application"
                          }
                        }
                      }
                    },
                    "statementLineCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": "get_Statements__statementId_",
      "operationId": "getStatement",
      "name": "Get Statement",
      "description": "Retrieve single statement based on unique id provided",
      "schema": {
        "tags": [
          "BankFeeds"
        ],
        "security": [
          {
            "OAuth2": [
              "bankfeeds"
            ]
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_Statements__statementId_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/Statements/{statementId}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "statementId"
              ],
              "properties": {
                "statementId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "statement id for single object"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "required": [
                "Xero-Tenant-Id"
              ],
              "properties": {
                "Xero-Tenant-Id": {
                  "type": "string",
                  "description": "Xero identifier for Tenant"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Xero-Bank-Feeds-API/get_Statements__statementId_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                "description": "GUID used to identify the Statement."
              },
              "feedConnectionId": {
                "type": "string",
                "format": "uuid",
                "example": "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                "description": "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."
              },
              "status": {
                "enum": [
                  "PENDING",
                  "REJECTED",
                  "DELIVERED"
                ],
                "example": "PENDING",
                "description": "Current status of statements"
              },
              "startDate": {
                "type": "string",
                "format": "date",
                "example": "2018-07-27",
                "description": "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"
              },
              "endDate": {
                "type": "string",
                "format": "date",
                "example": "2018-07-27",
                "description": "Closing balance date ISO-8601 YYYY-MM-DD"
              },
              "startBalance": {
                "description": "The starting balance of the statement",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "9.0000",
                    "description": "decimal(19,4) unsigned Opening/closing balance amount."
                  },
                  "creditDebitIndicator": {
                    "type": "string",
                    "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                    "enum": [
                      "CREDIT",
                      "DEBIT"
                    ]
                  }
                }
              },
              "endBalance": {
                "description": "The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "10.1340"
                  },
                  "creditDebitIndicator": {
                    "type": "string",
                    "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                    "enum": [
                      "CREDIT",
                      "DEBIT"
                    ]
                  }
                }
              },
              "statementLines": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "the lines details for a statement",
                  "properties": {
                    "postedDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2018-06-10",
                      "description": "The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description for statement line 2",
                      "maximum": 2000,
                      "description": "Transaction description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": "5.00",
                      "description": "Transaction amount"
                    },
                    "creditDebitIndicator": {
                      "type": "string",
                      "description": "If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.",
                      "enum": [
                        "CREDIT",
                        "DEBIT"
                      ]
                    },
                    "transactionId": {
                      "type": "string",
                      "example": "transaction-id-2",
                      "description": "Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection."
                    },
                    "payeeName": {
                      "type": "string",
                      "example": "Payee name for statement line 2",
                      "description": "Typically the merchant or payee name",
                      "maximum": 255
                    },
                    "reference": {
                      "type": "string",
                      "example": "Reference for statement line 2",
                      "description": "Optional field to enhance the Description",
                      "maximum": 255
                    },
                    "chequeNumber": {
                      "type": "string",
                      "example": "021",
                      "description": "The cheque/check number",
                      "maximum": 20
                    },
                    "transactionType": {
                      "type": "string",
                      "example": "Refund",
                      "description": "Descriptive transaction type",
                      "maximum": 30
                    }
                  }
                }
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "maximum": 255,
                      "description": "Human readable high level error description.",
                      "example": "Invalid Application"
                    },
                    "status": {
                      "type": "integer",
                      "description": "The numeric HTTP Status Code, e.g. 404",
                      "example": 403
                    },
                    "detail": {
                      "type": "string",
                      "maximum": 255,
                      "description": "Human readable detailed error description.",
                      "example": "The application has not been configured to use these API endpoints."
                    },
                    "type": {
                      "type": "string",
                      "description": "Identifies the type of error.",
                      "enum": [
                        "invalid-request",
                        "invalid-application",
                        "invalid-feed-connection",
                        "duplicate-statement",
                        "invalid-end-balance",
                        "invalid-start-and-end-date",
                        "invalid-start-date",
                        "internal-error",
                        "feed-already-connected-in-current-organisation",
                        "invalid-end-date",
                        "statement-not-found",
                        "feed-connected-in-different-organisation",
                        "feed-already-connected-in-different-organisation",
                        "bank-feed-not-found",
                        "invalid-country-specified",
                        "invalid-organisation-bank-feeds",
                        "invalid-organisation-multi-currency",
                        "invalid-feed-connection-for-organisation",
                        "invalid-user-role",
                        "account-not-valid",
                        "feed-not-found-or-already-deleted"
                      ],
                      "example": "invalid-application"
                    }
                  }
                }
              },
              "statementLineCount": {
                "type": "integer",
                "example": 1
              }
            }
          }
        ]
      }
    }
  ],
  "references": {
    "baseURL": {
      "type": "string",
      "enum": [
        "https://api.xero.com/bankfeeds.xro/1.0"
      ]
    },
    "queryDesc": "Query parameters sent with the request",
    "paramDesc": "URL parameters sent with the request",
    "headerDesc": "HTTP headers sent when making the request",
    "dataDesc": "Data sent with the request",
    "schema": "https://json-schema.org/draft/2020-12/schema"
  },
  "securitySchemes": {
    "OAuth2": {
      "type": "oauth2",
      "description": "For more information visit https://developer.xero.com/documentation/oauth2/overview",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://login.xero.com/identity/connect/authorize",
          "tokenUrl": "https://identity.xero.com/connect/token",
          "scopes": {
            "email": "Grant read-only access to your email",
            "openid": "Grant read-only access to your open id",
            "profile": "your profile information",
            "bankfeeds": "Grant read-write access to bankfeeds"
          }
        }
      }
    }
  }
}