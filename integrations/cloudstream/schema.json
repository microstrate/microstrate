{
  "name": "Cloudstream API",
  "description": "Comprehensive API for Cloudstream Mordor services including form, generic, payment, permission, platform, product, profile, question, render, rule, team, user, contract, cron, datamapper, diff, document and more.",
  "nodes": [
    {
      "id": "post_attachment",
      "operationId": "attachmentUpsert",
      "name": "Attachment Upsert",
      "description": "ATTACHMENT - upsert",
      "schema": {
        "tags": [
          "attachment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_attachment/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/attachment"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "s3Key": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "request-attachment-download-url"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$ATTACHMENT/"
                  },
                  "topic": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_upsert-multi_answer",
      "operationId": "answerUpsertMulti",
      "name": "Answer Upsert Multi",
      "description": "ANSWER - upsert multi",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_upsert-multi_answer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/upsert-multi/answer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "answers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "body": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "example": 6500,
                                  "anyOf": [
                                    {
                                      "type": "number",
                                      "example": 6500
                                    },
                                    {
                                      "type": "string",
                                      "example": "MF Freight (Fro Pro)"
                                    },
                                    {
                                      "type": "string",
                                      "example": "danielm@mffreight.com"
                                    }
                                  ]
                                }
                              }
                            },
                            "topic": {
                              "type": "string",
                              "example": "a14655eb-b8c6-4546-ac63-669106665b56/ValueOfGoods"
                            }
                          }
                        },
                        "example": [
                          {
                            "body": {
                              "value": 6500
                            },
                            "topic": "a14655eb-b8c6-4546-ac63-669106665b56/ValueOfGoods"
                          },
                          {
                            "body": {
                              "value": 5000
                            },
                            "topic": "a14655eb-b8c6-4546-ac63-669106665b56/Warranty"
                          },
                          {
                            "body": {
                              "value": "MF Freight (Fro Pro)"
                            },
                            "topic": "a14655eb-b8c6-4546-ac63-669106665b56/CustomerBusinessName"
                          },
                          {
                            "body": {
                              "value": "danielm@mffreight.com"
                            },
                            "topic": "a14655eb-b8c6-4546-ac63-669106665b56/CustomerEmail"
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "multi-upsert-answer"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/ANSWER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_setup-2fa",
      "operationId": "2faSetupUserMfa",
      "name": "2 Fa Setup User Mfa",
      "description": "2FA - setup User MFA",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_setup-2fa/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/setup-2fa"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "example": "375582"
                      },
                      "mfa": {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string",
                            "example": "+61426124260"
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "setup-user-2fa"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_one-time-code",
      "operationId": "codeCreateOneTimeEmail",
      "name": "Code Create One Time Email",
      "description": "CODE - create one time (email)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_one-time-code/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/one-time-code"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "create-one-time-code"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CODE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "+61"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_get_config",
      "operationId": "configGetGlobal",
      "name": "Config Get Global",
      "description": "CONFIG - get (global)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": [
          {}
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_get_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/get/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_Saml2_refreshidp",
      "operationId": "configRefreshSamlIdp",
      "name": "Config Refresh Saml Idp",
      "description": "CONFIG - refresh SAML IDP",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_Saml2_refreshidp/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/Saml2/refreshidp"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": "{{evariToken}}"
                      },
                      "metaDataUrl": {
                        "type": "string",
                        "example": ""
                      },
                      "ssoKey": {
                        "type": "string",
                        "example": "saml"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-saml-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "IDP_METADATA"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_unset",
      "operationId": "configUnset",
      "name": "Config Unset",
      "description": "CONFIG - unset",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_unset/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/unset"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "body.tokenExpiry"
                        },
                        "example": [
                          "body.tokenExpiry"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "unset"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "GLOBAL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_upsert_config",
      "operationId": "configUpsertGlobal",
      "name": "Config Upsert Global",
      "description": "CONFIG - upsert (global)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_upsert_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/upsert/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": "{{evariToken}}"
                      },
                      "loginPayload": {
                        "type": "object",
                        "properties": {
                          "password": {
                            "type": "string",
                            "example": "{$.state.body.password}"
                          },
                          "username": {
                            "type": "string",
                            "example": "{$.state.topic}"
                          }
                        }
                      },
                      "loginUrl": {
                        "type": "string",
                        "example": ""
                      },
                      "registrationPayload": {
                        "type": "object",
                        "properties": {
                          "credentials": {
                            "type": "object",
                            "properties": {
                              "password": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "example": "{$.state.body.password}"
                                  }
                                }
                              }
                            }
                          },
                          "profile": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "example": "{$.state.topic}"
                              },
                              "first_name": {
                                "type": "string",
                                "example": "{$.state.body.name}"
                              }
                            }
                          }
                        }
                      },
                      "registrationUrl": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "OKTA"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_add_credential",
      "operationId": "credentialAdd",
      "name": "Credential Add",
      "description": "CREDENTIAL - add",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_add_credential/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/add/credential"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": ""
                      },
                      "credential": {
                        "type": "string",
                        "example": "test@evari.tech"
                      },
                      "userTopic": {
                        "type": "string",
                        "example": "USER_1234"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "add-credential"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_authorise_2fa",
      "operationId": "credentialAuthorise2faToken",
      "name": "Credential Authorise 2 Fa Token",
      "description": "CREDENTIAL - authorise (2fa token)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_authorise_2fa/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/authorise/2fa"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "example": "123456"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "authorise-2fa"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_authorise_3rd-party",
      "operationId": "credentialAuthorise3rdPartyAuth",
      "name": "Credential Authorise 3rd Party Auth",
      "description": "CREDENTIAL - authorise (3rd party auth)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_authorise_3rd-party/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/authorise/3rd-party"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "configTopic": {
                        "type": "string",
                        "example": "OKTA"
                      },
                      "password": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "authorise-3rd-party"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_authorise_basic",
      "operationId": "credentialAuthoriseBasicAuth",
      "name": "Credential Authorise Basic Auth",
      "description": "CREDENTIAL - authorise (basic auth)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": [
          {}
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_authorise_basic/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/authorise/basic"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "password": {
                        "type": "string",
                        "example": "{{loginPassword}}"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "authorise-basic"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "{{loginUsername}}"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_authorise_one-time-code",
      "operationId": "credentialAuthoriseOneTimeCode",
      "name": "Credential Authorise One Time Code",
      "description": "CREDENTIAL - authorise (one time code)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_authorise_one-time-code/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/authorise/one-time-code"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "authorise-one-time-code"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_authorise_one-time-token",
      "operationId": "credentialAuthoriseOneTimeToken",
      "name": "Credential Authorise One Time Token",
      "description": "CREDENTIAL - authorise (one time token)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_authorise_one-time-token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/authorise/one-time-token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "authorise-one-time-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_credential",
      "operationId": "credentialCreate3rdParty",
      "name": "Credential Create 3rd Party",
      "description": "CREDENTIAL - create (3rd party)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_credential/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/credential"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "credential": {
                        "type": "string",
                        "example": "+61"
                      },
                      "userTopic": {
                        "type": "string",
                        "example": "USER_1234"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-credential"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_password",
      "operationId": "credentialCreatePassword",
      "name": "Credential Create Password",
      "description": "CREDENTIAL - create password",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_password/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/password"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "password": {
                        "type": "string",
                        "example": ""
                      },
                      "token": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-credential"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_reset_password",
      "operationId": "credentialResetPasswordEmail",
      "name": "Credential Reset Password Email",
      "description": "CREDENTIAL - reset password (email)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_reset_password/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/reset/password"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "password": {
                        "type": "string",
                        "example": ""
                      },
                      "token": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "reset-password"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_upsert_credential",
      "operationId": "credentialUpsertMyPassword",
      "name": "Credential Upsert My Password",
      "description": "CREDENTIAL - upsert (my password)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_upsert_credential/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/upsert/credential"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": ""
                      },
                      "password": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-credential-password"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_data",
      "operationId": "dataFillEmptyUserTopic",
      "name": "Data Fill Empty User Topic",
      "description": "DATA - fill empty user topic",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_data/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/data"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "data-fill-empty-user-topic"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CREDENTIAL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_report",
      "operationId": "reportTokensByPeriod",
      "name": "Report Tokens By Period",
      "description": "REPORT - tokens by period",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_report/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/report"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": ""
                      },
                      "period": {
                        "type": "string",
                        "example": "24h"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "report-tokens-by-period"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/REPORT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_Saml2_Acs",
      "operationId": "samlAssertion",
      "name": "Saml Assertion",
      "description": "SAML - assertion",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_Saml2_Acs/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/Saml2/Acs"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/x-www-form-urlencoded"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "SAMLResponse": {
                    "type": "string",
                    "example": "<something value=\"one\"></something>"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_Saml2_authn",
      "operationId": "samlGenerateLoginAuthRequestRedirect",
      "name": "Saml Generate Login Auth Request Redirect",
      "description": "SAML - generate login auth request (Redirect)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_Saml2_authn/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/Saml2/authn"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "redirect": {
                        "type": "string",
                        "example": ""
                      },
                      "ssoKey": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-saml-redirect"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/SSO_CREDENTIAL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_2fa-code",
      "operationId": "tokenCreate2faCodeSms",
      "name": "Token Create 2 Fa Code Sms",
      "description": "TOKEN - create 2fa code (sms)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_2fa-code/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/2fa-code"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "identifier": {
                        "type": "string",
                        "example": "+61426124260"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-one-time-code"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/CODE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "charl@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_new-password-token",
      "operationId": "tokenCreateNewPasswordEmail",
      "name": "Token Create New Password Email",
      "description": "TOKEN - create new password (email)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_new-password-token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/new-password-token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "create-new-password-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_one-time-token",
      "operationId": "tokenCreateOneTimeEmail",
      "name": "Token Create One Time Email",
      "description": "TOKEN - create one time (email)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_one-time-token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/one-time-token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "create-one-time-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  },
                  "topic": {
                    "type": "string",
                    "example": "+61472701164"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_public-token",
      "operationId": "tokenCreatePublic",
      "name": "Token Create Public",
      "description": "TOKEN - create public",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": [
          {}
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_public-token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/public-token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "create-public-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_create_reset-password-token",
      "operationId": "tokenCreateResetPasswordEmail",
      "name": "Token Create Reset Password Email",
      "description": "TOKEN - create reset password (email)",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_create_reset-password-token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/create/reset-password-token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "create-reset-password-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  },
                  "topic": {
                    "type": "string",
                    "example": "test@evari.tech"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_refresh_token",
      "operationId": "tokenRefresh",
      "name": "Token Refresh",
      "description": "TOKEN - refresh",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": [
          {}
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_refresh_token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/refresh/token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": ""
                      },
                      "refreshToken": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "refresh-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_swap_token",
      "operationId": "tokenSwap",
      "name": "Token Swap",
      "description": "TOKEN - swap",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_swap_token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/swap/token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "example": ""
                      },
                      "token": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "swap-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_authenticate_validate_token",
      "operationId": "tokenInvalidate",
      "name": "Token Invalidate",
      "description": "TOKEN - invalidate",
      "schema": {
        "tags": [
          "authenticate"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_authenticate_validate_token/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/authenticate/validate/token"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "validate-reset-password-token"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$AUTHENTICATE/TOKEN"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_events",
      "operationId": "create",
      "name": "Create",
      "description": "create",
      "schema": {
        "tags": [
          "backbone"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_events/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/events"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "items": {},
                        "example": []
                      },
                      "from": {
                        "type": "number",
                        "example": 0
                      },
                      "searchTerm": {
                        "type": "string",
                        "example": ""
                      },
                      "size": {
                        "type": "number",
                        "example": 10
                      },
                      "sort": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dueDate": {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "type": "string",
                                  "example": "desc"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "ISODateString"
                                }
                              }
                            }
                          }
                        },
                        "example": [
                          {
                            "dueDate": {
                              "order": "desc",
                              "type": "ISODateString"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$BACKBONE/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LEAD_COMPANIES"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_action",
      "operationId": "getIndex",
      "name": "Get Index",
      "description": "get-index",
      "schema": {
        "tags": [
          "backbone"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_action/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/action"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "configTopic": {
                        "type": "string",
                        "example": "new-demo-org_SIMPLE_INTERFACE_1711641479584"
                      },
                      "exact": {
                        "type": "boolean",
                        "example": false
                      },
                      "fields": {
                        "type": "array",
                        "items": {},
                        "example": []
                      },
                      "from": {
                        "type": "number",
                        "example": 0
                      },
                      "page": {
                        "type": "number",
                        "example": 1
                      },
                      "searchTerm": {
                        "type": "string",
                        "example": ""
                      },
                      "size": {
                        "type": "number",
                        "example": 25
                      },
                      "sort": {
                        "type": "array",
                        "items": {},
                        "example": []
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "get-index"
                  },
                  "subject": {
                    "type": "string",
                    "example": "new-demo-org"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SIMPLE_WORKSPACE/SIMPLE_INTERFACE/RECORD/**"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_submit",
      "operationId": "configRulesList",
      "name": "Config Rules List",
      "description": "CONFIG - rules list",
      "schema": {
        "tags": [
          "rule"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_submit/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/submit"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "type": "string",
                        "example": "beginning"
                      },
                      "triggerRebuild": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "publish-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$BACKBONE/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "RULE_COLLECTION_LIST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_mock",
      "operationId": "mockCreateDevelopmentEvent",
      "name": "Mock Create Development Event",
      "description": "MOCK - create development event",
      "schema": {
        "tags": [
          "backbone"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_mock/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/mock"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "Prop1": {
                        "type": "string",
                        "example": "ABSURD"
                      },
                      "Prop2": {
                        "type": "string",
                        "example": "Oh yes please"
                      },
                      "Prop3": {
                        "type": "string",
                        "example": "People like cats?"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "authorizer": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "update-attachments"
                            },
                            "example": [
                              "update-attachments",
                              "view-attachments",
                              "act-as-proxy",
                              "apply-any-team-profile",
                              "apply-any-team-to-quote",
                              "backdate-endorsement",
                              "cancel-policy-carrier",
                              "cancel-policy-immediate",
                              "create-claim",
                              "edit-read-only-quote-questions",
                              "endorse-any",
                              "inception-policy-any-date",
                              "make-manual-payment",
                              "make-payment",
                              "make-payment-escrow",
                              "make-refund-escrow",
                              "read-agent",
                              "read-attribute",
                              "read-claim",
                              "read-claim-configuration",
                              "read-cover",
                              "read-customer",
                              "read-document",
                              "read-endorsement",
                              "read-event",
                              "read-external-integration-configurations",
                              "read-integration-configurations",
                              "read-invoice",
                              "read-invoice-configuration",
                              "read-my-customer",
                              "read-my-quote",
                              "read-organisation",
                              "read-policy",
                              "read-product",
                              "read-public-referred-quote",
                              "read-question",
                              "read-quote",
                              "read-rating-factor",
                              "read-referred-quote",
                              "read-role",
                              "read-team",
                              "read-team-types",
                              "read-templates",
                              "read-user",
                              "update-claim",
                              "update-external-integration-configurations",
                              "update-integration-configurations",
                              "update-subscription-configurations",
                              "update-team-types",
                              "update-templates",
                              "upload-data",
                              "upload-public-resources",
                              "void-invoice",
                              "write-agent",
                              "write-attribute",
                              "write-claim-attestations",
                              "write-claim-configuration",
                              "write-claim-resolution",
                              "write-cover",
                              "write-customer",
                              "write-document",
                              "write-endorsement",
                              "write-invoice-configuration",
                              "write-my-customer",
                              "write-my-quote",
                              "write-organisation",
                              "write-policy",
                              "write-product",
                              "write-question",
                              "write-quote",
                              "write-rating-factor",
                              "write-referred-quote",
                              "write-role",
                              "write-team",
                              "write-user",
                              "authenticate-management",
                              "field-control"
                            ]
                          },
                          "teams": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "primaryEVARI"
                            },
                            "example": [
                              "primaryEVARI",
                              "TEAM_EVARI",
                              "TEAM_PUZZLE_ADMIN",
                              "TEAM_PUZZLE_ADMIN_1",
                              "TEAM_TEST"
                            ]
                          },
                          "userTopic": {
                            "type": "string",
                            "example": "USR_5812FE52BAECC54"
                          }
                        }
                      }
                    }
                  },
                  "subject": {
                    "type": "string",
                    "example": "$MOCK_EVENTS"
                  },
                  "topic": {
                    "type": "string",
                    "example": "0003"
                  },
                  "type": {
                    "type": "string",
                    "example": "some-type"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_mock-search",
      "operationId": "mockSearchDevelopmentIndex",
      "name": "Mock Search Development Index",
      "description": "MOCK - search development index",
      "schema": {
        "tags": [
          "backbone"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_mock-search/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/mock-search"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "index": {
                        "type": "string",
                        "example": "valuePath"
                      },
                      "search": {
                        "type": "string",
                        "example": "attributes/lightsaber/colour/red"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "index-search"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_history",
      "operationId": "getHistory",
      "name": "Get History",
      "description": "GET - history",
      "schema": {
        "tags": [
          "backbone"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_history/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/history"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "offset": {
                        "type": "number",
                        "example": 1676457283738
                      },
                      "subject": {
                        "type": "string",
                        "example": "$RENDER/NODE"
                      },
                      "topic": {
                        "type": "string",
                        "example": "RDR_ENVEST_NAVIGATION"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "restore-single-event-offset"
                  },
                  "commit": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "description"
                      },
                      "summary": {
                        "type": "string",
                        "example": "summary"
                      }
                    }
                  },
                  "subject": {
                    "type": "string",
                    "example": "$BACKBONE/RESTORE_EVENT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_backbone_upsert",
      "operationId": "eventUnset",
      "name": "Event Unset",
      "description": "EVENT - unset",
      "schema": {
        "tags": [
          "backbone"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_backbone_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/backbone/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "poison-pill"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/INVOICE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_TEST/1"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_collation_command",
      "operationId": "logGetLogsFromTrackingidCopy",
      "name": "Log Get Logs From Trackingid Copy",
      "description": "LOG - Get logs from trackingId Copy",
      "schema": {
        "tags": [
          "collation"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_collation_command/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/collation/command"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "trackingCid": {
                        "type": "string",
                        "example": "quoteNumber/34ec8e1f-c16a-41fe-8479-2967cbfc9561/QUOTE_STATUS"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "log-collation"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$COLLATION/RUN"
                  },
                  "topic": {
                    "type": "string",
                    "example": "AUDIT_COVER_QUOTE_CONTRACT_CREATE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_config_publish",
      "operationId": "configPublish",
      "name": "Config Publish",
      "description": "CONFIG - publish",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_config_publish/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/config/publish"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "publish-form-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "FRM_CONFIG_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_collation_webhook",
      "operationId": "webhook",
      "name": "Webhook",
      "description": "Webhook",
      "schema": {
        "tags": [
          "collation"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_collation_webhook/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/collation/webhook"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "asm_group_id": {
                      "type": "number",
                      "example": 10
                    },
                    "attempt": {
                      "type": "string",
                      "example": "5"
                    },
                    "category": {
                      "type": "string",
                      "example": "cat facts"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@test.com"
                    },
                    "event": {
                      "type": "string",
                      "example": "processed"
                    },
                    "ip": {
                      "type": "string",
                      "example": "168.1.1.1"
                    },
                    "reason": {
                      "type": "string",
                      "example": "500 unknown recipient"
                    },
                    "response": {
                      "type": "string",
                      "example": "400 try again later"
                    },
                    "sg_event_id": {
                      "type": "string",
                      "example": "sg_event_id"
                    },
                    "sg_message_id": {
                      "type": "string",
                      "example": "sg_message_id"
                    },
                    "smtp-id": {
                      "type": "string",
                      "example": "<14c5d75ce93.dfd.64b469@ismtpd-555>"
                    },
                    "status": {
                      "type": "string",
                      "example": "5.0.0"
                    },
                    "timestamp": {
                      "type": "number",
                      "example": 1513299569
                    },
                    "url": {
                      "type": "string",
                      "example": "http://www.sendgrid.com/"
                    },
                    "useragent": {
                      "type": "string",
                      "example": "Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
                    }
                  }
                },
                "example": [
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "processed",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569
                  },
                  {
                    "attempt": "5",
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "deferred",
                    "ip": "168.1.1.1",
                    "response": "400 try again later",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569
                  },
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "delivered",
                    "ip": "168.1.1.1",
                    "response": "250 OK",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569
                  },
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "open",
                    "ip": "255.255.255.255",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569,
                    "useragent": "Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
                  },
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "click",
                    "ip": "255.255.255.255",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569,
                    "url": "http://www.sendgrid.com/",
                    "useragent": "Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
                  },
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "bounce",
                    "ip": "168.1.1.1",
                    "reason": "500 unknown recipient",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "status": "5.0.0",
                    "timestamp": 1513299569
                  },
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "dropped",
                    "reason": "Bounced Address",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "status": "5.0.0",
                    "timestamp": 1513299569
                  },
                  {
                    "email": "example@test.com",
                    "event": "spamreport",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569
                  },
                  {
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "unsubscribe",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569
                  },
                  {
                    "asm_group_id": 10,
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "group_unsubscribe",
                    "ip": "255.255.255.255",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569,
                    "url": "http://www.sendgrid.com/",
                    "useragent": "Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
                  },
                  {
                    "asm_group_id": 10,
                    "category": "cat facts",
                    "email": "example@test.com",
                    "event": "group_resubscribe",
                    "ip": "000.000.000.000",
                    "sg_event_id": "sg_event_id",
                    "sg_message_id": "sg_message_id",
                    "smtp-id": "<14c5d75ce93.dfd.64b469@ismtpd-555>",
                    "timestamp": 1513299569,
                    "url": "http://www.sendgrid.com/",
                    "useragent": "Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
                  }
                ]
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_contract_config",
      "operationId": "configGet",
      "name": "Config Get",
      "description": "CONFIG - get",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_contract_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/contract/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "direction": {
                        "type": "string",
                        "example": "DES"
                      },
                      "label": {
                        "type": "string",
                        "example": "list settings"
                      },
                      "rowLimit": {
                        "type": "number",
                        "example": 2000
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-contract-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$CONTRACT/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LIST_SETTINGS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_contract",
      "operationId": "contractGet",
      "name": "Contract Get",
      "description": "CONTRACT - get",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_contract/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/contract"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_100"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$CONTRACT/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXRhZGF0YSI6eyJqdHkiOiJBVCIsImFwaVJvb3QiOiJodHRwczovL2FwaS5zdGFnaW5nLmV2YXJpLnRlY2giLCJ3ZWJzb2NrZXRVcmwiOiJ3c3M6Ly93cy5zdGFnaW5nLmV2YXJpLnRlY2gifSwiaWF0IjoxNjI4NDkyMjYzLCJleHAiOjE2Mjg0OTU4NjMsInN1YiI6IlVTUl8zMDFEMzE4NjMzQTFCRkUifQ.L_CNq3kWczgM3Mw3Nseb_WQ2fCpxTW_8wlVt-_8yEfU"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_contract_status_config_get",
      "operationId": "statusGetDraft",
      "name": "Status Get Draft",
      "description": "STATUS - get (draft)",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_contract_status_config_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/contract/status/config/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "$STATUS/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "CONTRACT_STATUS_CONFIG"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_contract_status_config_publish",
      "operationId": "statusPublish",
      "name": "Status Publish",
      "description": "STATUS - publish",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_contract_status_config_publish/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/contract/status/config/publish"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "publish-status-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$STATUS/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "CONTRACT_STATUS_CONFIG"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_contract_status_config_upsert",
      "operationId": "statusConfigUpsert",
      "name": "Status Config Upsert",
      "description": "STATUS-CONFIG - upsert",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_contract_status_config_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/contract/status/config/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "example": "In force"
                        },
                        "status": {
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      }
                    },
                    "example": [
                      {
                        "label": "In force",
                        "status": "ACTIVE"
                      }
                    ]
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-status-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$STATUS/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "CONTRACT_STATUS_CONFIG"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_integrations_submit-external-config",
      "operationId": "createContractFromAnswerUpdateConfig",
      "name": "Create Contract From Answer Update Config",
      "description": "Create contract from answer update config",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_integrations_submit-external-config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/integrations/submit-external-config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "body": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dataSource": {
                                "type": "string",
                                "example": "form-upsert-form"
                              },
                              "dataSourceConfiguration": {
                                "type": "object",
                                "properties": {
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "attempts": {
                                        "type": "number",
                                        "example": 3
                                      },
                                      "backoffMS": {
                                        "type": "number",
                                        "example": 1000
                                      },
                                      "flatMap": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "responseMap": {
                                        "type": "object",
                                        "properties": {
                                          "functionName": {
                                            "type": "string",
                                            "example": "form-upsert-form"
                                          },
                                          "functionParams": {
                                            "type": "object",
                                            "properties": {
                                              "body": {
                                                "type": "object",
                                                "properties": {
                                                  "attribute": {
                                                    "type": "object",
                                                    "properties": {
                                                      "teamId": {
                                                        "type": "string",
                                                        "example": "$.lookup.teamId"
                                                      }
                                                    }
                                                  },
                                                  "form": {
                                                    "type": "object",
                                                    "properties": {
                                                      "offset": {
                                                        "type": "string",
                                                        "example": "$.lookup.offset"
                                                      },
                                                      "subject": {
                                                        "type": "string",
                                                        "example": "$.lookup.formSubject"
                                                      },
                                                      "topic": {
                                                        "type": "string",
                                                        "example": "$.lookup.formTopic"
                                                      }
                                                    }
                                                  },
                                                  "policyContract": {
                                                    "type": "object",
                                                    "properties": {
                                                      "subject": {
                                                        "type": "string",
                                                        "example": "$.lookup.contractSubject"
                                                      },
                                                      "topic": {
                                                        "type": "string",
                                                        "example": "$.lookup.formTopic|/|$.lookup.value"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "command": {
                                                "type": "string",
                                                "example": "upsert-form"
                                              },
                                              "subject": {
                                                "type": "string",
                                                "example": "$.lookup.formSubject"
                                              },
                                              "topic": {
                                                "type": "string",
                                                "example": "$.lookup.formTopic"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "timeout": {
                                        "type": "number",
                                        "example": 20000
                                      },
                                      "useJPath": {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              },
                              "dataType": {
                                "type": "string",
                                "example": "LAMBDA"
                              },
                              "internalKey": {
                                "type": "string",
                                "example": "FORM_UPSERT_CONTRACT"
                              }
                            }
                          },
                          "example": [
                            {
                              "dataSource": "form-upsert-form",
                              "dataSourceConfiguration": {
                                "options": {
                                  "attempts": 3,
                                  "backoffMS": 1000,
                                  "flatMap": false,
                                  "responseMap": {
                                    "functionName": "form-upsert-form",
                                    "functionParams": {
                                      "body": {
                                        "policyContract": {
                                          "subject": "$.lookup.contractSubject",
                                          "topic": "$.lookup.formTopic|/|$.lookup.value"
                                        }
                                      },
                                      "command": "upsert-form",
                                      "subject": "$.lookup.formSubject",
                                      "topic": "$.lookup.formTopic"
                                    }
                                  },
                                  "timeout": 20000,
                                  "useJPath": true
                                }
                              },
                              "dataType": "LAMBDA",
                              "internalKey": "FORM_UPSERT_CONTRACT"
                            },
                            {
                              "dataSource": "contract-contract",
                              "dataSourceConfiguration": {
                                "options": {
                                  "attempts": 3,
                                  "backoffMS": 1000,
                                  "flatMap": false,
                                  "responseMap": {
                                    "functionName": "contract-contract",
                                    "functionParams": {
                                      "body": {
                                        "attribute": {
                                          "teamId": "$.lookup.teamId"
                                        },
                                        "form": {
                                          "offset": "$.lookup.offset",
                                          "subject": "$.lookup.formSubject",
                                          "topic": "$.lookup.formTopic"
                                        }
                                      },
                                      "command": "upsert-contract",
                                      "subject": "$.lookup.contractSubject",
                                      "topic": "$.lookup.formTopic|/|$.lookup.value"
                                    }
                                  },
                                  "timeout": 20000,
                                  "useJPath": true
                                }
                              },
                              "dataType": "LAMBDA",
                              "internalKey": "FORM_CREATE_CONTRACT"
                            }
                          ]
                        },
                        "cid": {
                          "type": "string",
                          "example": "$.lookup.topic"
                        },
                        "fsm": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "conditions": {
                                    "type": "object",
                                    "properties": {
                                      "all": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "entity": {
                                              "type": "string",
                                              "example": "questions"
                                            },
                                            "field": {
                                              "type": "string",
                                              "example": "value"
                                            },
                                            "internalKey": {
                                              "type": "string",
                                              "example": "FORM_CREATE_CONTRACT"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "example": "in"
                                            },
                                            "referingValue": {
                                              "type": "array",
                                              "items": {
                                                "example": "",
                                                "anyOf": [
                                                  {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "example": ""
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {}
                                                  }
                                                ]
                                              },
                                              "example": [
                                                "",
                                                null,
                                                "undefined",
                                                {}
                                              ]
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "entity": "questions",
                                            "field": "value",
                                            "internalKey": "FORM_CREATE_CONTRACT",
                                            "operator": "in",
                                            "referingValue": [
                                              "",
                                              null,
                                              "undefined",
                                              {}
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "FORM_CREATE_CONTRACT"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "conditions": {
                                    "all": [
                                      {
                                        "entity": "questions",
                                        "field": "value",
                                        "internalKey": "FORM_CREATE_CONTRACT",
                                        "operator": "in",
                                        "referingValue": [
                                          "",
                                          null,
                                          "undefined",
                                          {}
                                        ]
                                      }
                                    ]
                                  },
                                  "value": "FORM_CREATE_CONTRACT"
                                },
                                {
                                  "conditions": {
                                    "all": [
                                      {
                                        "entity": "questions",
                                        "field": "value",
                                        "internalKey": "FORM_CREATE_CONTRACT",
                                        "operator": "notIn",
                                        "referingValue": [
                                          "",
                                          null,
                                          "undefined",
                                          {}
                                        ]
                                      },
                                      {
                                        "entity": "questions",
                                        "field": "value",
                                        "internalKey": "FORM_UPSERT_CONTRACT",
                                        "operator": "in",
                                        "referingValue": [
                                          "",
                                          null,
                                          "undefined",
                                          {}
                                        ]
                                      }
                                    ]
                                  },
                                  "value": "FORM_UPSERT_CONTRACT"
                                }
                              ]
                            }
                          }
                        },
                        "lookup": {
                          "type": "object",
                          "properties": {
                            "contractSubject": {
                              "type": "string",
                              "example": "$CONTRACT/CONTRACT_LATITUDE_POLICY"
                            },
                            "formSubject": {
                              "type": "string",
                              "example": "$FORM/FRM_LATITUDE_RP"
                            },
                            "name": {
                              "type": "string",
                              "example": "Create idempotent contract"
                            },
                            "trackingCid": {
                              "type": "string",
                              "example": "contractSubmitEvent/||$.lookup.topic"
                            }
                          }
                        }
                      }
                    },
                    "example": [
                      {
                        "body": [
                          {
                            "dataSource": "form-upsert-form",
                            "dataSourceConfiguration": {
                              "options": {
                                "attempts": 3,
                                "backoffMS": 1000,
                                "flatMap": false,
                                "responseMap": {
                                  "functionName": "form-upsert-form",
                                  "functionParams": {
                                    "body": {
                                      "policyContract": {
                                        "subject": "$.lookup.contractSubject",
                                        "topic": "$.lookup.formTopic|/|$.lookup.value"
                                      }
                                    },
                                    "command": "upsert-form",
                                    "subject": "$.lookup.formSubject",
                                    "topic": "$.lookup.formTopic"
                                  }
                                },
                                "timeout": 20000,
                                "useJPath": true
                              }
                            },
                            "dataType": "LAMBDA",
                            "internalKey": "FORM_UPSERT_CONTRACT"
                          },
                          {
                            "dataSource": "contract-contract",
                            "dataSourceConfiguration": {
                              "options": {
                                "attempts": 3,
                                "backoffMS": 1000,
                                "flatMap": false,
                                "responseMap": {
                                  "functionName": "contract-contract",
                                  "functionParams": {
                                    "body": {
                                      "attribute": {
                                        "teamId": "$.lookup.teamId"
                                      },
                                      "form": {
                                        "offset": "$.lookup.offset",
                                        "subject": "$.lookup.formSubject",
                                        "topic": "$.lookup.formTopic"
                                      }
                                    },
                                    "command": "upsert-contract",
                                    "subject": "$.lookup.contractSubject",
                                    "topic": "$.lookup.formTopic|/|$.lookup.value"
                                  }
                                },
                                "timeout": 20000,
                                "useJPath": true
                              }
                            },
                            "dataType": "LAMBDA",
                            "internalKey": "FORM_CREATE_CONTRACT"
                          }
                        ],
                        "cid": "$.lookup.topic",
                        "fsm": {
                          "state": [
                            {
                              "conditions": {
                                "all": [
                                  {
                                    "entity": "questions",
                                    "field": "value",
                                    "internalKey": "FORM_CREATE_CONTRACT",
                                    "operator": "in",
                                    "referingValue": [
                                      "",
                                      null,
                                      "undefined",
                                      {}
                                    ]
                                  }
                                ]
                              },
                              "value": "FORM_CREATE_CONTRACT"
                            },
                            {
                              "conditions": {
                                "all": [
                                  {
                                    "entity": "questions",
                                    "field": "value",
                                    "internalKey": "FORM_CREATE_CONTRACT",
                                    "operator": "notIn",
                                    "referingValue": [
                                      "",
                                      null,
                                      "undefined",
                                      {}
                                    ]
                                  },
                                  {
                                    "entity": "questions",
                                    "field": "value",
                                    "internalKey": "FORM_UPSERT_CONTRACT",
                                    "operator": "in",
                                    "referingValue": [
                                      "",
                                      null,
                                      "undefined",
                                      {}
                                    ]
                                  }
                                ]
                              },
                              "value": "FORM_UPSERT_CONTRACT"
                            }
                          ]
                        },
                        "lookup": {
                          "contractSubject": "$CONTRACT/CONTRACT_LATITUDE_POLICY",
                          "formSubject": "$FORM/FRM_LATITUDE_RP",
                          "name": "Create idempotent contract",
                          "trackingCid": "contractSubmitEvent/||$.lookup.topic"
                        }
                      }
                    ]
                  },
                  "messageTransformer": {
                    "type": "object",
                    "properties": {}
                  },
                  "name": {
                    "type": "string",
                    "example": "create-contract"
                  },
                  "partitionKey": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "formTopic"
                    },
                    "example": [
                      "formTopic"
                    ]
                  },
                  "productId": {
                    "type": "string",
                    "example": "9ababed6-eb01-4319-ab76-e0880909dc3f"
                  },
                  "snsBroadcastName": {
                    "type": "string",
                    "example": ""
                  },
                  "type": {
                    "type": "string",
                    "example": "submit-event-config"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_integrations_submit-external",
      "operationId": "answerUpdateEvent",
      "name": "Answer Update Event",
      "description": "Answer update event",
      "schema": {
        "tags": [
          "contract"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_integrations_submit-external/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/integrations/submit-external"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "create-contract"
                  },
                  "payload": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "PK": {
                          "type": "string",
                          "example": "$FORM/FRM_LATITUDE_RP/92d2b691-c7ab-4091-9813-9e050c8e03dd"
                        },
                        "formTopic": {
                          "type": "string",
                          "example": "92d2b691-c7ab-4091-9813-9e050c8e03dd"
                        },
                        "offset": {
                          "type": "number",
                          "example": 1638870485524.33
                        },
                        "teamId": {
                          "type": "string",
                          "example": "TEAM_1"
                        },
                        "value": {
                          "type": "string",
                          "example": "LT13238RP"
                        }
                      }
                    },
                    "example": [
                      {
                        "PK": "$FORM/FRM_LATITUDE_RP/92d2b691-c7ab-4091-9813-9e050c8e03dd",
                        "formTopic": "92d2b691-c7ab-4091-9813-9e050c8e03dd",
                        "offset": 1638870485524.33,
                        "teamId": "TEAM_1",
                        "value": "LT13238RP"
                      }
                    ]
                  },
                  "productId": {
                    "type": "string",
                    "example": "9ababed6-eb01-4319-ab76-e0880909dc3f"
                  },
                  "type": {
                    "type": "string",
                    "example": "submit-event"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_cron",
      "operationId": "cronUpsertBackbone",
      "name": "Cron Upsert Backbone",
      "description": "CRON - upsert (backbone)",
      "schema": {
        "tags": [
          "cron"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_cron/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/cron"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "unschedule-job"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$CRON"
                  },
                  "topic": {
                    "type": "string",
                    "example": "my-topic"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_datamapper_upload",
      "operationId": "upload",
      "name": "Upload",
      "description": "upload",
      "schema": {
        "tags": [
          "datamapper"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_datamapper_upload/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/datamapper/upload"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "commit": {
                        "type": "object",
                        "properties": {
                          "author": {
                            "type": "string",
                            "example": "maria.veneva@evari.tech"
                          },
                          "description": {
                            "type": "string",
                            "example": "Test desc"
                          },
                          "summary": {
                            "type": "string",
                            "example": "Test summary"
                          }
                        }
                      },
                      "s3Key": {
                        "type": "string",
                        "example": "csv/MY_LOOKUP/1668183364599.csv"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upload-file-from-source"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DATAMAPPER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "MY_LOOKUP"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_datamapper_select",
      "operationId": "select",
      "name": "Select",
      "description": "select",
      "schema": {
        "tags": [
          "datamapper"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_datamapper_select/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/datamapper/select"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "offset": {
                        "type": "number",
                        "example": 1668184067209
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "request-file-source-download-url"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DATAMAPPER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "MY_LOOKUP"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_document_trigger",
      "operationId": "triggerHooks",
      "name": "Trigger Hooks",
      "description": "TRIGGER - hooks",
      "schema": {
        "tags": [
          "document"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_document_trigger/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/document/trigger"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "list": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subject": {
                              "type": "string",
                              "example": ""
                            },
                            "topic": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "example": [
                          {
                            "subject": "",
                            "topic": ""
                          }
                        ]
                      },
                      "payload": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "trigger-templates"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DOCUMENT/TRIGGER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_document_template_hook",
      "operationId": "hookUpsert",
      "name": "Hook Upsert",
      "description": "HOOK - upsert",
      "schema": {
        "tags": [
          "document"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_document_template_hook/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/document/template/hook"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DOCUMENT/TEMPLATE/HOOK"
                  },
                  "topic": {
                    "type": "string",
                    "example": "HOOK_1"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_document_template_tag",
      "operationId": "tagUpsert",
      "name": "Tag Upsert",
      "description": "TAG - upsert",
      "schema": {
        "tags": [
          "document"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_document_template_tag/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/document/template/tag"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DOCUMENT/TEMPLATE/TAG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "DOC_TAG_1"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_document_template",
      "operationId": "templatePublish",
      "name": "Template Publish",
      "description": "TEMPLATE - publish",
      "schema": {
        "tags": [
          "document"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_document_template/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/document/template"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "object",
                        "properties": {
                          "contentType": {
                            "type": "string",
                            "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                          },
                          "s3Key": {
                            "type": "string",
                            "example": "DOC_TEMPLATE_1/1615462687748"
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-template"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DOCUMENT/TEMPLATE/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "DOC_TEMPLATE_1"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_document",
      "operationId": "documentList",
      "name": "Document List",
      "description": "DOCUMENT - list",
      "schema": {
        "tags": [
          "document"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_document/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/document"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "signatureId": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "request-document-signature-url"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DOCUMENT/123"
                  },
                  "topic": {
                    "type": "string",
                    "example": "document name"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_document_folder",
      "operationId": "folderUpsert",
      "name": "Folder Upsert",
      "description": "FOLDER - upsert",
      "schema": {
        "tags": [
          "document"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_document_folder/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/document/folder"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "tree"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$DOCUMENT/FOLDER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "TREE/ARCHIVES/123"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_get",
      "operationId": "formGet",
      "name": "Form Get",
      "description": "FORM - get",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-form"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_COLLATION_TEST_PARENT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "97766714-fe51-4c5e-979d-5d5494e7906e"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_navigation",
      "operationId": "formNavigate",
      "name": "Form Navigate",
      "description": "FORM - navigate",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_navigation/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/navigation"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "formConfigTopic": {
                        "type": "string",
                        "example": "FRM_PG_NURSERY_MTA"
                      },
                      "navCurrentNodeTopic": {
                        "type": "string",
                        "example": "RDR_PG_NURSERY_MTA_SUMMARY_PAGE"
                      },
                      "navRootTopic": {
                        "type": "string",
                        "example": "RDR_PG_NURSERY_MTA_NAVIGATION"
                      },
                      "topic": {
                        "type": "string",
                        "example": "19b43457-bd50-47ab-bbdf-744b12bb4c9a"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "update-navigation"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_PG_NURSERY_MTA"
                  },
                  "topic": {
                    "type": "string",
                    "example": "19b43457-bd50-47ab-bbdf-744b12bb4c9a"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_get-answers",
      "operationId": "formGetAnswers",
      "name": "Form Get Answers",
      "description": "FORM - get answers",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_get-answers/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/get-answers"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-form"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/ANSWER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "8451a1d7-7efe-4ad9-8805-66443358c1cb"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_list",
      "operationId": "formListFormsByConfig",
      "name": "Form List Forms By Config",
      "description": "FORM - list (forms by config)",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_1"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_MITTI_BPK_PROD"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LIST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_list_display",
      "operationId": "formListWithDisplayPreferencesFormsByConfig",
      "name": "Form List With Display Preferences Forms By Config",
      "description": "FORM - list with display preferences (forms by config)",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_list_display/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/list/display"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "number",
                        "example": 0
                      },
                      "size": {
                        "type": "number",
                        "example": 5
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list"
                  },
                  "lambdaName": {
                    "type": "string",
                    "example": "form-list-form-display"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_LEAD_PIPELINE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LIST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_list_children",
      "operationId": "formListChildren",
      "name": "Form List Children",
      "description": "FORM - list children",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_list_children/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/list/children"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-children-by-type"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_MITTI_BPK_UAT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "5d67fa3c-6894-4552-baff-2165decbe9f2"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_list_user",
      "operationId": "formListByUserTopic",
      "name": "Form List By User Topic",
      "description": "FORM - list by user topic",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_list_user/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/list/user"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-by-user"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LIST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_project",
      "operationId": "formProjectCopy",
      "name": "Form Project Copy",
      "description": "FORM - project Copy",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_project/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/project"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_MITTI_STAB"
                  },
                  "topic": {
                    "type": "string",
                    "example": "e0778ff0-b0f4-4a71-82b8-8ebe8f5283f9"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_lambda_invoke_form-project-form",
      "operationId": "formProjectLocalinvoke",
      "name": "Form Project Localinvoke",
      "description": "FORM - project - localinvoke",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_lambda_invoke_form-project-form/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/lambda/invoke/form-project-form"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {}
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG/FRM_MITTI_BPK_UAT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "0533bb95-f5ed-4a72-8da2-007c0c1caf2b"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_clone",
      "operationId": "formClone",
      "name": "Form Clone",
      "description": "FORM - clone",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_clone/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/clone"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "exclude": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "quoteContract"
                        },
                        "example": [
                          "quoteContract",
                          "parentCreatedAt",
                          "topic"
                        ]
                      },
                      "excludeAnswers": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "quote_number"
                        },
                        "example": [
                          "quote_number"
                        ]
                      },
                      "formConfigTopic": {
                        "type": "string",
                        "example": "FRM_BPKPLUS"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "clone-form"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_BPKPLUS"
                  },
                  "topic": {
                    "type": "string",
                    "example": "4b25cbf4-001f-4b23-bebf-d08fe178c9cf"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_upsert",
      "operationId": "formUpsert",
      "name": "Form Upsert",
      "description": "FORM - upsert",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Test 2"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-form"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/TEST"
                  },
                  "topic": {
                    "type": "string",
                    "example": "1ba0ae6c-3ffc-4e45-9095-d6249503d898"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_config_list",
      "operationId": "configListAllPublished",
      "name": "Config List All Published",
      "description": "CONFIG - list all (published)",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_config_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/config/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-config-topics"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_info",
      "operationId": "formInfo",
      "name": "Form Info",
      "description": "FORM - info",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_info/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/info"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "$FORM/ANYFORMWILLDO"
                  },
                  "topic": {
                    "type": "string",
                    "example": "5e668812-08f8-49f3-8055-64ff3b2c0bba"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_unset",
      "operationId": "formUnsetDoesNotWork",
      "name": "Form Unset Does Not Work",
      "description": "FORM - unset (DOES NOT WORK)",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_unset/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/unset"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "test.one"
                        },
                        "example": [
                          "test.one"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "unset-form-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_config_get",
      "operationId": "configMigrateRulesToAggregator",
      "name": "Config Migrate Rules To Aggregator",
      "description": "CONFIG - migrate rules to aggregator",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_config_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/config/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG/SYSTEM"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LIST_SETTINGS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_config_cache",
      "operationId": "configBuildCache",
      "name": "Config Build Cache",
      "description": "CONFIG - build cache",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_config_cache/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/config/cache"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "build-config-cache"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "FRM_ENVEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_config_get-cache",
      "operationId": "configGetCache",
      "name": "Config Get Cache",
      "description": "CONFIG - get cache",
      "schema": {
        "tags": [
          "form"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_config_get-cache/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/config/get-cache"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "forceClear": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "get-config-cache"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "FRM_PG_NURSERY_QUOTE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_config_upsert",
      "operationId": "configUpsertAndPublishConfig",
      "name": "Config Upsert And Publish Config",
      "description": "CONFIG - upsert and publish config",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_config_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/config/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-delete-form-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "FRM_MITTI_BPK_UAT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_project",
      "operationId": "subscriptionProject",
      "name": "Subscription Project",
      "description": "SUBSCRIPTION - project",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_project/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/project"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "instalments": {
                        "type": "string",
                        "example": "current"
                      },
                      "invoices": {
                        "type": "string",
                        "example": "current"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "project"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_form_create",
      "operationId": "formCreate",
      "name": "Form Create",
      "description": "FORM - create",
      "schema": {
        "tags": [
          "form"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_form_create/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/form/create"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "attribute": {
                        "type": "object",
                        "properties": {
                          "profileId": {
                            "type": "string",
                            "example": "PFL_BUILDER_USR_30E0852C57F8CA2UPT_0"
                          },
                          "role": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "PRM_ADMIN"
                              },
                              "name": {
                                "type": "string",
                                "example": "Admin"
                              },
                              "topic": {
                                "type": "string",
                                "example": "PRM_ADMIN"
                              }
                            }
                          },
                          "teamId": {
                            "type": "string",
                            "example": "TEAM_EVARI"
                          }
                        }
                      },
                      "isPublic": {
                        "type": "boolean",
                        "example": false
                      },
                      "triggerRulesOnCreate": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-form"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$FORM/FRM_BPKPLUS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_generic",
      "operationId": "configUnsetRulesFromACollection",
      "name": "Config Unset Rules From A Collection",
      "description": "CONFIG - unset rules from a collection",
      "schema": {
        "tags": [
          "rule"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_generic/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/generic"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "rules.RDR_PRICE_LOCATION_BREAKDOWN_NEW_TABLE.isVisible"
                        },
                        "example": [
                          "rules.RDR_PRICE_LOCATION_BREAKDOWN_NEW_TABLE.isVisible"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "unset-generic"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RULE/COLLECTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "BPKPLUS_VISIBILITY"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_get",
      "operationId": "billingTokenGet",
      "name": "Billing Token Get",
      "description": "BILLING TOKEN - get",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/BILLING/TRANSACTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_billing_token_upsert",
      "operationId": "billingTokenUpsert",
      "name": "Billing Token Upsert",
      "description": "BILLING TOKEN - upsert",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_billing_token_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/billing/token/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "customerTopic": {
                        "type": "string",
                        "example": "PFL_CUSTOMER_TEST"
                      },
                      "provider": {
                        "type": "string",
                        "example": "ONEINC"
                      },
                      "token": {
                        "type": "string",
                        "example": "token"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "billing-token-upsert"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/BILLING/TOKEN"
                  },
                  "topic": {
                    "type": "string",
                    "example": "new uuid here"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_list",
      "operationId": "billingTokenListByCustomer",
      "name": "Billing Token List By Customer",
      "description": "BILLING TOKEN - list (by customer)",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "invoiceTopic": {
                        "type": "string",
                        "example": "INVOICE_TEST"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/BILLING/TRANSACTION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_unset",
      "operationId": "instalmentUnset",
      "name": "Instalment Unset",
      "description": "INSTALMENT - unset",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_unset/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/unset"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "configurationSet"
                        },
                        "example": [
                          "configurationSet"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "unset"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_CONFIG_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_instalment_upsert",
      "operationId": "instalmentUpsert",
      "name": "Instalment Upsert",
      "description": "INSTALMENT - upsert",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_instalment_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/instalment/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "chargeDate": {
                        "type": "string",
                        "example": "2020-12-30T00:00:00.000Z"
                      },
                      "currency": {
                        "type": "string",
                        "example": "AUD"
                      },
                      "instalmentNumber": {
                        "type": "number",
                        "example": 1
                      },
                      "invoiceConfigTopic": {
                        "type": "string",
                        "example": "INVOICE_CONFIG_TEST"
                      },
                      "lineItems": {
                        "type": "object",
                        "properties": {
                          "premium": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Premium"
                              },
                              "value": {
                                "type": "number",
                                "example": 5
                              }
                            }
                          },
                          "tax": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Overall Tax"
                              },
                              "value": {
                                "type": "number",
                                "example": 2.5
                              }
                            }
                          }
                        }
                      },
                      "paymentMethod": {
                        "type": "string",
                        "example": "CREDITCARD"
                      },
                      "subscriptionConfigTopic": {
                        "type": "string",
                        "example": "SUBSCRIPTION_CONFIG_TEST"
                      },
                      "subscriptionTopic": {
                        "type": "string",
                        "example": "SUBSCRIPTION_TEST"
                      },
                      "totalPayable": {
                        "type": "number",
                        "example": 50
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "instalment-upsert"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/INSTALMENT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_TEST/1"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_invoice_upsert",
      "operationId": "invoiceManuallyVoid",
      "name": "Invoice Manually Void",
      "description": "INVOICE - manually VOID",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_invoice_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/invoice/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "example": 100
                      },
                      "date": {
                        "type": "string",
                        "example": "2021-11-08T00:00:00.000Z"
                      },
                      "note": {
                        "type": "string",
                        "example": "'"
                      },
                      "reference": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "invoice-record-payment"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/INVOICE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "91744cab-3cb0-4983-8a73-15df57eb57f4"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_invoice_validate",
      "operationId": "invoiceValidate",
      "name": "Invoice Validate",
      "description": "INVOICE - validate",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_invoice_validate/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/invoice/validate"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "invoice-validate"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/INVOICE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "DEV190MLC"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_subscription_cancel",
      "operationId": "subscriptionCancel",
      "name": "Subscription Cancel",
      "description": "SUBSCRIPTION - cancel",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_subscription_cancel/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/subscription/cancel"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "cancellationAdjustment": {
                        "type": "number",
                        "example": -85.69
                      },
                      "cancellationDate": {
                        "type": "string",
                        "example": "2024-04-30T00:00:00.000+11:00"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "subscription-cancelled"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "498c3fd5-3151-4aec-b954-7b06e1adfb28"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_subscription_upsert",
      "operationId": "subscriptionUpsert",
      "name": "Subscription Upsert",
      "description": "SUBSCRIPTION - upsert",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_subscription_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/subscription/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {}
                  },
                  "command": {
                    "type": "string",
                    "example": "subscription-upsert"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_subscription_billing_token_upsert",
      "operationId": "subscriptionBillingTokenUpsert",
      "name": "Subscription Billing Token Upsert",
      "description": "SUBSCRIPTION BILLING TOKEN - upsert",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_subscription_billing_token_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/subscription/billing/token/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "billingTokenTopic": {
                        "type": "string",
                        "example": "token topic here"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "subscription-billing-token-upsert"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION/BILLING/TOKEN"
                  },
                  "topic": {
                    "type": "string",
                    "example": "subscription topic here"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_publish",
      "operationId": "subscriptionConfigPublishDraftOnly",
      "name": "Subscription Config Publish Draft Only",
      "description": "SUBSCRIPTION CONFIG - publish (draft only)",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_publish/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/publish"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "publish"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_CONFIG_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_subscription_config_upsert",
      "operationId": "subscriptionConfigUpsertDraftOnly",
      "name": "Subscription Config Upsert Draft Only",
      "description": "SUBSCRIPTION CONFIG - upsert (draft only)",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_subscription_config_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/subscription/config/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "billing": {
                        "type": "object",
                        "properties": {
                          "chargeImmediately": {
                            "type": "boolean",
                            "example": true
                          },
                          "disclaimer": {
                            "type": "string",
                            "example": ""
                          },
                          "methods": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "disclaimer": {
                                  "type": "string",
                                  "example": "Credit Card. A non-refundable processing fee will be applied and added to the policy payment amount by our third-party credit card processor, One Inc. The total amount (including the processing fee) will be reflected on the invoice."
                                },
                                "formSubmitResponseMessage": {
                                  "type": "string",
                                  "example": "Form submit message can be set in billing config"
                                },
                                "formTitle": {
                                  "type": "string",
                                  "example": "Title from config"
                                },
                                "gateway": {
                                  "type": "object",
                                  "properties": {
                                    "oneincAccountGroup": {
                                      "type": "string",
                                      "example": "PF1"
                                    },
                                    "paydockChargeImmediately": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "paydockConfigurationTokens": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwcmVkZWZpbmVkX2ZpZWxkcyI6eyJnYXRld2F5X2lkIjoiNWVhNjkyMzRiOTc1ZTQ1NmExMTkxNTQ0IiwidHlwZSI6ImNhcmQifSwiZGVmaW5lZF9mb3JtX2ZpZWxkcyI6WyJmaXJzdF9uYW1lKiIsImxhc3RfbmFtZSoiLCJjYXJkX25hbWUiLCJjYXJkX251bWJlciIsImV4cGlyZV9tb250aCIsImV4cGlyZV95ZWFyIiwiY2FyZF9jY3YiXSwiYWxsb3dlZF9yZXNwb25zZV9kYXRhIjp7InVybCI6W10sImV2ZW50IjpbInBheW1lbnRfc291cmNlIl19LCJwdXJwb3NlIjoicGF5bWVudF9zb3VyY2UiLCJ3ZWJob29rX2Rlc3RpbmF0aW9uIjoiIiwic3VjY2Vzc19yZWRpcmVjdF91cmwiOiIiLCJlcnJvcl9yZWRpcmVjdF91cmwiOiIiLCJsYWJlbCI6IiIsIm1ldGEiOnt9LCJpYXQiOjE1ODgwNzMyOTl9.9vVzb8uGwsXo-5y7xL4YKyDrlJpPJUGxivl6YBqOVsc"
                                      },
                                      "example": [
                                        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwcmVkZWZpbmVkX2ZpZWxkcyI6eyJnYXRld2F5X2lkIjoiNWVhNjkyMzRiOTc1ZTQ1NmExMTkxNTQ0IiwidHlwZSI6ImNhcmQifSwiZGVmaW5lZF9mb3JtX2ZpZWxkcyI6WyJmaXJzdF9uYW1lKiIsImxhc3RfbmFtZSoiLCJjYXJkX25hbWUiLCJjYXJkX251bWJlciIsImV4cGlyZV9tb250aCIsImV4cGlyZV95ZWFyIiwiY2FyZF9jY3YiXSwiYWxsb3dlZF9yZXNwb25zZV9kYXRhIjp7InVybCI6W10sImV2ZW50IjpbInBheW1lbnRfc291cmNlIl19LCJwdXJwb3NlIjoicGF5bWVudF9zb3VyY2UiLCJ3ZWJob29rX2Rlc3RpbmF0aW9uIjoiIiwic3VjY2Vzc19yZWRpcmVjdF91cmwiOiIiLCJlcnJvcl9yZWRpcmVjdF91cmwiOiIiLCJsYWJlbCI6IiIsIm1ldGEiOnt9LCJpYXQiOjE1ODgwNzMyOTl9.9vVzb8uGwsXo-5y7xL4YKyDrlJpPJUGxivl6YBqOVsc"
                                      ]
                                    },
                                    "paydockPublicKey": {
                                      "type": "string",
                                      "example": "e5f5e6b8a93295f625f16264bcbcaf879b8dac8b"
                                    },
                                    "supportedCards": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "VISA"
                                      },
                                      "example": [
                                        "VISA",
                                        "MASTERCARD",
                                        "MAESTRO",
                                        "AMEX",
                                        "JAPCB",
                                        "DISCOVER",
                                        "DINERS"
                                      ]
                                    }
                                  }
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Paydock Credit card"
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "PAYDOCK"
                                },
                                "questions": {
                                  "type": "array",
                                  "items": {},
                                  "example": []
                                },
                                "retries": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "30m"
                                  },
                                  "example": [
                                    "30m",
                                    "2h",
                                    "3d",
                                    "4M"
                                  ]
                                },
                                "selectorId": {
                                  "type": "string",
                                  "example": "#widget"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "CREDITCARD"
                                }
                              }
                            },
                            "example": [
                              {
                                "formSubmitResponseMessage": "Form submit message can be set in billing config",
                                "formTitle": "Title from config",
                                "gateway": {
                                  "paydockChargeImmediately": true,
                                  "paydockConfigurationTokens": [
                                    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwcmVkZWZpbmVkX2ZpZWxkcyI6eyJnYXRld2F5X2lkIjoiNWVhNjkyMzRiOTc1ZTQ1NmExMTkxNTQ0IiwidHlwZSI6ImNhcmQifSwiZGVmaW5lZF9mb3JtX2ZpZWxkcyI6WyJmaXJzdF9uYW1lKiIsImxhc3RfbmFtZSoiLCJjYXJkX25hbWUiLCJjYXJkX251bWJlciIsImV4cGlyZV9tb250aCIsImV4cGlyZV95ZWFyIiwiY2FyZF9jY3YiXSwiYWxsb3dlZF9yZXNwb25zZV9kYXRhIjp7InVybCI6W10sImV2ZW50IjpbInBheW1lbnRfc291cmNlIl19LCJwdXJwb3NlIjoicGF5bWVudF9zb3VyY2UiLCJ3ZWJob29rX2Rlc3RpbmF0aW9uIjoiIiwic3VjY2Vzc19yZWRpcmVjdF91cmwiOiIiLCJlcnJvcl9yZWRpcmVjdF91cmwiOiIiLCJsYWJlbCI6IiIsIm1ldGEiOnt9LCJpYXQiOjE1ODgwNzMyOTl9.9vVzb8uGwsXo-5y7xL4YKyDrlJpPJUGxivl6YBqOVsc"
                                  ],
                                  "paydockPublicKey": "e5f5e6b8a93295f625f16264bcbcaf879b8dac8b",
                                  "supportedCards": [
                                    "VISA",
                                    "MASTERCARD",
                                    "MAESTRO",
                                    "AMEX",
                                    "JAPCB",
                                    "DISCOVER",
                                    "DINERS"
                                  ]
                                },
                                "label": "Paydock Credit card",
                                "provider": "PAYDOCK",
                                "retries": [
                                  "30m",
                                  "2h",
                                  "3d",
                                  "4M"
                                ],
                                "selectorId": "#widget",
                                "type": "CREDITCARD"
                              },
                              {
                                "disclaimer": "Credit Card. A non-refundable processing fee will be applied and added to the policy payment amount by our third-party credit card processor, One Inc. The total amount (including the processing fee) will be reflected on the invoice.",
                                "gateway": {
                                  "oneincAccountGroup": "PF1"
                                },
                                "label": "OneInc CreditCard",
                                "provider": "ONEINC",
                                "questions": [],
                                "type": "CREDITCARD"
                              },
                              {
                                "disclaimer": "ACH / EFT Payment. This payment method is provided at no cost to the customer.",
                                "gateway": {
                                  "oneincAccountGroup": "PF1"
                                },
                                "label": "OneInc EFT",
                                "provider": "ONEINC",
                                "questions": [],
                                "type": "EFT"
                              },
                              {
                                "disclaimer": "Checks. Please make check payable to WNC Insurance Services and mail to: WNC Insurance Services, Inc. 9200 S Dadeland Blvd, Ste 409 Miami, FL 33156",
                                "label": "Check",
                                "provider": "ESCROW",
                                "questions": [
                                  "billing_method_renewal_term"
                                ],
                                "type": "ESCROW"
                              }
                            ]
                          },
                          "redirectUrl": {
                            "type": "string",
                            "example": ""
                          },
                          "showNotes": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "calculateInstalments": {
                        "type": "boolean",
                        "example": true
                      },
                      "configurationSet": {
                        "type": "string",
                        "example": "SET_ONE"
                      },
                      "currency": {
                        "type": "string",
                        "example": "AUD"
                      },
                      "frequency": {
                        "type": "string",
                        "example": "month"
                      },
                      "instalments": {
                        "type": "number",
                        "example": 6
                      },
                      "invoice": {
                        "type": "object",
                        "properties": {
                          "documentTemplateSettings": {
                            "type": "object",
                            "properties": {
                              "subject": {
                                "type": "string",
                                "example": "$DOCUMENT/TEMPLATE/HOOK/b0332947-2f85-416f-b655-d0b68cd36e44"
                              },
                              "topic": {
                                "type": "string",
                                "example": "2021-10-06T23:00:00.000Z"
                              }
                            }
                          },
                          "numberGenTopic": {
                            "type": "string",
                            "example": "invoice-number"
                          },
                          "paymentTerms": {
                            "type": "object",
                            "properties": {
                              "periodToOverdue": {
                                "type": "string",
                                "example": "30d"
                              },
                              "periodToVoid": {
                                "type": "string",
                                "example": "35d"
                              }
                            }
                          },
                          "title": {
                            "type": "string",
                            "example": "invoice config test"
                          }
                        }
                      },
                      "invoiceConfigTopic": {
                        "type": "string",
                        "example": "INVOICE_CONFIG_TEST"
                      },
                      "paymentMethod": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "CREDITCARD"
                        },
                        "example": [
                          "CREDITCARD",
                          "ESCROW"
                        ]
                      },
                      "title": {
                        "type": "string",
                        "example": "Subscription config test."
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "subscription-config-upsert"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/SUBSCRIPTION/CONFIG/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_CONFIG_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_payment_transaction_upsert",
      "operationId": "transactionExecuteGatewayCall",
      "name": "Transaction Execute Gateway Call",
      "description": "TRANSACTION - execute (gateway call)",
      "schema": {
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_payment_transaction_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/payment/transaction/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {}
                  },
                  "command": {
                    "type": "string",
                    "example": "transaction-verify"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PAYMENT/BILLING/TRANSACTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_create_permission",
      "operationId": "permissionCreate",
      "name": "Permission Create",
      "description": "PERMISSION - create",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_create_permission/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/create/permission"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Reforge Anduril"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-permission"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/PERMISSION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_get_permission",
      "operationId": "permissionGet",
      "name": "Permission Get",
      "description": "PERMISSION - get",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_get_permission/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/get/permission"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-permission"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/PERMISSION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PRM_REFORGE_ANDURIL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_list_permission",
      "operationId": "permissionList",
      "name": "Permission List",
      "description": "PERMISSION - list",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_list_permission/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/list/permission"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-permission"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/PERMISSION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_list_permission_detail",
      "operationId": "permissionListDetails",
      "name": "Permission List Details",
      "description": "PERMISSION - list details",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_list_permission_detail/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/list/permission/detail"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-permission-detail"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/PERMISSION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_upsert_permission",
      "operationId": "permissionUpsert",
      "name": "Permission Upsert",
      "description": "PERMISSION - upsert",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_upsert_permission/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/upsert/permission"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "example": "Anduril"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-permission"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/PERMISSION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PRM_REFORGE_ANDURIL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_create_role",
      "operationId": "roleCreate",
      "name": "Role Create",
      "description": "ROLE - create",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_create_role/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/create/role"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Wizard"
                      },
                      "permission": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "*"
                        },
                        "example": [
                          "*"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-role"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/ROLE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_get_role",
      "operationId": "roleGet",
      "name": "Role Get",
      "description": "ROLE - get",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_get_role/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/get/role"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-role"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/ROLE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PRM_RANGER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_list_role",
      "operationId": "roleList",
      "name": "Role List",
      "description": "ROLE - list",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_list_role/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/list/role"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "PRM_RANGER"
                        },
                        "example": [
                          "PRM_RANGER"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-role"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/ROLE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_permission_upsert_role",
      "operationId": "roleUpsert",
      "name": "Role Upsert",
      "description": "ROLE - upsert",
      "schema": {
        "tags": [
          "permission"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_permission_upsert_role/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/permission/upsert/role"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Ranger of the North"
                      },
                      "permission": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "PRM_DESTROY_ONE_RING"
                        },
                        "example": [
                          "PRM_DESTROY_ONE_RING",
                          "PRM_REFOREGE_ANDURIL",
                          "PRM_SLAY_NAZGUL"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-role"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PERMISSION/ROLE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PRM_RANGER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_platform_get",
      "operationId": "getPlatformDefinition",
      "name": "Get Platform Definition",
      "description": "Get platform definition",
      "schema": {
        "tags": [
          "platform"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_platform_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/platform/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-definition"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PLATFORM"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PLT_DEFINITION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_platform_history",
      "operationId": "getPlatformDefinitionAtOffset",
      "name": "Get Platform Definition At Offset",
      "description": "Get platform definition at offset",
      "schema": {
        "tags": [
          "platform"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_platform_history/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/platform/history"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-history"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PLATFORM"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PLT_DEFINITION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_platform_upsert",
      "operationId": "updatePlatform",
      "name": "Update Platform",
      "description": "Update platform",
      "schema": {
        "tags": [
          "platform"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_platform_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/platform/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "contactDetails": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "example": "privatefloodquote@tmhighland.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": "888-386-9488"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2019-09-19T03:45:56.858Z"
                      },
                      "customer": {
                        "type": "object",
                        "properties": {
                          "successMessage": {
                            "type": "string",
                            "example": "Customer success message"
                          }
                        }
                      },
                      "disclaimer": {
                        "type": "string",
                        "example": "You are bound by these **[Terms of Use](https://www.wncinsuranceservices.com/online-terms-of-use)** beginning on the first day you access the WNC On-Line platform for any purpose (“Effective Date”) and for so long as you continue using the WNC On-Line platform. We may revoke or suspend your ability to access the WNC On-Line platform at any time, with or without prior notice. Looking to register? **[You can sign up here](https://www.google.com)** xxxx"
                      },
                      "favicon": {
                        "type": "string",
                        "example": "https://web-resources-bucket-628781517450-us-east-1.s3.amazonaws.com/tmh_favicon_compress.png"
                      },
                      "logoUrl": {
                        "type": "string",
                        "example": "https://web-resources-bucket-628781517450-us-east-1.s3.amazonaws.com/Full-color-TMH-logo.svg"
                      },
                      "name": {
                        "type": "string",
                        "example": "TMH"
                      },
                      "phone": {
                        "type": "string",
                        "example": ""
                      },
                      "theme": {
                        "type": "object",
                        "properties": {
                          "config": {
                            "type": "object",
                            "properties": {
                              "cardCollapsable": {
                                "type": "object",
                                "properties": {
                                  "contentInner": {
                                    "type": "object",
                                    "properties": {
                                      "paddingBottom": {
                                        "type": "number",
                                        "example": 0.75
                                      },
                                      "paddingLeft": {
                                        "type": "number",
                                        "example": 0.75
                                      },
                                      "paddingRight": {
                                        "type": "number",
                                        "example": 0.75
                                      },
                                      "paddingTop": {
                                        "type": "number",
                                        "example": 0.75
                                      }
                                    }
                                  }
                                }
                              },
                              "form": {
                                "type": "object",
                                "properties": {
                                  "errorPosition": {
                                    "type": "string",
                                    "example": "relative"
                                  },
                                  "spacing": {
                                    "type": "number",
                                    "example": 0.75
                                  }
                                }
                              },
                              "global": {
                                "type": "object",
                                "properties": {
                                  "spacing": {
                                    "type": "number",
                                    "example": 0.75
                                  }
                                }
                              }
                            }
                          },
                          "palette": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "object",
                                "properties": {
                                  "main": {
                                    "type": "string",
                                    "example": "#EB5757"
                                  }
                                }
                              },
                              "primary": {
                                "type": "object",
                                "properties": {
                                  "main": {
                                    "type": "string",
                                    "example": "#2199D4"
                                  }
                                }
                              },
                              "secondary": {
                                "type": "object",
                                "properties": {
                                  "main": {
                                    "type": "string",
                                    "example": "#2199D4"
                                  }
                                }
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "main": {
                                    "type": "string",
                                    "example": "#030303"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2019-12-06T07:49:29.081Z"
                      },
                      "version": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-definition"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PLATFORM"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_product_upsert",
      "operationId": "createProduct",
      "name": "Create Product",
      "description": "create product",
      "schema": {
        "tags": [
          "product"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_product_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/product/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "example": "property"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-product"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PRODUCT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_product_get",
      "operationId": "getProductAtOffset",
      "name": "Get Product At Offset",
      "description": "Get product at offset",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_product_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/product/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "offset": {
                        "type": "number",
                        "example": 1623281732822000
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "get-product-at-offset"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PRODUCT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PRD_AE2721DD2566053"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_product_list",
      "operationId": "listAllProducts",
      "name": "List All Products",
      "description": "List all products",
      "schema": {
        "tags": [
          "product"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_product_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/product/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_11"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-products-by-team"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PRODUCT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_product_history",
      "operationId": "getHistory",
      "name": "Get History",
      "description": "Get history",
      "schema": {
        "tags": [
          "product"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_product_history/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/product/history"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-history"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PRODUCT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PRD_AE2721DD2566053"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_create",
      "operationId": "profileCreate",
      "name": "Profile Create",
      "description": "PROFILE - Create",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_create/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/create"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "admin@evari.tech"
                      },
                      "profileInternalKey": {
                        "type": "string",
                        "example": "PFL_BUILDER"
                      },
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_EVARI"
                      },
                      "userId": {
                        "type": "string",
                        "example": "USR_675FE7E1CFF4C4E"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-user-profile"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_get",
      "operationId": "profileGet",
      "name": "Profile Get",
      "description": "PROFILE - get",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_get_profile-session",
      "operationId": "profileGetSession",
      "name": "Profile Get Session",
      "description": "PROFILE - get session",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_get_profile-session/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/get/profile-session"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_list",
      "operationId": "profileListDraft",
      "name": "Profile List Draft",
      "description": "PROFILE - list draft",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "archived": {
                        "type": "boolean",
                        "example": false
                      },
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_EVARI"
                      }
                    }
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_publish",
      "operationId": "profilePublish",
      "name": "Profile Publish",
      "description": "PROFILE - publish",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_publish/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/publish"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "publish-profile"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PFL_BUILDER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_update",
      "operationId": "profileUpdate",
      "name": "Profile Update",
      "description": "PROFILE - update",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_update/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/update"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_45"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "update-user-profile"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PFL_USR_SFTKZIGM2KON3NSAGJH1B"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_update_config",
      "operationId": "profileConfigUpdateUserProfileDisplayPrefs",
      "name": "Profile Config Update User Profile Display Prefs",
      "description": "PROFILE CONFIG - update user profile display prefs",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_update_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/update/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "internalKey": {
                        "type": "string",
                        "example": "PFL_AGENT_QUESTIONS"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "answerConfig": {
                              "type": "object",
                              "properties": {
                                "defaultValue": {
                                  "type": "string",
                                  "example": ""
                                },
                                "placeholder": {
                                  "type": "string",
                                  "example": "Joe"
                                },
                                "validation": {
                                  "type": "object",
                                  "properties": {
                                    "error_message": {
                                      "type": "string",
                                      "example": "Please tell us your first name"
                                    }
                                  }
                                }
                              }
                            },
                            "answerType": {
                              "type": "string",
                              "example": "STRING"
                            },
                            "dataSource": {
                              "type": "object",
                              "properties": {
                                "dataSourceConfiguration": {
                                  "type": "object",
                                  "properties": {}
                                },
                                "endpoint": {
                                  "type": "string",
                                  "example": ""
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "internalKey": {
                                        "type": "string",
                                        "example": "PFL_M1"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "Start Wars - A New Hope"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "internalKey": "PFL_M1",
                                      "value": "Start Wars - A New Hope"
                                    },
                                    {
                                      "internalKey": "PFL_m2",
                                      "value": "Start Wars - The Empire Strikes Back"
                                    },
                                    {
                                      "internalKey": "PFL_m3",
                                      "value": "Start Wars - Return of the Jedi"
                                    },
                                    {
                                      "internalKey": "PFL_m4",
                                      "value": "Star Wars - Rogue One"
                                    }
                                  ]
                                },
                                "target": {
                                  "type": "string",
                                  "example": ""
                                }
                              }
                            },
                            "internalDescription": {
                              "type": "string",
                              "example": ""
                            },
                            "internalKey": {
                              "type": "string",
                              "example": "PFL_FIRST_NAME"
                            },
                            "label": {
                              "type": "string",
                              "example": "First NAME"
                            },
                            "parentKey": {
                              "type": "string",
                              "example": ""
                            },
                            "readOnly": {
                              "type": "boolean",
                              "example": false
                            },
                            "rules": {
                              "type": "object",
                              "properties": {
                                "isVisible": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "required": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            }
                          }
                        },
                        "example": [
                          {
                            "answerConfig": {
                              "defaultValue": "",
                              "placeholder": "Joe",
                              "validation": {
                                "error_message": "Please tell us your first name"
                              }
                            },
                            "answerType": "STRING",
                            "dataSource": {
                              "dataSourceConfiguration": {},
                              "endpoint": "",
                              "target": ""
                            },
                            "internalDescription": "",
                            "internalKey": "PFL_FIRST_NAME",
                            "label": "First NAME",
                            "parentKey": "",
                            "readOnly": false,
                            "rules": {
                              "isVisible": true
                            }
                          },
                          {
                            "answerConfig": {
                              "defaultValue": "",
                              "placeholder": "Blogs",
                              "validation": {
                                "error_message": "Please tell us your last name"
                              }
                            },
                            "answerType": "STRING",
                            "dataSource": {
                              "dataSourceConfiguration": {},
                              "endpoint": "",
                              "target": ""
                            },
                            "internalDescription": "",
                            "internalKey": "PFL_LAST_NAME",
                            "label": "Last name",
                            "parentKey": "",
                            "readOnly": false,
                            "rules": {
                              "isVisible": true
                            }
                          },
                          {
                            "answerConfig": {
                              "defaultValue": "",
                              "placeholder": "Blogs",
                              "validation": {
                                "error_message": "Please tell us your company"
                              }
                            },
                            "answerType": "STRING",
                            "dataSource": {
                              "dataSourceConfiguration": {},
                              "endpoint": "",
                              "target": ""
                            },
                            "internalDescription": "",
                            "internalKey": "PFL_COMPNAY_NAME",
                            "label": "Company name",
                            "parentKey": "",
                            "readOnly": false,
                            "rules": {
                              "isVisible": true
                            }
                          },
                          {
                            "answerConfig": {
                              "defaultValue": "",
                              "placeholder": "",
                              "validation": {
                                "error_message": "Please select a colour"
                              }
                            },
                            "answerType": "DROPDOWN",
                            "dataSource": {
                              "options": [
                                {
                                  "internalKey": "PFL_M1",
                                  "value": "Start Wars - A New Hope"
                                },
                                {
                                  "internalKey": "PFL_m2",
                                  "value": "Start Wars - The Empire Strikes Back"
                                },
                                {
                                  "internalKey": "PFL_m3",
                                  "value": "Start Wars - Return of the Jedi"
                                },
                                {
                                  "internalKey": "PFL_m4",
                                  "value": "Star Wars - Rogue One"
                                }
                              ]
                            },
                            "internalDescription": "",
                            "internalKey": "PFL_Q_COLOUR",
                            "label": "What is your favourite movie",
                            "parentKey": "",
                            "readOnly": false,
                            "rules": {
                              "isVisible": true
                            }
                          }
                        ]
                      },
                      "label": {
                        "type": "string",
                        "example": "Agent Questions"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "update-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/CONFIG/QUESTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PFL_AGENT_QUESTIONS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_get-aggregate",
      "operationId": "profileUserGetFromAggregator",
      "name": "Profile User Get From Aggregator",
      "description": "PROFILE USER - get from aggregator",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_get-aggregate/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/get-aggregate"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-public-user-profile"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_get-latest-user-profile",
      "operationId": "profileUserLatestProfile",
      "name": "Profile User Latest Profile",
      "description": "PROFILE USER - latest profile",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_get-latest-user-profile/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/get-latest-user-profile"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "example": "USR_EEC641CC4A9B49E"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "get-latest-user-profile"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_search",
      "operationId": "profileUserGetByEmail",
      "name": "Profile User Get By Email",
      "description": "PROFILE USER - GET by email",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_search/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/search"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "kassandra.stafford@evari.tech"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "search-by-email"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_profilev3_switchRole",
      "operationId": "profileUserSwitchProfile",
      "name": "Profile User Switch Profile",
      "description": "PROFILE USER - switch profile",
      "schema": {
        "tags": [
          "profile"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_profilev3_switchRole/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/profilev3/switchRole"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "internalKey": {
                        "type": "string",
                        "example": "PFL_CUSTOMER_USR_18E31701A9DE6EDUPT_0"
                      },
                      "role": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "PRM_CUSTOMER"
                          },
                          "name": {
                            "type": "string",
                            "example": "Customer"
                          },
                          "topic": {
                            "type": "string",
                            "example": "PRM_CUSTOMER"
                          }
                        }
                      },
                      "teamId": {
                        "type": "string",
                        "example": "TEAM_1"
                      },
                      "userId": {
                        "type": "string",
                        "example": "USR_18E31701A9DE6ED"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "switch-role-profile"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$PROFILE/SWITCHROLE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "PFL_CUSTOMER_USR_18E31701A9DE6EDUPT_0"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_clone",
      "operationId": "answerCloneByTopicPrefix",
      "name": "Answer Clone By Topic Prefix",
      "description": "ANSWER - clone (by topic prefix)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_clone/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/clone"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "fromTopicPrefix": {
                        "type": "string",
                        "example": "1234"
                      },
                      "toTopicPrefix": {
                        "type": "string",
                        "example": "5678"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "clone-answer-by-topic-prefix"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/ANSWER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_get_answer",
      "operationId": "answerGet",
      "name": "Answer Get",
      "description": "ANSWER - get",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_get_answer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/get/answer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "endOffset": {
                        "type": "number",
                        "example": 1631854389655000
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "get-answer-map"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/ANSWER_MAP"
                  },
                  "topic": {
                    "type": "string",
                    "example": "1234"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_test_kv",
      "operationId": "answerTestkv",
      "name": "Answer Testkv",
      "description": "ANSWER - testkv",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_test_kv/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/test/kv"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "$QUESTION/ANSWER/41da4702-37f5-4062-b321-d8a92b34e216/ITGAC_ADD_INDIVIDUALSPOUSE_COUNT"
                      },
                      "value": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "WRITE"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/ANSWER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "1234/TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_list_answer",
      "operationId": "answerListByTopicPrefix",
      "name": "Answer List By Topic Prefix",
      "description": "ANSWER - list (by topic prefix)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_list_answer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/list/answer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "topicPrefix": {
                        "type": "string",
                        "example": "1234"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-answer"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/ANSWER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_upsert_answer",
      "operationId": "answerUpsert",
      "name": "Answer Upsert",
      "description": "ANSWER - upsert",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_upsert_answer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/upsert/answer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "example": "1"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-answer"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/ANSWER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "1234/TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_fix-all_question",
      "operationId": "questionFixAllQuestionOnlyUseOncePerEnvironment",
      "name": "Question Fix All Question Only Use Once Per Environment",
      "description": "QUESTION - fix-all-question - ONLY USE ONCE PER ENVIRONMENT",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_fix-all_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/fix-all/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "topics": {
                        "type": "array",
                        "items": {},
                        "example": []
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "fix-all-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_get_question",
      "operationId": "questionGetDraft",
      "name": "Question Get Draft",
      "description": "QUESTION - get (draft)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_get_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/get/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_list_question",
      "operationId": "questionListPublished",
      "name": "Question List Published",
      "description": "QUESTION - list (published)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_list_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/list/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "topics": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "CIP_BR_Phone"
                        },
                        "example": [
                          "CIP_BR_Phone",
                          "CIP_InsuredPhone",
                          "CIP_MailingStreet",
                          "CIP_Mailing_Line_2",
                          "CIP_BR_AddInterest_State",
                          "CIP_BR_SecondaryAddress",
                          "CIP_BR_AddInterest_City",
                          "CIP_BR_AddInterestType",
                          "CIP_BR_AddInterest_Zip",
                          "CIP_BR_generic_upload",
                          "CIP_BR_Rate_TotalPolicyPremiumFormatted",
                          "CIP_EndorsementEffectiveDateFormatted",
                          "CIP_EndorsementSummary",
                          "PricingBreakdownDisplay",
                          "EndorsementPricingBreakdownDisplay",
                          "CIP_EndorsementDescription",
                          "CIP_EndorsementType",
                          "CIP_EndorsementEffectiveDate",
                          "CIP_BR_declined_by",
                          "DOC_SELECT",
                          "CIP_BR_ProjectType",
                          "CIP_BR_EffectiveDate",
                          "CIP_BR_Haz_distance_to_significant_wf_risk_params.very_high",
                          "CIP_BR_Haz_distance_to_significant_wf_risk_params.moderate",
                          "CIP_BR_Haz_distance_to_significant_wf_risk_params.high",
                          "CIP_BR_refer_quote_attachments",
                          "CIP_BR_send_information_request_button",
                          "CIP_BR_information_requested",
                          "CIP_BR_referConstructionComplete_documents",
                          "CIP_BR_Year_Built",
                          "SUPPLEMENTAL_PROJECT_DETAILS",
                          "BUILDER_INFO_SUMMARY",
                          "LOCATION_INFO_SUMMARY",
                          "PROJECT_DETAILS_SUMMARY",
                          "CIP_BR_Rate_UWTotalPremium",
                          "CIP_BR_Rate_Premium_UW_Adjustment",
                          "CIP_BR_Rate_IRPMAdjust",
                          "CIP_BR_Rate_BaseRateAdjust",
                          "CIP_AgencyRegistrationSubmission",
                          "CIP_AgencyUserNotification",
                          "CIP_AgencyUserCommission",
                          "CIP_AgencyUserEmail",
                          "CIP_AgencyUserLastName",
                          "CIP_AgencyUserFirstName",
                          "CIP_AgencyUserFullName",
                          "CIP_AgencyUsers",
                          "CIP_ListofCarriers",
                          "CIP_LargerParentAgency",
                          "CIP_SubAgentParentage",
                          "CIP_NPNumber",
                          "CIP_TaxpayerID",
                          "CIP_AgencyType",
                          "CIP_AgencyEmail",
                          "CIP_AgencyPhone",
                          "CIP_AgencyZipCode",
                          "CIP_AgencyState",
                          "CIP_AgencyCity",
                          "CIP_AgencyStreet",
                          "CIP_AgentPrincipal",
                          "CIP_BR_DBA",
                          "CIP_AgencyName",
                          "CIP_ProgramName",
                          "CIP_BR_Rate_TotalPremium",
                          "UWAssignee",
                          "endorsement_pill",
                          "CIP_BR_Duration",
                          "CIP_BR_Street",
                          "CIP_BR_City",
                          "CIP_BR_State",
                          "CIP_BR_Zip",
                          "CIP_BR_ProjectCost",
                          "CIP_BR_ExistStructCov",
                          "CIP_BR_ValueExistStruct",
                          "CIP_BR_CompValueLimit",
                          "CIP_BR_AOPDed",
                          "CIP_BR_referProjectType_supportingDocuments",
                          "CIP_BR_referBuildersExperience_resume",
                          "CIP_BR_referConstructionComplete_details",
                          "CIP_BR_referExistingClaims_reason",
                          "CIP_BR_referCnxNR_reason",
                          "CIP_BR_SoftCostWaitPeriod",
                          "CIP_BR_TerrorCover",
                          "CIP_BR_BldrName",
                          "CIP_BR_BldrLicense",
                          "CIP_BR_BldrYrsExp",
                          "CIP_BR_BldrYrsExpNonStruct",
                          "CIP_BR_BldrYrsExpStruct",
                          "CIP_BR_TypeCompBldr",
                          "CIP_BR_BldrClaims",
                          "CIP_BR_BldrClaimDate",
                          "CIP_BR_BldrClaimType",
                          "CIP_BR_BldrClaimLossAmount",
                          "CIP_BR_BldrClaimLossDescription",
                          "CIP_BR_BldrClaimStatus",
                          "CIP_BR_IsBldrInsured",
                          "CIP_InsuredName",
                          "CIP_MailingAddress",
                          "CIP_MailingCity",
                          "CIP_MailingState",
                          "CIP_MailingZip",
                          "CIP_InsuredEmail",
                          "CIP_BR_AddInterest",
                          "CIP_BR_ConstAlreadyStarted",
                          "CIP_BR_PercentConstComp",
                          "CIP_BR_BuildingStructDesc",
                          "CIP_BR_ConstTypeDesc",
                          "CIP_BR_Stories",
                          "CIP_BR_SqrFoot",
                          "CIP_BR_Piers",
                          "CIP_BR_DelayInStart",
                          "CIP_BR_VacantStruct",
                          "CIP_BR_Occupant",
                          "CIP_BR_YearExistingStruct",
                          "CIP_BR_RoofUpdates",
                          "CIP_BR_YearExistingRoof",
                          "CIP_BR_RoofType",
                          "CIP_BR_ElectricUpdates",
                          "CIP_BR_YearExistingElectric",
                          "CIP_BR_ElectricalPanels",
                          "CIP_BR_BuildingUpdates",
                          "CIP_BR_YrExistingPlumb",
                          "CIP_BR_PolyPipes",
                          "CIP_BR_ExistingStructClaims",
                          "CIP_BR_StructClaimDate",
                          "CIP_BR_StructClaimType",
                          "CIP_BR_StructClaimLossAmt",
                          "CIP_BR_StructClaimLossDesc",
                          "CIP_BR_StructClaimStatus",
                          "CIP_BR_DetailReno",
                          "CIP_BR_PriorIns",
                          "CIP_BR_PriorInsurer",
                          "CIP_BR_TypeIns",
                          "CIP_BR_PriorInsCnxNR",
                          "CIP_BR_PriorInsExpDate",
                          "CIP_BR_PriorInsPrem",
                          "CIP_BR_RiskOverWater",
                          "CIP_BR_NonConvConst",
                          "CIP_BR_Bankruptcy",
                          "CIP_BR_InsFraudArson",
                          "CIP_BR_SolarPanels",
                          "CIP_BR_Foreclosure",
                          "CIP_BR_MonthsVacant",
                          "CIP_BR_HistoricLandmark",
                          "CIP_BR_FireWaterSmokeMold",
                          "CIP_BR_FoundationWork",
                          "CIP_BR_Name",
                          "CIP_BR_Address",
                          "CIP_BR_DateConstStarted",
                          "CIP_SUMMARY",
                          "CIP_BR_SUMMARY",
                          "CIP_BR_BldrClaim",
                          "CIP_BR_BldrClaimsNumber",
                          "CIP_BR_refer_quote_button",
                          "underwriting_decision",
                          "uw_selector",
                          "blank_endorsement_upload",
                          "blank_endorsement",
                          "CIP_BR_InspectionFee",
                          "uw_notes",
                          "uw_documents",
                          "CIP_BR_P1_Rate_IRPM",
                          "CIP_BR_P1_Rate_BaseRate",
                          "CIP_BR_AddressLookup",
                          "CIP_BR_Loan_Number",
                          "CIP_BR_Interests",
                          "CIP_BR_Haz_WindPoolText",
                          "CIP_EntityIndividual",
                          "CIP_BR_Premium_Finance_Company_Name",
                          "CIP_BR_Haz_ConvectionStormScore",
                          "CIP_BR_Haz_CrimeScore",
                          "CIP_BR_Haz_CrimeText",
                          "CIP_BR_Haz_HailScore",
                          "CIP_BR_Haz_HurricaneScore",
                          "CIP_BR_Haz_DistanceFromNearestHydrant",
                          "CIP_BR_Haz_Latitude",
                          "CIP_BR_Haz_Longitude",
                          "CIP_BR_Haz_MatchScore",
                          "CIP_BR_Haz_ProtectionClass",
                          "CIP_BR_Haz_DriveDistanceFireStation",
                          "CIP_BR_Haz_StateCounty",
                          "CIP_BR_Haz_TornadoScore",
                          "CIP_BR_Haz_WindScore",
                          "CIP_BR_Haz_FireScore",
                          "CIP_BR_Haz_CoastDistance",
                          "CIP_BR_Haz_WindPool",
                          "CIP_BR_NoLossLetter",
                          "CIP_BR_Haz_SinkholeDistance",
                          "CIP_BR_Haz_County",
                          "CIP_HH_Response",
                          "main_policy",
                          "underwriter_code",
                          "payment_method",
                          "business_description",
                          "agent",
                          "name_of_insured",
                          "policy_number",
                          "policy_status",
                          "policy_term",
                          "policy_wording",
                          "original_inception_date",
                          "additional_insureds_exist",
                          "additional_insureds",
                          "replaces_policy",
                          "number_of_residential_locations",
                          "number_of_commercial_locations",
                          "CIP_BR_Haz_Year_Built",
                          "Enter Details Manually",
                          "CIP_BR_underwriting_decision",
                          "DOC_GO_BUTTON",
                          "CIP_BR_Haz_ProtectClass",
                          "CIP_HH_download",
                          "CIP_BR_ConstType",
                          "CIP_BR_BuildingStruct",
                          "CIP_BR_BluePrint_DropDown",
                          "CIP_BR_SoftCost_DropDown",
                          "CIP_BR_ClaimPrep_DropDown",
                          "CIP_BR_ClaimPrep",
                          "CIP_BR_BluePrint",
                          "CIP_BR_SoftCost",
                          "CIP_BR_AddInterestTypes",
                          "CIP_BR_3rdPartyData",
                          "CIP_BR_Rate_BaseRate",
                          "RDR_CIP_BR_Rate_IRPM",
                          "CIP_BR_Rate_IRPM",
                          "CIP_BR_WindHailDed"
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_publish_question",
      "operationId": "questionPublish",
      "name": "Question Publish",
      "description": "QUESTION - publish",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_publish_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/publish/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "publish-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "UW_OBJECT_TAX_REGION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_publish-multi_question",
      "operationId": "questionPublishMulti",
      "name": "Question Publish Multi",
      "description": "QUESTION - publish multi",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_publish-multi_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/publish-multi/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "topics": {
                        "type": "array",
                        "items": {},
                        "example": []
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "multi-publish-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/DRAFT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_upsert_question",
      "operationId": "questionUpsertDeleteDraft",
      "name": "Question Upsert Delete Draft",
      "description": "QUESTION - upsert delete (draft)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_upsert_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/upsert/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "answerConfig": {
                        "type": "object",
                        "properties": {
                          "aggregatorConfig": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "number",
                                "example": 0
                              },
                              "size": {
                                "type": "string",
                                "example": "400"
                              }
                            }
                          },
                          "aggregatorTopic": {
                            "type": "string",
                            "example": "user"
                          },
                          "dataPaths": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "example": "$.body.AccountNumber"
                                },
                                "topic": {
                                  "type": "string",
                                  "example": "DATA_LIST_TEST_ACCOUNT_NUMBER"
                                }
                              }
                            },
                            "example": [
                              {
                                "path": "$.body.AccountNumber",
                                "topic": "DATA_LIST_TEST_ACCOUNT_NUMBER"
                              }
                            ]
                          },
                          "textPath": {
                            "type": "string",
                            "example": "$.body.User"
                          },
                          "valuePath": {
                            "type": "string",
                            "example": "$.body"
                          }
                        }
                      },
                      "answerType": {
                        "type": "string",
                        "example": "DATA_LIST"
                      },
                      "helpText": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "icon"
                          },
                          "value": {
                            "type": "string",
                            "example": "Data list test"
                          }
                        }
                      },
                      "internalKey": {
                        "type": "string",
                        "example": "DATA_LIST_TEST"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "DATA_LIST_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_upsert-multi_question",
      "operationId": "questionUpsertMultiDraft",
      "name": "Question Upsert Multi Draft",
      "description": "QUESTION - upsert multi (draft)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_upsert-multi_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/upsert-multi/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "questions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "body": {
                              "type": "object",
                              "properties": {
                                "answerConfig": {
                                  "type": "object",
                                  "properties": {
                                    "additionalResponse": {
                                      "type": "string",
                                      "example": "Enter Details Manually"
                                    },
                                    "apiConfig": {
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "type": "string",
                                          "example": "apiv2/collation/command"
                                        },
                                        "apiRoot": {
                                          "type": "string",
                                          "example": "https://api.ecclesiastical-test.evari.tech"
                                        },
                                        "body": {
                                          "type": "object",
                                          "properties": {
                                            "body": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "query": {
                                                    "type": "string",
                                                    "example": ""
                                                  }
                                                }
                                              },
                                              "example": [
                                                {
                                                  "query": ""
                                                }
                                              ]
                                            },
                                            "command": {
                                              "type": "string",
                                              "example": "run-collation-await"
                                            },
                                            "subject": {
                                              "type": "string",
                                              "example": "$COLLATION/CONFIG"
                                            },
                                            "topic": {
                                              "type": "string",
                                              "example": "ADDRESS_LOOKUP_UK"
                                            }
                                          }
                                        },
                                        "dataOperator": {
                                          "type": "string",
                                          "example": ""
                                        },
                                        "lookupDelimiter": {
                                          "type": "string",
                                          "example": ""
                                        },
                                        "method": {
                                          "type": "string",
                                          "example": "post"
                                        }
                                      }
                                    },
                                    "initCurrencyValue": {
                                      "type": "string",
                                      "example": "GBP"
                                    },
                                    "minValue": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "options": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "text": {
                                            "type": "string",
                                            "example": "£100,000"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "£100,000"
                                          }
                                        }
                                      },
                                      "example": [
                                        {
                                          "text": "£100,000",
                                          "value": "£100,000"
                                        },
                                        {
                                          "text": "£250,000",
                                          "value": "£250,000"
                                        },
                                        {
                                          "text": "£500,000",
                                          "value": "£500,000"
                                        },
                                        {
                                          "text": "£1,000,000",
                                          "value": "£1,000,000"
                                        },
                                        {
                                          "text": "Other",
                                          "value": "Other"
                                        }
                                      ]
                                    },
                                    "questionTopic": {
                                      "type": "array",
                                      "items": {},
                                      "example": []
                                    },
                                    "showAdditionalResponse": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "suggestionLimit": {
                                      "type": "string",
                                      "example": "unlimited"
                                    }
                                  }
                                },
                                "answerType": {
                                  "type": "string",
                                  "example": "CURRENCY"
                                },
                                "defaultValue": {
                                  "example": "",
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "12 months"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "£100,000"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "number",
                                      "example": 500000
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "£100,000"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "50000"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "0.15"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "no"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": "£5 million"
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    },
                                    {
                                      "type": "string",
                                      "example": ""
                                    }
                                  ]
                                },
                                "helpText": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "icon"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": ""
                                    }
                                  }
                                },
                                "internalKey": {
                                  "type": "string",
                                  "example": "Outbuilding_sum_insured"
                                },
                                "isRequired": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "isVisible": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "itemLimit": {
                                  "type": "number",
                                  "example": 1
                                },
                                "itemNumber": {
                                  "type": "string",
                                  "example": "5.14"
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Declared value of any outbuildings"
                                },
                                "multiline": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "readOnly": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "styles": {
                                  "type": "object",
                                  "properties": {
                                    "buttonText": {
                                      "type": "string",
                                      "example": "Add Location"
                                    },
                                    "editIcon": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "expandable": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "itemLabel": {
                                      "type": "string",
                                      "example": ""
                                    },
                                    "readOnly": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "removeIcon": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "showIndex": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "card"
                                    }
                                  }
                                }
                              }
                            },
                            "subject": {
                              "type": "string",
                              "example": "$QUESTION/DRAFT"
                            },
                            "topic": {
                              "type": "string",
                              "example": "Outbuilding_sum_insured"
                            }
                          }
                        },
                        "example": [
                          {
                            "body": {
                              "answerConfig": {
                                "initCurrencyValue": "GBP",
                                "minValue": 0
                              },
                              "answerType": "CURRENCY",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Outbuilding_sum_insured",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.14",
                              "label": "Declared value of any outbuildings",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Outbuilding_sum_insured"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": true,
                              "helpText": {
                                "type": "icon",
                                "value": "Fixed and unfixed play equipment is covered up to £20,000 in the aggregate in any one period of insurance as part of the limit for fixed and unfixed equipment in the grounds of the premises.\n\n If this is insufficient, please let us know what sum insured you require"
                              },
                              "internalKey": "Standard_play_equipment_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.28",
                              "label": "Is play equipment cover sufficient?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Standard_play_equipment_SI"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "questionTopic": []
                              },
                              "answerType": "ARRAY",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Number_locations",
                              "isRequired": false,
                              "isVisible": true,
                              "itemLimit": 1,
                              "itemNumber": "4.02",
                              "label": "Are there any additional locations to be insured?",
                              "multiline": false,
                              "readOnly": false,
                              "styles": {
                                "buttonText": "Add Location",
                                "editIcon": true,
                                "expandable": true,
                                "itemLabel": "",
                                "readOnly": false,
                                "removeIcon": true,
                                "showIndex": true,
                                "type": "card"
                              }
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Number_locations"
                          },
                          {
                            "body": {
                              "answerType": "STRING",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Insured_title",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "1.04",
                              "label": "Name of establishment to be insured",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Insured_title"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "£100,000",
                                    "value": "£100,000"
                                  },
                                  {
                                    "text": "£250,000",
                                    "value": "£250,000"
                                  },
                                  {
                                    "text": "£500,000",
                                    "value": "£500,000"
                                  },
                                  {
                                    "text": "£1,000,000",
                                    "value": "£1,000,000"
                                  },
                                  {
                                    "text": "Other",
                                    "value": "Other"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "PI_continuous",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "10.06",
                              "label": "Has cover been continuous since the Professional Indemnity policy was first taken out?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PI_continuous"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_profitable",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.04",
                              "label": "Has the nursery made a profit for the last 2 years?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_profitable"
                          },
                          {
                            "body": {
                              "answerType": "STRING",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Specified_item_description",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.30b",
                              "label": "Description of specified items",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Specified_item_description"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "H&S_prosecutions",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "3.06",
                              "label": "Ever been convicted of any criminal offence other than a driving offence or has any non – motoring prosecutions pending (you only need to tell us about any convictions that are unspent under the Rehabilitation of Offenders Act 1974) ",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "H&S_prosecutions"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "12 months",
                                    "value": "12 months"
                                  },
                                  {
                                    "text": "18 months",
                                    "value": "18 months"
                                  },
                                  {
                                    "text": "24 months",
                                    "value": "24 months"
                                  },
                                  {
                                    "text": "36 months",
                                    "value": "36 months"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "12 months",
                              "helpText": {
                                "type": "icon",
                                "value": "The indemnity period should represent the time it would take to get your business back to normal trading after a loss"
                              },
                              "internalKey": "BI_MIP",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "6.03",
                              "label": "Do you require a different indemnity period?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "BI_MIP"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "additionalResponse": "Enter Details Manually",
                                "apiConfig": {
                                  "address": "apiv2/collation/command",
                                  "apiRoot": "https://api.ecclesiastical-test.evari.tech",
                                  "body": {
                                    "body": [
                                      {
                                        "query": ""
                                      }
                                    ],
                                    "command": "run-collation-await",
                                    "subject": "$COLLATION/CONFIG",
                                    "topic": "ADDRESS_LOOKUP_UK"
                                  },
                                  "dataOperator": "",
                                  "lookupDelimiter": "",
                                  "method": "post"
                                },
                                "showAdditionalResponse": false,
                                "suggestionLimit": "unlimited"
                              },
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Correspondence_address",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "1.10",
                              "label": "Postal address",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Correspondence_address"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "initCurrencyValue": "GBP",
                                "minValue": 0
                              },
                              "answerType": "CURRENCY",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Specified_item_value",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.30a",
                              "label": "Value of specified items",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Specified_item_value"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Adequate _outbuilding_window_security",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.17",
                              "label": "Are all opening windows or rooflights accessible from the ground or via roofs, pipework or other structures secured by key operated locking devices?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Adequate _outbuilding_window_security"
                          },
                          {
                            "body": {
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Flood_score",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.45",
                              "label": "Flood Score - LOOKUP",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Flood_score"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Trees_removed_recently",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56i",
                              "label": "Have any trees listed above been removed within the last 3 years?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Trees_removed_recently"
                          },
                          {
                            "body": {
                              "answerType": "DATE",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "PI_existing_limit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "10.07",
                              "label": "What is the limit of indemnity on your current policy?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PI_existing_limit"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "£25,000",
                                    "value": "£25,000"
                                  },
                                  {
                                    "text": "£100,000",
                                    "value": "£100,000"
                                  },
                                  {
                                    "text": "More than £100,000",
                                    "value": "More than £100,000"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "£100,000",
                              "helpText": {
                                "type": "icon",
                                "value": "The standard limit of indemnity for Directors and officers liability is £25,000"
                              },
                              "internalKey": "D&O_limit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.01",
                              "label": "The standard limit of indemnity for Directors & Officers is £25,000, please select a higher limit of indemnity if required",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_limit"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_organisation_type",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.02",
                              "label": "Is the nursery a charity, sole trader, partnership or listed on a stock exchange?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_organisation_type"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": "Cover provides £50,000 for Death, for Loss of limb(s) or eye(s) and for Permanent total disablement.\n\n£500 per week for Temporary total disablement and £250 per week for Temporary partial disablement."
                              },
                              "internalKey": "PA_good_health",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "8.01",
                              "label": "To the best of your knowledge or belief are all the persons to be insured in good physical and mental health?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PA_good_health"
                          },
                          {
                            "body": {
                              "answerType": "STRING",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Applicant_name",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "1.01",
                              "label": "Name of applicant",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Applicant_name"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Regulatory_sanctions",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "3.09",
                              "label": "a. whether in a personal capacity or in connection with any company, business or firm ever been declared bankrupt or been the subject of bankruptcy or insolvency proceedings",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Regulatory_sanctions"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Building_works",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.71",
                              "label": "Is any premises in the course of construction, erection, undergoing building works or has building works planned in the next 12 months?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Building_works"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": "Note: only complete this if you require cover for individual items exceeding £2,500 away from the premises.\n\n Items of a lower value will be covered under the ‘Property away from the premises' extension up a maximum of £5,000 for any one claim\n\n Note for EU and WW: this cover is only for items taken overseas temporarily"
                              },
                              "internalKey": "Specified_items_insured",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.30",
                              "label": "Is specified items cover sufficient?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Specified_items_insured"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Buildings_insured",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.08",
                              "label": "Are you looking to insure buildings on your policy?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Buildings_insured"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bankruptcies",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "3.08",
                              "label": "Ever been prosecuted under the Health & Safety at Work etc Act or any similar legislation",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bankruptcies"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "Wooden Construction",
                                    "value": "Wooden Construction"
                                  },
                                  {
                                    "text": "Thatched",
                                    "value": "Thatched"
                                  },
                                  {
                                    "text": "Terrapin",
                                    "value": "Terrapin"
                                  },
                                  {
                                    "text": "Porta Cabin",
                                    "value": "Porta Cabin"
                                  },
                                  {
                                    "text": "Mobile Classroom",
                                    "value": "Mobile Classroom"
                                  },
                                  {
                                    "text": "Other",
                                    "value": "Other"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Outbuilding_construction",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.15",
                              "label": "Construction of outbuildings",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Outbuilding_construction"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "Grade 1",
                                    "value": "Grade 1"
                                  },
                                  {
                                    "text": "Grade 2",
                                    "value": "Grade 2"
                                  },
                                  {
                                    "text": "Grade 3",
                                    "value": "Grade 3"
                                  },
                                  {
                                    "text": "Grade 4",
                                    "value": "Grade 4"
                                  },
                                  {
                                    "text": "Grade 5",
                                    "value": "Grade 5"
                                  },
                                  {
                                    "text": "Grade 6",
                                    "value": "Grade 6"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Care_inspectorate_score",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.05c",
                              "label": "Education Scotland - Care Inspectorate : What was your most recent inspection grade?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Care_inspectorate_score"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Forest_schools",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.13",
                              "label": "Do you operate a forest school facility?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Forest_schools"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_potential_claims",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.09",
                              "label": "Have there been any circumstances that might reasonably be expected to give rise to any claim against any of the Directors or Officers of the nursery?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_potential_claims"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Portable_heaters",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.66",
                              "label": "Do you use portable heaters?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Portable_heaters"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "additionalResponse": "Enter Details Manually",
                                "apiConfig": {
                                  "address": "apiv2/collation/command",
                                  "apiRoot": "https://api.ecclesiastical-test.evari.tech",
                                  "body": {
                                    "body": [
                                      {
                                        "query": ""
                                      }
                                    ],
                                    "command": "run-collation-await",
                                    "subject": "$COLLATION/CONFIG",
                                    "topic": "ADDRESS_LOOKUP_UK"
                                  },
                                  "dataOperator": "",
                                  "lookupDelimiter": "",
                                  "method": "post"
                                },
                                "showAdditionalResponse": false,
                                "suggestionLimit": "unlimited"
                              },
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Risk_address_1",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "4.01",
                              "label": "Full address of premises to be insured",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Risk_address_1"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Current_insurer",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "3.01",
                              "label": "Current insurer",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Current_insurer"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Adequate_window_security",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.13",
                              "label": "Are all opening windows or rooflights accessible from the ground or via roofs, pipework or other structures secured by key operated locking devices?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Adequate_window_security"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_only_policy",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.13",
                              "label": "Is there any other Directors and Officers insurance in force covering the same risk or any part of the risk?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_only_policy"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "initCurrencyValue": "GBP",
                                "minValue": 0
                              },
                              "answerType": "CURRENCY",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Current_premium",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "3.02",
                              "label": "Current premium",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Current_premium"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "initCurrencyValue": "GBP",
                                "minValue": 0
                              },
                              "answerType": "CURRENCY",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": "Does not cover manual visits to EU"
                              },
                              "internalKey": "Wageroll",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "13.04",
                              "label": "What is the estimated total wageroll for all employees?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Wageroll"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "initCurrencyValue": "GBP",
                                "minValue": 0
                              },
                              "answerType": "CURRENCY",
                              "defaultValue": 500000,
                              "helpText": {
                                "type": "icon",
                                "value": "Standard revenue cover of £500,000 is provided with a 12 month indemnity period\n\nThis should represent your anticipated income, less an amount for any costs that you would not incur whilst the business was not operating e.g. the cost of food and drink etc.\n\n If your selected indemnity period is greater than 12 months, increase the sum insured in proportion remembering to allow for factors such as increases in fees and expansion of the business"
                              },
                              "internalKey": "BI_sum_insured",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "6.02",
                              "label": "Do you require a higher sum insured?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "BI_sum_insured"
                          },
                          {
                            "body": {
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Sanctions_list",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "3.12",
                              "label": "LOOKUP",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Sanctions_list"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Training_records_kept",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.1",
                              "label": "A record is kept for all training delivered to your employees and volunteers?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Training_records_kept"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Single_occupancy",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "4.05",
                              "label": "Are you the sole occupant of the premises?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Single_occupancy"
                          },
                          {
                            "body": {
                              "answerType": "EMAIL",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Email_address",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "1.02",
                              "label": "Email address",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Email_address"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Good_state_of_repair",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.01",
                              "label": "Is the premises in a good state of repair, will it be maintained as such and is the  maintenance programme documented?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Good_state_of_repair"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Prior_movement",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56a",
                              "label": "Have there been any incidents of structural movement of any kind either at the property or in the adjacent properties?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Prior_movement"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "H&S_policy",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.08",
                              "label": "You have a written health and safety policy which is reviewed at least annually",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "H&S_policy"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "£100,000",
                                    "value": "£100,000"
                                  },
                                  {
                                    "text": "£250,000",
                                    "value": "£250,000"
                                  },
                                  {
                                    "text": "£500,000",
                                    "value": "£500,000"
                                  },
                                  {
                                    "text": "£1,000,000",
                                    "value": "£1,000,000"
                                  },
                                  {
                                    "text": "More than £1,000,000",
                                    "value": "More than £1,000,000"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "£100,000",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "PI_limit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "10.02",
                              "label": "The standard limit of indemnity for Professional indemnity is £100,000, please select a higher limit of indemnity if required",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PI_limit"
                          },
                          {
                            "body": {
                              "answerConfig": {
                                "options": [
                                  {
                                    "text": "Up to 33%",
                                    "value": "Up to 33%"
                                  },
                                  {
                                    "text": "34% to 50%",
                                    "value": "34% to 50%"
                                  },
                                  {
                                    "text": " 51% to 74%",
                                    "value": " 51% to 74%"
                                  },
                                  {
                                    "text": "75%+",
                                    "value": "75%+"
                                  }
                                ]
                              },
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Flat_roof",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.42",
                              "label": "What percentage of the roof is flat?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Flat_roof"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Ofsted_score",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.05a",
                              "label": "Ofsted : What was your most recent inspection grade?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Ofsted_score"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Play_equipment_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.29",
                              "label": "UPDATE Play Equip What sum insured do you require?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Play_equipment_SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Unoccupied",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.67",
                              "label": "Premises occupied and will not be vacant, unoccupied or unfurnished for more than 30 days other than in connection with the usual education holiday calendar",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Unoccupied"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Hot_work_permits",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.04",
                              "label": "Do you ensure a Hot Works Permit system is in place and operated during building works?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Hot_work_permits"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_full_enquiry",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.11",
                              "label": "Has there been a full enquiry of all Directors and Officers of the nursery and its subsidiaries undertaken prior to confirming that the above statements are correct",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_full_enquiry"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "PAT_testing",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.37",
                              "label": "Is there a programme for testing portable electrical appliances and records for this maintained?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PAT_testing"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Unoccupied_renovations",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.70",
                              "label": "Why are the premises unoccupied",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Unoccupied_renovations"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Watercourse_proximity",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.44",
                              "label": "Are the premises at least 200 metres away from any natural or man-made watercourse or the sea?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Watercourse_proximity"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Fire-inspection",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.48",
                              "label": "If the fire services have inspected the premises have you completed all of their requirements?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Fire-inspection"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Previous_flood",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.43",
                              "label": "Have the premises or the site previously suffered from flooding, however caused?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Previous_flood"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Criminal_convictions",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "3.07",
                              "label": "UPDATE - Criminal Convictions",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Criminal_convictions"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Specified_item_location",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.31",
                              "label": "Location of specified items",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Specified_item_location"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Competent_contractors",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.03",
                              "label": "Is there an agreed method to ensure competent and qualified  contractors are employed for building work including maintenance?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Competent_contractors"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": "This declared value is the cost of rebuilding the insured property – not the market value.\nThis sum should include landlord’s fixtures and fittings including fixed glass and sanitary fixtures,\noutbuildings, storage tanks, walls, gates and fences, yards, car parks, roads and pavements, artificial\nplaying surfaces, swimming pools and associated apparatus and the following items fixed to the buildings:\n- wind turbines*, solar panels* and photovoltaic panels*.\nThe Declared value should represent the full rebuilding costs including an allowance for VAT if appropriate,\narchitects’ and surveyors’ fees, legal charges, debris removal and the cost of meeting public authority\nrequirements.\n*Cover for these items fixed to the building is subject to a limit of £20,000 in the aggregate in any one\nperiod of insurance"
                              },
                              "internalKey": "Buildings_sum_insured",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.09",
                              "label": "Declared value of the building",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Buildings_sum_insured"
                          },
                          {
                            "body": {
                              "answerType": "STRING",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Previous_trading_name",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "1.06",
                              "label": "Previous trading name",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Previous_trading_name"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Subsidence_cover_currently",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.53",
                              "label": "Is the property currently insured against subsidence, heave, landslip or settlement?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Subsidence_cover_currently"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Electrical_inspection",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.36",
                              "label": "Has an electrical inspection been carried out within the last  5 years that resulted in a satisfactory grade?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Electrical_inspection"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Visible_damage",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56b",
                              "label": "Are there any visible signs of damage to the property caused by subsidence or repair following such damage?\n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Visible_damage"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Safeguarding_labels_2",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.14c",
                              "label": "UPDATE Safeguarding 2",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Safeguarding_labels_2"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Outstanding_inspection_requirements",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.06",
                              "label": "Are there any outstanding requirements from your last inspection?\n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Outstanding_inspection_requirements"
                          },
                          {
                            "body": {
                              "answerType": "DATE",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "PI_original_inception",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "10.05",
                              "label": "When was Professional Indemnity cover first taken out? ",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PI_original_inception"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Length_trading",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "1.11",
                              "label": "For how long have you been running this nursery?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Length_trading"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Structural_underpinning",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56c",
                              "label": "Have the foundation and/or floor slabs required structural repair or underpinning at any time?\n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Structural_underpinning"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Construction_Type",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.11",
                              "label": "Please give details of the construction",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Construction_Type"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Estyn_score",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.05b",
                              "label": "UPDATE ESTYN  What was your most recent inspection grade",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Estyn_score"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Adequate _outbuilding_door_security",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.16",
                              "label": "UPDATE - Outbuilding door security",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Adequate _outbuilding_door_security"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "FRA",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.47",
                              "label": "Do you have a documented Fire Risk Assessment that is reviewed annually?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "FRA"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Adequate_asbestos_procedures",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.05",
                              "label": "Where asbestos is present are there controls and procedures in place in relation to the safe management of asbestos?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Adequate_asbestos_procedures"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "50000",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "LOR_limit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.02",
                              "label": "Loss of registration limit required",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "LOR_limit"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "NDNA_number",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "2.01a",
                              "label": "Please give your membership number",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "NDNA_number"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Premises_hired_out",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "4.07",
                              "label": "Are any of the premises or part of the premises hired out?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Premises_hired_out"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Registration_objections",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.03",
                              "label": "Have there been or do you expect any objections to any applications for registration  or any complaints lodged with the registration authority in respect  of your business?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Registration_objections"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Special_terms",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "3.03",
                              "label": "UPDATE - SPECIAL TERMS",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Special_terms"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Regulatory_body",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "7.05",
                              "label": "Which independent body inspects your nursery?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Regulatory_body"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Company_number",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "1.07",
                              "label": "Company registration number, if limited company",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Company_number"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "FS_Adequate_ratio",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.16",
                              "label": "Update Adequate Ratio",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "FS_Adequate_ratio"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Subsidence_labels",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.54",
                              "label": "Has the property or any part of it ever been affected by movement of any kind (for example subsidence, heave, landslip or settlement), been underpinned or provided with other means of structural support or situated on made-up ground, underground workings or within 200 metres of a cliff?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Subsidence_labels"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Nursery_excluded_trades",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.02",
                              "label": "Are you are a childrens home, school, creche, soft play centre or an organisation that specialises in children with behavioural problems, learning or physical disabilities?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Nursery_excluded_trades"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Intrued_alarm",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.57",
                              "label": "Are the premises protected by an intruder alarm?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Intrued_alarm"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_no_actual_claims",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.10",
                              "label": "Have there been any claims against any of the Directors (including past Directors) or Officers of the nursery or any of its subsidiaries in the last 5 years",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_no_actual_claims"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Made_up_ground",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56d",
                              "label": "Is the property constructed on made up ground or an infill site?\n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Made_up_ground"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_audit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.07",
                              "label": "Did the last audited accounts have an unqualified audit opinion ",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_audit"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Prior_subs_losses",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56f",
                              "label": "In respect of subsidence, heave or landslip has there been any loss or damage which has arisen during the last 5 years.(whether insured or not) \n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Prior_subs_losses"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Premises_business_use",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "4.06",
                              "label": "Are all the premises to be insured being used for the purpose of your business?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Premises_business_use"
                          },
                          {
                            "body": {
                              "answerType": "DATE",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Inception_date",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "1.13",
                              "label": "Date upon which the insurance is to commence",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Inception_date"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Accident_book",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.11",
                              "label": "UPDATEAccident book",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Accident_book"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "D&O_No_change_in_activities",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "11.08",
                              "label": "Have there been any changes in the activity over the last 12 months or are there any planned in next 12 months",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "D&O_No_change_in_activities"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Declined_subsidence_previously",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56g",
                              "label": "Has any insurer declined to issue or renew a policy or impose special terms in respect of subsidence, heave or landslip?\n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Declined_subsidence_previously"
                          },
                          {
                            "body": {
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Subsidence_score",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.55",
                              "label": "Subsidence Score - LOOKUP",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Subsidence_score"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Machinery_inspection",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.39",
                              "label": "Do you have an inspection contract in place with a bona fide inspection company for all relevant plant and machinery such as lifts with all required improvements completed?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Machinery_inspection"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Phone_number",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "1.03",
                              "label": "Phone number",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Phone_number"
                          },
                          {
                            "body": {
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Risk_address_2/3",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "4.03",
                              "label": "Full address of premises to be insured",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Risk_address_2/3"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Adequate_door_security",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.12",
                              "label": "UPDATE - Exit door security",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Adequate_door_security"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Trees_within_15m",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.56h",
                              "label": "Are there any of the following trees within 15m of the property (Poplar, Willow, Lime, Oak and Elm) or are there any other trees within 10m or less than half their own height away from the property?  \n",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Trees_within_15m"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Standard_construction",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.10",
                              "label": "Are the premises (excluding outbuildings) constructed of brick, stone or concrete and roofed with slates, tiles, asphalt, concrete or metal?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Standard_construction"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bouncy_castle_inspection",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.78",
                              "label": "UPDATE Bouncy castle inspection",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bouncy_castle_inspection"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_limit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.12",
                              "label": "What cyber limit do you require?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_limit"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bouncy_castle_training",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.75",
                              "label": "UPDATE Bouncy castle training",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bouncy_castle_training"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Risk_assessment",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.63",
                              "label": "UPDATE - Risk Assessment",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Risk_assessment"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "H&S_cascaded",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.09",
                              "label": "UPDATE H&S cascaded",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "H&S_cascaded"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "0.15",
                              "helpText": {
                                "type": "icon",
                                "value": "The standard policy includes index-linking of your buildings and contents sums insured.\nFor a small extra charge you may choose the alternative ‘Day One’ method of inflation protection which\nprovides you with a specified uplift of the sums insured.\nThis is especially relevant if your buildings may take an extended time to re-build because of planning or\nother issues"
                              },
                              "internalKey": "Day_1_uplift",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.18",
                              "label": "Day 1 uplift",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Day_1_uplift"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Number_of_events",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.40",
                              "label": "How many events take place per year?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Number_of_events"
                          },
                          {
                            "body": {
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "EIO_rating_area",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "5.20",
                              "label": "LOOKUP",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "EIO_rating_area"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bouncy_castle",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.73",
                              "label": "Do you give children access to a bouncy castle?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bouncy_castle"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Trampoline_daily_inspection",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.70",
                              "label": "UPDATE Trampoline daily inspection",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Trampoline_daily_inspection"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": true,
                              "helpText": {
                                "type": "icon",
                                "value": "Canopies and sunshades. These will be covered up to\n£20,000 in the aggregate in any one period of insurance\nas part of the limit for fixtures to the exterior of the\nbuildings or unfixed equipment in the grounds of the\npremises. If this is insufficient, please let us know\nwhat sum insured you require."
                              },
                              "internalKey": "Standard_canopies_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.26",
                              "label": "Is canopy and sunshade cover sufficient?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Standard_canopies_SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_claims_likely",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.04a",
                              "label": "Are you aware of any circumstances that may give rise to a claim under this Cyber Insurance",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_claims_likely"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Hazardous_trades",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.10",
                              "label": "Can you confirm that you do not provide any gymnastic activities, contact sports, horse riding",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Hazardous_trades"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Tenants_improvements_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.24",
                              "label": "UPDATE Tenants improvements What sum insured do you require?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Tenants_improvements_SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_email_usage_policy",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.06",
                              "label": "UPDATE Cyber Email Usage",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_email_usage_policy"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bouncy_castle_guidelines_followed",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.76",
                              "label": "UPDATE Bouncy castle guidelines followed",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bouncy_castle_guidelines_followed"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Listed_premises",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.19",
                              "label": "Are the premises listed?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Listed_premises"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Childrens_parties",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.35",
                              "label": "Do you hold children's parties outside of nursery hours?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Childrens_parties"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": "Contents belonging to the business or entrusted to you including fixtures and fittings, tenants\nimprovements, visual aids, office equipment, computers and musical instruments.\nThe personal belongings of the following is included within the contents cover and the sum insured should\nmake an allowance if appropriate.\nDirectors, trustees, officials, partners, governors and employees £2,500 per person\nVisitors £500 per person\nNursery children £100 per child"
                              },
                              "internalKey": "Other_contents_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.25",
                              "label": "UPDATE Other contents What sum insured do you require for all other contents?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Other_contents_SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Public_events",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.39",
                              "label": "Do you hold events open to the general public?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Public_events"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Prior_claims",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "19.01",
                              "label": "UPDATE - Prior Claims",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Prior_claims"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Holiday_scheme",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.03",
                              "label": "UPDATE - Holiday Scheme",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Holiday_scheme"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Swimming_pool",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.20",
                              "label": "Do you have a swimming pool or take children swimming?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Swimming_pool"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "OOSC/HS_trading_name",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "15.06",
                              "label": "Is the out-of-school club or holiday scheme run as part of the existing business under the same trading name?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "OOSC/HS_trading_name"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_money_procedures",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.07",
                              "label": "UPDATE Cyber Money Procedures",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_money_procedures"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Third_party_specialists",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.11",
                              "label": "Where hazardous activities are undertaken do you engage with a third party specialist who hold their own Public Liability cover to an appropriate level?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Third_party_specialists"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Party_number",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.37",
                              "label": "How many parties take place per year?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Party_number"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Canopies SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.27",
                              "label": "UPDATE Canopies What sum insured do you require?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Canopies SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_threatened_action",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.05",
                              "label": "Has there been any incident that may give rise to threatened actions or lawsuits in respect  of any of your organisation’s publications, statements or broadcasts",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_threatened_action"
                          },
                          {
                            "body": {
                              "answerType": "ARRAY",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Prior_claims_detail",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "19.02",
                              "label": "Please provide details",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Prior_claims_detail"
                          },
                          {
                            "body": {
                              "answerType": "LOOKUP",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Terrorism_area",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "16.02",
                              "label": "LOOKUP",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Terrorism_area"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bouncy_castle_ownership",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.74",
                              "label": "UPDATE - Bouncy Castle ownership",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bouncy_castle_ownership"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Fieworks_guidance_notes",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.47",
                              "label": "Will you follow Ecclesiastical guidance notes?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Fieworks_guidance_notes"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Babysitting",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.57",
                              "label": "Do you offer a babysitting service?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Babysitting"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Abuse_allegations",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.14a",
                              "label": "No allegations of abuse have ever been made against you or any of your employees and volunteers or service providers whilst working for you or acting  on your behalf",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Abuse_allegations"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": true,
                              "helpText": {
                                "type": "icon",
                                "value": "Groundsperson's machines and equipment are covered\nup to a limit of £5,000 in any one period of insurance.\nIf this is insufficient, please let us know what sum insured\nyou require"
                              },
                              "internalKey": "Standard_groundspersons_equipment_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.21",
                              "label": "Is groundsperpsons equipment cover sufficient?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Standard_groundspersons_equipment_SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Claims_likely",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "19.02a",
                              "label": "Are you aware of any circumstances which might give rise to a claim?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Claims_likely"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "FS_Fire_tool_supervision",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.17",
                              "label": "UPDATE Fire Tool supervision",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "FS_Fire_tool_supervision"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Terrorism_all_policies",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "16.05",
                              "label": "Please confirm that all property you insure, whether under this policy or any other policy, is or will be insured for terrorist damage.",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Terrorism_all_policies"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Fireworks_Bonfire",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.46",
                              "label": "Do you hold fireworks and/or bonfire displays?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Fireworks_Bonfire"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Fingershield",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.15",
                              "label": "Are all child accessible doors fitted with Fingershield or similar devices?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Fingershield"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "OOSC_clubs",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.02",
                              "label": "UPDATE - OOSC Clubs",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "OOSC_clubs"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_claims",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.04",
                              "label": "UPDATE Cyber Claims",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_claims"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Safeguarding_labels_1",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.14b",
                              "label": "UPDATE Safeguarding 1",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Safeguarding_labels_1"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Bouncy_castle_anchorage",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.77",
                              "label": "UPDATE Bouncy castle anchorage",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Bouncy_castle_anchorage"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "FS_qualified_staff",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.15",
                              "label": "UPDATE Qualified Staff",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "FS_qualified_staff"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "no",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Trampoline",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.67",
                              "label": "Do you give children access to a trampoline?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Trampoline"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_income",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.02",
                              "label": "Does your organisation's income exceed £25,000,000",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_income"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Trampoline_operators_trained",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.68",
                              "label": "UPDATE Trampoline Operators trained",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Trampoline_operators_trained"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Party_attendees",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.36",
                              "label": "Do you hold parties for children that do not attend the nursery?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Party_attendees"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_director_labels",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.03a",
                              "label": "UPDATE - Cyber Director labels",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_director_labels"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Other_material_facts",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "19.03",
                              "label": "Are there any material circumstances that have not covered by the labels asked?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Other_material_facts"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "FS_nursery_children_only",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.14",
                              "label": "UPDATE Nusery children only",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "FS_nursery_children_only"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_Anti_virus_software",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.10",
                              "label": "UPDATE Cyber Anti Virus",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_Anti_virus_software"
                          },
                          {
                            "body": {
                              "answerType": "DROPDOWN",
                              "defaultValue": "£5 million",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "PL_limit",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.01",
                              "label": "Please indicate the Limit of indemnity required for Public and products liability",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "PL_limit"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Max_children",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "14.04",
                              "label": "Maximum number of nursery children (excluding out of school clubs/holiday scheme children)",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Max_children"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Fireworks_attendees",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.48",
                              "label": "Are events for nursery children and their families only?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Fireworks_attendees"
                          },
                          {
                            "body": {
                              "answerType": "INTEGER",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Groundspersons_equipment_SI",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "5.22",
                              "label": "UPDATE - Groundspersons What sum insured do you require?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Groundspersons_equipment_SI"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_geographical_limits",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.03",
                              "label": "Does your organisation have any assets, employees or representation outside of England, Wales, Scotland, Northern Ireland, the Channel Islands and the Isle of Man requiring cover under this insurance",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_geographical_limits"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Terrorism_insured",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "16.01",
                              "label": "Do you require cover for terrorist damage including cover for Business interruption?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Terrorism_insured"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_crime",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.11",
                              "label": "Do you require cover for cyber crime?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_crime"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_firewalls",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.09",
                              "label": "UPDATE Cyber Firewalls",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_firewalls"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Party_nursery_organised",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.38",
                              "label": "Do you organise these parties?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Party_nursery_organised"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Trampoline_guidelines_followed",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.69",
                              "label": "UPDATE Trampoline guidelines followed",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Trampoline_guidelines_followed"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Cyber_data_backups",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "17.08",
                              "label": "UPDATE Cyber data backups",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Cyber_data_backups"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "OOSC/HS_activities",
                              "isRequired": false,
                              "isVisible": true,
                              "itemNumber": "15.09",
                              "label": "What activities are provided for the children at the out-of-school club or holiday scheme?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "OOSC/HS_activities"
                          },
                          {
                            "body": {
                              "answerType": "YES_NO",
                              "defaultValue": "",
                              "helpText": {
                                "type": "icon",
                                "value": ""
                              },
                              "internalKey": "Complex_medical_needs",
                              "isRequired": true,
                              "isVisible": true,
                              "itemNumber": "15.81",
                              "label": "Do you cater for any children with complex medical needs?",
                              "multiline": false,
                              "readOnly": false
                            },
                            "subject": "$QUESTION/DRAFT",
                            "topic": "Complex_medical_needs"
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "multi-upsert-question"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION/DRAFT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_question_list-topics_question",
      "operationId": "questionListAll",
      "name": "Question List All",
      "description": "QUESTION - list (all)",
      "schema": {
        "tags": [
          "question"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_question_list-topics_question/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/question/list-topics/question"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {}
                  },
                  "command": {
                    "type": "string",
                    "example": "list-question-topics"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$QUESTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "QUESTION_TOPICS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_upsert_node",
      "operationId": "nodeUpsertDraft",
      "name": "Node Upsert Draft",
      "description": "NODE - upsert (draft)",
      "schema": {
        "tags": [
          "render"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_upsert_node/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/upsert/node"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "internalKey": {
                        "type": "string",
                        "example": "RDR_TEST"
                      },
                      "label": {
                        "type": "string",
                        "example": "Test Updated"
                      },
                      "type": {
                        "type": "string",
                        "example": "MARKDOWN"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-and-publish-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "RDR_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_configrelease",
      "operationId": "multiUpsertRelease",
      "name": "Multi Upsert Release",
      "description": "multi-upsert-release",
      "schema": {
        "tags": [
          "release"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_configrelease/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/configrelease"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "secop-policy-check": {
                  "type": "string",
                  "example": "true"
                },
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "commands": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "body": {
                              "type": "object",
                              "properties": {
                                "answerConfig": {
                                  "type": "object",
                                  "properties": {
                                    "textFalse": {
                                      "type": "string",
                                      "example": "No"
                                    },
                                    "textTrue": {
                                      "type": "string",
                                      "example": "Yes"
                                    }
                                  }
                                },
                                "answerType": {
                                  "type": "string",
                                  "example": "BOOLEAN"
                                },
                                "defaultValue": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "helpText": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "icon"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "Whether you are a home owner or not is a decisioning criteria for some lenders"
                                    }
                                  }
                                },
                                "isRequired": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "isVisible": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Are you a home owner?"
                                },
                                "multiline": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "subject": {
                                  "type": "string",
                                  "example": "$QUESTION"
                                },
                                "topic": {
                                  "type": "string",
                                  "example": "HOME_OWNER_TEST_DEBUG"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "published-question"
                                }
                              }
                            },
                            "eventId": {
                              "type": "string",
                              "example": "-O3Yi1ls1wis2rzGaAdQ"
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "parentEventId": {
                                  "type": "string",
                                  "example": "-O3Yi1c0d3Ct0lmS6i3O"
                                }
                              }
                            },
                            "subject": {
                              "type": "string",
                              "example": "$CONFIG"
                            },
                            "tenant": {
                              "type": "string",
                              "example": "EVARI"
                            },
                            "topic": {
                              "type": "string",
                              "example": "HOME_OWNER_TEST_DEBUG"
                            },
                            "type": {
                              "type": "string",
                              "example": "published-question"
                            }
                          }
                        },
                        "example": [
                          {
                            "body": {
                              "answerConfig": {
                                "textFalse": "No",
                                "textTrue": "Yes"
                              },
                              "answerType": "BOOLEAN",
                              "defaultValue": false,
                              "helpText": {
                                "type": "icon",
                                "value": "Whether you are a home owner or not is a decisioning criteria for some lenders"
                              },
                              "isRequired": true,
                              "isVisible": true,
                              "label": "Are you a home owner?",
                              "multiline": false,
                              "subject": "$QUESTION",
                              "topic": "HOME_OWNER_TEST_DEBUG",
                              "type": "published-question"
                            },
                            "eventId": "-O3Yi1ls1wis2rzGaAdQ",
                            "metadata": {
                              "parentEventId": "-O3Yi1c0d3Ct0lmS6i3O"
                            },
                            "subject": "$CONFIG",
                            "tenant": "EVARI",
                            "topic": "HOME_OWNER_TEST_DEBUG",
                            "type": "published-question"
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "config-upsert-release"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RELEASE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "0.0.1"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_create",
      "operationId": "navigationEvent",
      "name": "Navigation Event",
      "description": "NAVIGATION event",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_create/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/create"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "formId": {
                        "type": "string",
                        "example": "ba067245-2517-4703-9e21-0cee8e83f3a2"
                      },
                      "pageId": {
                        "type": "string",
                        "example": "RDR_CANCELLATION_PAGE"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-event"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_get",
      "operationId": "navigationLatestForForm",
      "name": "Navigation Latest For Form",
      "description": "NAVIGATION latest for form",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-latest"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "ba067245-2517-4703-9e21-0cee8e83f3a2"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_get_events",
      "operationId": "navigationListEventsForForm",
      "name": "Navigation List Events For Form",
      "description": "NAVIGATION list events for form",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_get_events/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/get/events"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-events"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "ba067245-2517-4703-9e21-0cee8e83f3a2"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_get_composer",
      "operationId": "composerGet",
      "name": "Composer Get",
      "description": "COMPOSER - get",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_get_composer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/get/composer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-composer"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/COMPOSER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "COMPOSER_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_list_composer",
      "operationId": "composerList",
      "name": "Composer List",
      "description": "COMPOSER - list",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_list_composer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/list/composer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-composer"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/COMPOSER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_composer",
      "operationId": "composerPublish",
      "name": "Composer Publish",
      "description": "COMPOSER - publish",
      "schema": {
        "tags": [
          "render"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_composer/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/composer"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "compose": {
                        "type": "object",
                        "properties": {
                          "children": {
                            "type": "object",
                            "properties": {
                              "card": {
                                "type": "object",
                                "properties": {
                                  "children": {
                                    "type": "object",
                                    "properties": {
                                      "cardBody": {
                                        "type": "object",
                                        "properties": {
                                          "children": {
                                            "type": "object",
                                            "properties": {
                                              "paymentMethod": {
                                                "type": "object",
                                                "properties": {
                                                  "order": {
                                                    "type": "number",
                                                    "example": 1
                                                  },
                                                  "props": {
                                                    "type": "object",
                                                    "properties": {
                                                      "text": {
                                                        "type": "string",
                                                        "example": "Payment Method: {$.state.subscription.paymentMethod}"
                                                      }
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "paragraph"
                                                  }
                                                }
                                              },
                                              "totalPayable": {
                                                "type": "object",
                                                "properties": {
                                                  "order": {
                                                    "type": "number",
                                                    "example": 2
                                                  },
                                                  "props": {
                                                    "type": "object",
                                                    "properties": {
                                                      "text": {
                                                        "type": "string",
                                                        "example": "Total Payable: {$.state.subscription.totalPayable}"
                                                      }
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "paragraph"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "order": {
                                            "type": "number",
                                            "example": 2
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "cardBody"
                                          }
                                        }
                                      },
                                      "cardTitle": {
                                        "type": "object",
                                        "properties": {
                                          "order": {
                                            "type": "number",
                                            "example": 1
                                          },
                                          "props": {
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "example": "Subscription: {$.state.subscription.subscriptionConfigTopic}"
                                              }
                                            }
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "cardTitle"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "card"
                                  }
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "root"
                          }
                        }
                      },
                      "subscribe": {
                        "type": "object",
                        "properties": {
                          "command": {
                            "type": "string",
                            "example": "get"
                          },
                          "subject": {
                            "type": "string",
                            "example": "$PAYMENT/SUBSCRIPTION"
                          },
                          "topic": {
                            "type": "string",
                            "example": "$.state.subscriptionTopic"
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-composer"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/COMPOSER/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "SUBSCRIPTION_DETAILS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_unset",
      "operationId": "composerUnset",
      "name": "Composer Unset",
      "description": "COMPOSER - unset",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_unset/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/unset"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": ""
                        },
                        "example": [
                          ""
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "unset"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "CONTRACT/COVER/CARD"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_get_config",
      "operationId": "configGet",
      "name": "Config Get",
      "description": "CONFIG - get",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_get_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/get/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "NAV_FRM_ENVEST_CLAIM_TEST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_config_upsert",
      "operationId": "configUpsert",
      "name": "Config Upsert",
      "description": "CONFIG - upsert",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_config_upsert/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/config/upsert"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "origin": {
                        "type": "object",
                        "properties": {
                          "internalKey": {
                            "type": "string",
                            "example": "FRM_ENDORSEMENT"
                          },
                          "productId": {
                            "type": "string",
                            "example": "0f606767-2d54-453d-a0b3-31873b270577"
                          }
                        }
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "internalKey": {
                            "type": "string",
                            "example": "RDR_ENDORSEMENT"
                          },
                          "productId": {
                            "type": "string",
                            "example": "0f606767-2d54-453d-a0b3-31873b270577"
                          },
                          "type": {
                            "type": "string",
                            "example": "vvigation"
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "upsert-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "NAV_FRM_ENDORSEMENT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_covert_to-node",
      "operationId": "nodeConvertToNodeDraft",
      "name": "Node Convert To Node Draft",
      "description": "NODE - convert to node (draft)",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_covert_to-node/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/covert/to-node"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "archive": {
                        "type": "boolean",
                        "example": false
                      },
                      "blockOnDecline": {
                        "type": "boolean",
                        "example": true
                      },
                      "blockOnPriceUpdate": {
                        "type": "boolean",
                        "example": true
                      },
                      "blockOnQuoteUpdate": {
                        "type": "boolean",
                        "example": false
                      },
                      "blockOnReferral": {
                        "type": "boolean",
                        "example": false
                      },
                      "id": {
                        "type": "string",
                        "example": "NAV_EVARI_TRADEPROF_QUOTE_PAGE_1"
                      },
                      "pages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "archived": {
                              "type": "boolean",
                              "example": false
                            },
                            "containers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "accordion": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "alignment": {
                                    "type": "string",
                                    "example": "left"
                                  },
                                  "archived": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "autoExpand": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "css": {
                                    "type": "string",
                                    "example": "color: #fff"
                                  },
                                  "elements": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "alignment": {
                                          "type": "string",
                                          "example": "left"
                                        },
                                        "apiRoot": {
                                          "type": "string",
                                          "example": "$apiRoot"
                                        },
                                        "archived": {
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "authToken": {
                                          "type": "string",
                                          "example": "$authToken"
                                        },
                                        "details": {
                                          "type": "object",
                                          "properties": {
                                            "body": {
                                              "type": "string",
                                              "example": "### Workers Compensation"
                                            },
                                            "test": {
                                              "type": "string",
                                              "example": "test1"
                                            }
                                          }
                                        },
                                        "id": {
                                          "type": "string",
                                          "example": "NAV_WORKERS_COMPENSATION"
                                        },
                                        "internalKey": {
                                          "type": "string",
                                          "example": "QB_WORKERS_COMP_BUSINESS_NAME"
                                        },
                                        "mfe": {
                                          "type": "string",
                                          "example": "QuestionMfe"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "markdown"
                                        },
                                        "websocketUrl": {
                                          "type": "string",
                                          "example": "$websocketUrl"
                                        }
                                      }
                                    },
                                    "example": [
                                      {
                                        "alignment": "left",
                                        "archived": false,
                                        "details": {
                                          "body": "### Workers Compensation"
                                        },
                                        "id": "NAV_WORKERS_COMPENSATION",
                                        "type": "markdown"
                                      },
                                      {
                                        "alignment": "left",
                                        "archived": false,
                                        "details": {
                                          "body": "### Tell us about your business"
                                        },
                                        "id": "NAV_YOUR_BUSINESS",
                                        "type": "markdown"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "authToken": "$authToken",
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_BUSINESS_NAME",
                                        "internalKey": "QB_WORKERS_COMP_BUSINESS_NAME",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe",
                                        "websocketUrl": "$websocketUrl"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "authToken": "$authToken",
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_BUSINESS_ADDRESS",
                                        "internalKey": "QB_WORKERS_COMP_BUSINESS_ADDRESS",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe",
                                        "websocketUrl": "$websocketUrl"
                                      },
                                      {
                                        "alignment": "left",
                                        "archived": false,
                                        "authToken": "$authToken",
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_BUSINESS_STRUCTURE",
                                        "internalKey": "QB_WORKERS_COMP_BUSINESS_STRUCTURE",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe",
                                        "websocketUrl": "$websocketUrl"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "authToken": "$authToken",
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_BUSINESS_ESTABLISHMENT",
                                        "internalKey": "QB_WORKERS_COMP_BUSINESS_ESTABLISHMENT",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe",
                                        "websocketUrl": "$websocketUrl"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "authToken": "$authToken",
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_ESTIMATED_WAGES",
                                        "internalKey": "QB_WORKERS_COMP_ESTIMATED_WAGES",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe",
                                        "websocketUrl": "$websocketUrl"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_ESTIMATED_EMPLOYEES",
                                        "internalKey": "QB_WORKERS_COMP_ESTIMATED_EMPLOYEES",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "authToken": "$authToken",
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_ACTUAL_WAGES_1",
                                        "internalKey": "QB_WORKERS_COMP_ACTUAL_WAGES_1",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe"
                                      },
                                      {
                                        "alignment": "left",
                                        "apiRoot": "$apiRoot",
                                        "archived": false,
                                        "details": {
                                          "test": "test1"
                                        },
                                        "id": "NAV_WORKERS_COMP_ACTUAL_EMPLOYEES",
                                        "internalKey": "QB_WORKERS_COMP_ACTUAL_EMPLOYEES",
                                        "mfe": "QuestionMfe",
                                        "type": "mfe",
                                        "websocketUrl": "$websocketUrl"
                                      }
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "NAV_COMPENSATION_CONTAINER_1"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "accordion": true,
                                  "alignment": "left",
                                  "archived": false,
                                  "autoExpand": true,
                                  "css": "color: #fff",
                                  "elements": [
                                    {
                                      "alignment": "left",
                                      "archived": false,
                                      "details": {
                                        "body": "### Workers Compensation"
                                      },
                                      "id": "NAV_WORKERS_COMPENSATION",
                                      "type": "markdown"
                                    },
                                    {
                                      "alignment": "left",
                                      "archived": false,
                                      "details": {
                                        "body": "### Tell us about your business"
                                      },
                                      "id": "NAV_YOUR_BUSINESS",
                                      "type": "markdown"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_BUSINESS_NAME",
                                      "internalKey": "QB_WORKERS_COMP_BUSINESS_NAME",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_BUSINESS_ADDRESS",
                                      "internalKey": "QB_WORKERS_COMP_BUSINESS_ADDRESS",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_BUSINESS_STRUCTURE",
                                      "internalKey": "QB_WORKERS_COMP_BUSINESS_STRUCTURE",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_BUSINESS_ESTABLISHMENT",
                                      "internalKey": "QB_WORKERS_COMP_BUSINESS_ESTABLISHMENT",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_ESTIMATED_WAGES",
                                      "internalKey": "QB_WORKERS_COMP_ESTIMATED_WAGES",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_ESTIMATED_EMPLOYEES",
                                      "internalKey": "QB_WORKERS_COMP_ESTIMATED_EMPLOYEES",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_ACTUAL_WAGES_1",
                                      "internalKey": "QB_WORKERS_COMP_ACTUAL_WAGES_1",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_ACTUAL_EMPLOYEES",
                                      "internalKey": "QB_WORKERS_COMP_ACTUAL_EMPLOYEES",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    }
                                  ],
                                  "id": "NAV_COMPENSATION_CONTAINER_1"
                                },
                                {
                                  "accordion": true,
                                  "alignment": "left",
                                  "archived": false,
                                  "autoExpand": true,
                                  "css": "color: #fff",
                                  "elements": [
                                    {
                                      "alignment": "left",
                                      "archived": false,
                                      "details": {
                                        "body": "### Tell us your claims experience"
                                      },
                                      "id": "NAV_CLAIMS_EXPERIENCE",
                                      "type": "markdown"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY",
                                      "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    }
                                  ],
                                  "id": "NAV_COMPENSATION_CONTAINER_2"
                                },
                                {
                                  "accordion": true,
                                  "alignment": "left",
                                  "archived": false,
                                  "autoExpand": true,
                                  "css": "color: #fff",
                                  "elements": [
                                    {
                                      "alignment": "left",
                                      "archived": false,
                                      "details": {
                                        "body": "### In the last five years have you:"
                                      },
                                      "id": "NAV_LIABILITY_EXPERIENCE",
                                      "type": "markdown"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT",
                                      "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY_INSURANCE_POLICY_STATEMENT",
                                      "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY_INSURANCE_POLICY_STATEMENT",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT_1",
                                      "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT_1",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    }
                                  ],
                                  "id": "NAV_COMPENSATION_CONTAINER_3"
                                },
                                {
                                  "accordion": true,
                                  "alignment": "left",
                                  "archived": false,
                                  "autoExpand": true,
                                  "css": "color: #fff",
                                  "elements": [
                                    {
                                      "alignment": "left",
                                      "archived": false,
                                      "details": {
                                        "body": "### In the last five years have you or your business partner(s) or business director(s):"
                                      },
                                      "id": "NAV_BUSINESS_PARTNER_DIRECTOR",
                                      "type": "markdown"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CUST_HISTORY",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CUST_HISTORY_INSOLVENCY",
                                      "internalKey": "QB_WORKERS_COMP_CUST_HISTORY_INSOLVENCY",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    },
                                    {
                                      "alignment": "left",
                                      "apiRoot": "$apiRoot",
                                      "archived": false,
                                      "authToken": "$authToken",
                                      "details": {
                                        "test": "test1"
                                      },
                                      "id": "NAV_WORKERS_COMP_CUST_HISTORY_TRAFFIC",
                                      "internalKey": "QB_WORKERS_COMP_CUST_HISTORY_TRAFFIC",
                                      "mfe": "QuestionMfe",
                                      "type": "mfe",
                                      "websocketUrl": "$websocketUrl"
                                    }
                                  ],
                                  "id": "NAV_COMPENSATION_CONTAINER_4"
                                }
                              ]
                            },
                            "css": {
                              "type": "string",
                              "example": "color: #fff"
                            },
                            "enabledMessages": {
                              "type": "array",
                              "items": {},
                              "example": []
                            },
                            "id": {
                              "type": "string",
                              "example": "NAV_COMPENSATION_PAGE_1"
                            }
                          }
                        },
                        "example": [
                          {
                            "archived": false,
                            "containers": [
                              {
                                "accordion": true,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": true,
                                "css": "color: #fff",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### Workers Compensation"
                                    },
                                    "id": "NAV_WORKERS_COMPENSATION",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### Tell us about your business"
                                    },
                                    "id": "NAV_YOUR_BUSINESS",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_BUSINESS_NAME",
                                    "internalKey": "QB_WORKERS_COMP_BUSINESS_NAME",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_BUSINESS_ADDRESS",
                                    "internalKey": "QB_WORKERS_COMP_BUSINESS_ADDRESS",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_BUSINESS_STRUCTURE",
                                    "internalKey": "QB_WORKERS_COMP_BUSINESS_STRUCTURE",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_BUSINESS_ESTABLISHMENT",
                                    "internalKey": "QB_WORKERS_COMP_BUSINESS_ESTABLISHMENT",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_ESTIMATED_WAGES",
                                    "internalKey": "QB_WORKERS_COMP_ESTIMATED_WAGES",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_ESTIMATED_EMPLOYEES",
                                    "internalKey": "QB_WORKERS_COMP_ESTIMATED_EMPLOYEES",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_ACTUAL_WAGES_1",
                                    "internalKey": "QB_WORKERS_COMP_ACTUAL_WAGES_1",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_ACTUAL_EMPLOYEES",
                                    "internalKey": "QB_WORKERS_COMP_ACTUAL_EMPLOYEES",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_COMPENSATION_CONTAINER_1"
                              },
                              {
                                "accordion": true,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": true,
                                "css": "color: #fff",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### Tell us your claims experience"
                                    },
                                    "id": "NAV_CLAIMS_EXPERIENCE",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY",
                                    "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_COMPENSATION_CONTAINER_2"
                              },
                              {
                                "accordion": true,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": true,
                                "css": "color: #fff",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### In the last five years have you:"
                                    },
                                    "id": "NAV_LIABILITY_EXPERIENCE",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT",
                                    "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY_INSURANCE_POLICY_STATEMENT",
                                    "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY_INSURANCE_POLICY_STATEMENT",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT_1",
                                    "internalKey": "QB_WORKERS_COMP_CLAIMS_HISTORY_LOSS_DAMAGE_STATEMENT_1",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_COMPENSATION_CONTAINER_3"
                              },
                              {
                                "accordion": true,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": true,
                                "css": "color: #fff",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### In the last five years have you or your business partner(s) or business director(s):"
                                    },
                                    "id": "NAV_BUSINESS_PARTNER_DIRECTOR",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CUST_HISTORY",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CUST_HISTORY_INSOLVENCY",
                                    "internalKey": "QB_WORKERS_COMP_CUST_HISTORY_INSOLVENCY",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CUST_HISTORY_TRAFFIC",
                                    "internalKey": "QB_WORKERS_COMP_CUST_HISTORY_TRAFFIC",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_COMPENSATION_CONTAINER_4"
                              }
                            ],
                            "css": "color: #fff",
                            "enabledMessages": [],
                            "id": "NAV_COMPENSATION_PAGE_1"
                          },
                          {
                            "archived": false,
                            "containers": [
                              {
                                "accordion": true,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": true,
                                "css": "color: #fff",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### Cover for your business"
                                    },
                                    "id": "NAV_COVER_FOR_YOUR_BUSINESS_3",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### Hey  Brack , Mitti is excited to offer you. **Workers Compensation!**"
                                    },
                                    "id": "NAV_COVER_FOR_YOUR_BUSINESS_2",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### We can offer the convience of purchasing online and can be flexible to your needs/requirements. We understand that buisness' can change and are there to support any cover changes as your product/buisness grows."
                                    },
                                    "id": "NAV_COVER_FOR_YOUR_BUSINESS_1",
                                    "type": "markdown"
                                  }
                                ],
                                "id": "NAV_COVER_CONTAINER_1"
                              },
                              {
                                "accordion": true,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": true,
                                "css": "color: #fff",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "### Your Quote $AMOUNT$"
                                    },
                                    "id": "NAV_YOUR_QUOTE",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_COVER_1",
                                    "internalKey": "QB_WORKERS_COMP_COVER_1",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_EMPLOYEE_BENEFITS_2",
                                    "internalKey": "QB_EMPLOYEE_BENEFITS",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_EMPLOYERS_LIABILITY_2",
                                    "internalKey": "QB_EMPLOYERS_LIABILITY",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe"
                                  }
                                ],
                                "id": "NAV_COVER_CONTAINER_2"
                              }
                            ],
                            "css": "color: #fff",
                            "enabledMessages": [],
                            "id": "NAV_COVER_PAGE_1"
                          },
                          {
                            "archived": false,
                            "containers": [
                              {
                                "accordion": false,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": null,
                                "css": "color: #fff; h3: { color: rgb(2, 149, 255) }",
                                "elements": [
                                  {
                                    "alignment": "center",
                                    "archived": false,
                                    "details": {
                                      "body": "### Enter Insured Customer Details"
                                    },
                                    "id": "NAV_WORKERS_COMP_ENTER_INSURED_CUSTOMER_DETAILS_HEADING",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_EMAIL_ADDRESS",
                                    "internalKey": "QB_EMAIL_ADDRESS_1",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_EMAIL_ADDRESS_CHECKBOX",
                                    "internalKey": "QB_I_WISH_TO_RECEIVE_ALL_COMMUNICATIONS_ON_BEHALF_OF_THE_INSURED",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_FIRST_NAME",
                                    "internalKey": "QB_FIRST_NAME",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_LAST_NAME",
                                    "internalKey": "QB_LAST_NAME",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_WORKERS_COMP_INSURED_CUSTOMER_DETAILS"
                              },
                              {
                                "accordion": false,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": null,
                                "css": "color: #fff; h3: { color: rgb(2, 149, 255) }",
                                "elements": [
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_POLICY_TIMEZONE",
                                    "internalKey": "QB_SELECT_THE_POLICY_TIMEZONE",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe"
                                  },
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_POLICY_START_DATE",
                                    "internalKey": "QB_POLICY_START_DATE_1",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_POLICY_END_DATE",
                                    "internalKey": "QB_POLICY_END_DATE_1",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_WORKERS_COMP_POLICY_DETAILS"
                              },
                              {
                                "accordion": false,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": null,
                                "css": "color: #fff; h3: { color: rgb(2, 149, 255) }",
                                "elements": [
                                  {
                                    "alignment": "center",
                                    "archived": false,
                                    "details": {
                                      "body": "### Please confirm the following statements"
                                    },
                                    "id": "NAV_WORKERS_COMP_PLEASE_CONFIRM_FOLLOWING_STATEMENTS",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "archived": false,
                                    "details": {
                                      "body": "All of the information provided is accurate and I understand that failure to disclose requested information may invalidate the policy"
                                    },
                                    "id": "NAV_WORKERS_COMP_ALL_INFORMATION_CORRECT_STATEMENT",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_CONFIRM_STATEMENTS_CHECKBOX",
                                    "internalKey": "QB_I_CONFIRM_THESE_STATEMENTS_ARE_CORRECT_AND_I_HAVE_READ_THE_TERMS_OF_THE_POLICY",
                                    "mfe": "QuestionMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_WORKERS_COMP_STATEMENTS"
                              }
                            ],
                            "css": "color: #fff",
                            "enabledMessages": [],
                            "id": "NAV_COVER_PAGE_3"
                          },
                          {
                            "archived": false,
                            "containers": [
                              {
                                "accordion": false,
                                "alignment": "left",
                                "archived": false,
                                "autoExpand": null,
                                "css": "color: #fff; h3: { color: rgb(2, 149, 255) }",
                                "elements": [
                                  {
                                    "alignment": "center",
                                    "archived": false,
                                    "details": {
                                      "body": "### Payments"
                                    },
                                    "id": "NAV_WORKERS_COMP_PAYMENTS",
                                    "type": "markdown"
                                  },
                                  {
                                    "alignment": "left",
                                    "apiRoot": "$apiRoot",
                                    "archived": false,
                                    "authToken": "$authToken",
                                    "details": {
                                      "test": "test1"
                                    },
                                    "id": "NAV_WORKERS_COMP_PAYMENTS_MFE",
                                    "internalKey": "PAY_PAYMENTS",
                                    "mfe": "PaymentsMfe",
                                    "type": "mfe",
                                    "websocketUrl": "$websocketUrl"
                                  }
                                ],
                                "id": "NAV_WORKERS_COMP_PAYMENTS_CONTAINER"
                              }
                            ],
                            "css": "color: #fff",
                            "enabledMessages": [],
                            "id": "NAV_WORKERS_COMP_PAGE_4"
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "convert-to-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_get_node",
      "operationId": "nodeGetDraft",
      "name": "Node Get Draft",
      "description": "NODE - get (draft)",
      "schema": {
        "tags": [
          "render"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_get_node/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/get/node"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "RDR_ARIADNE_PAGE_NUMBERGEN_CONTAINER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_list_node",
      "operationId": "nodeListByRootDraft",
      "name": "Node List By Root Draft",
      "description": "NODE - list by root (draft)",
      "schema": {
        "tags": [
          "render"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_list_node/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/list/node"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "NAVIGATION"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Cloudstream-API/post_render_list_node/output-200.schema.json",
            "type": "object",
            "properties": {
              "body": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "example": false
                    },
                    "autoExpand": {
                      "type": "boolean",
                      "example": false
                    },
                    "childNode": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "order": {
                            "type": "number",
                            "example": 0
                          },
                          "topic": {
                            "type": "string",
                            "example": "RDR_cancellation_reason"
                          }
                        }
                      },
                      "example": [
                        {
                          "order": 0,
                          "topic": "RDR_cancellation_reason"
                        },
                        {
                          "order": 1,
                          "topic": "RDR_cancellation_date"
                        }
                      ]
                    },
                    "classes": {
                      "type": "object",
                      "properties": {
                        "greyCard": {
                          "type": "object",
                          "properties": {
                            "background": {
                              "type": "string",
                              "example": ""
                            },
                            "border": {
                              "type": "string",
                              "example": "2px solid #293745"
                            },
                            "borderRadius": {
                              "type": "string",
                              "example": "15px"
                            }
                          }
                        },
                        "purpleCard": {
                          "type": "object",
                          "properties": {
                            "background": {
                              "type": "string",
                              "example": ""
                            },
                            "border": {
                              "type": "string",
                              "example": "2px solid #6559FF"
                            },
                            "borderRadius": {
                              "type": "string",
                              "example": "15px"
                            }
                          }
                        },
                        "transparentCard": {
                          "type": "object",
                          "properties": {
                            "background": {
                              "type": "string",
                              "example": ""
                            },
                            "border": {
                              "type": "string",
                              "example": "2px solid #00D1FF"
                            },
                            "borderRadius": {
                              "type": "string",
                              "example": "15px"
                            }
                          }
                        }
                      }
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "author": {
                          "type": "string",
                          "example": "admin@evari.tech"
                        },
                        "description": {
                          "type": "string",
                          "example": ""
                        },
                        "summary": {
                          "type": "string",
                          "example": "Add spinner"
                        }
                      }
                    },
                    "css": {
                      "type": "object",
                      "properties": {
                        "backgroundColor": {
                          "type": "string",
                          "example": ""
                        },
                        "backgroundImage": {
                          "type": "string",
                          "example": ""
                        },
                        "border": {
                          "type": "string",
                          "example": "1px solid #1A374D"
                        },
                        "color": {
                          "type": "string",
                          "example": "#1A374D"
                        },
                        "fontSize": {
                          "type": "string",
                          "example": "20px"
                        },
                        "height": {
                          "type": "string",
                          "example": "auto"
                        },
                        "margin": {
                          "type": "string",
                          "example": "-1rem auto"
                        },
                        "textAlign": {
                          "type": "string",
                          "example": "center"
                        },
                        "width": {
                          "type": "string",
                          "example": "auto"
                        }
                      }
                    },
                    "href": {
                      "type": "string",
                      "example": "https://admin.mitti.com.au/contract/view?pid=0a150d2b-0e5a-4e1b-8906-57b048374513&subject={$.form.policyContract.subject}&topic={$.form.policyContract.topic}"
                    },
                    "internalKey": {
                      "type": "string",
                      "example": "RDR_cancellation_reason"
                    },
                    "isVisible": {
                      "type": "boolean",
                      "example": true
                    },
                    "label": {
                      "type": "string",
                      "example": ""
                    },
                    "markdown": {
                      "type": "string",
                      "example": "The refund amount displayed below has been pro rated based on the cancellation date you have selected. By selecting **SUBMIT** you are acknowledging that if you are eligible for a refund it will be issued to the payment details on file for this policy"
                    },
                    "mfeAttribute": {
                      "type": "object",
                      "properties": {
                        "topic": {
                          "type": "string",
                          "example": "cancellation_reason"
                        }
                      }
                    },
                    "mfeData": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "formTopic"
                      },
                      "example": [
                        "formTopic",
                        "formSubject"
                      ]
                    },
                    "mfeElement": {
                      "type": "string",
                      "example": "evari-question-single"
                    },
                    "navigationRoot": {
                      "type": "string",
                      "example": ""
                    },
                    "navigationStyle": {
                      "type": "string",
                      "example": "NEXTBACK"
                    },
                    "prenavigate": {
                      "type": "string",
                      "example": "RENDER_VALIDATE_CURRENT_PAGE"
                    },
                    "property": {
                      "type": "object",
                      "properties": {
                        "fixedContainer": {
                          "type": "number",
                          "example": 70
                        },
                        "showBg": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "showProgressBar": {
                      "type": "boolean",
                      "example": true
                    },
                    "subscriptionConfig": {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "example": "get-form"
                        },
                        "subject": {
                          "type": "string",
                          "example": "{$.mfeData.formSubject}"
                        },
                        "topic": {
                          "type": "string",
                          "example": "{$.mfeData.formTopic}"
                        }
                      }
                    },
                    "subscriptionDataVariable": {
                      "type": "string",
                      "example": "form"
                    },
                    "text": {
                      "type": "string",
                      "example": "Back To Dashboard"
                    },
                    "type": {
                      "type": "string",
                      "example": "MFE"
                    },
                    "useClass": {
                      "type": "string",
                      "example": "transparentCard"
                    }
                  }
                },
                "example": [
                  {
                    "internalKey": "RDR_cancellation_reason",
                    "isVisible": true,
                    "label": "",
                    "mfeAttribute": {
                      "topic": "cancellation_reason"
                    },
                    "mfeElement": "evari-question-single",
                    "type": "MFE"
                  },
                  {
                    "internalKey": "RDR_cancellation_date",
                    "isVisible": true,
                    "label": "",
                    "mfeAttribute": {
                      "topic": "cancellation_date"
                    },
                    "mfeElement": "evari-question-single",
                    "type": "MFE"
                  },
                  {
                    "autoExpand": false,
                    "childNode": [
                      {
                        "order": 0,
                        "topic": "RDR_cancellation_reason"
                      },
                      {
                        "order": 1,
                        "topic": "RDR_cancellation_date"
                      }
                    ],
                    "css": {},
                    "internalKey": "RDR_CANCELLATION_PAGE1_CONTAINER",
                    "label": "To proceed with cancellation, please answer the following questions:",
                    "type": "CONTAINER",
                    "useClass": "transparentCard"
                  },
                  {
                    "childNode": [
                      {
                        "order": 0,
                        "topic": "RDR_CANCELLATION_PAGE1_CONTAINER"
                      }
                    ],
                    "internalKey": "RDR_CANCELLATION_PAGE1",
                    "label": "",
                    "type": "PAGE"
                  },
                  {
                    "css": {
                      "margin": "-1rem auto"
                    },
                    "internalKey": "RDR_CANCELLATION_DISCLAIMER",
                    "label": "",
                    "markdown": "The refund amount displayed below has been pro rated based on the cancellation date you have selected. By selecting **SUBMIT** you are acknowledging that if you are eligible for a refund it will be issued to the payment details on file for this policy",
                    "type": "MARKDOWN"
                  },
                  {
                    "internalKey": "RDR_CANCELLATION_POLICY_DETAILS",
                    "label": "",
                    "markdown": "Cancellation Details \n\n ***",
                    "type": "MARKDOWN"
                  },
                  {
                    "internalKey": "RDR_policy_number",
                    "label": "",
                    "mfeAttribute": {
                      "topic": "policy_number"
                    },
                    "mfeElement": "evari-question-single",
                    "type": "MFE"
                  },
                  {
                    "internalKey": "RDR_CANCELLATION_SELECTED_DATE",
                    "label": "",
                    "mfeAttribute": {
                      "topic": "CANCELLATION_SELECTED_DATE"
                    },
                    "mfeElement": "evari-question-single",
                    "type": "MFE"
                  },
                  {
                    "internalKey": "RDR_CANCELLATION_SELECTED_REASON",
                    "label": "",
                    "mfeAttribute": {
                      "topic": "CANCELLATION_SELECTED_REASON"
                    },
                    "mfeElement": "evari-question-single",
                    "type": "MFE"
                  },
                  {
                    "css": {
                      "fontSize": "20px",
                      "margin": "-2rem auto -1rem"
                    },
                    "internalKey": "RDR_CANCELLATION_PREMIUM_REFUND",
                    "label": "",
                    "markdown": "Refund Due: ",
                    "type": "MARKDOWN"
                  },
                  {
                    "internalKey": "RDR_CANCELLATION_PRORATA_COLLATION_RUNNING",
                    "isVisible": true,
                    "label": "",
                    "mfeAttribute": {
                      "topic": "CANCELLATION_PRORATA_COLLATION_RUNNING"
                    },
                    "mfeElement": "evari-question-single",
                    "type": "MFE"
                  },
                  {
                    "autoExpand": false,
                    "childNode": [
                      {
                        "order": 0,
                        "topic": "RDR_CANCELLATION_DISCLAIMER"
                      },
                      {
                        "order": 1,
                        "topic": "RDR_CANCELLATION_POLICY_DETAILS"
                      },
                      {
                        "order": 2,
                        "topic": "RDR_policy_number"
                      },
                      {
                        "order": 3,
                        "topic": "RDR_CANCELLATION_SELECTED_DATE"
                      },
                      {
                        "order": 4,
                        "topic": "RDR_CANCELLATION_SELECTED_REASON"
                      },
                      {
                        "order": 5,
                        "topic": "RDR_CANCELLATION_PREMIUM_REFUND"
                      },
                      {
                        "order": 6,
                        "topic": "RDR_CANCELLATION_PRORATA_COLLATION_RUNNING"
                      }
                    ],
                    "commit": {
                      "author": "admin@evari.tech",
                      "description": "",
                      "summary": "Add spinner"
                    },
                    "css": {},
                    "internalKey": "RDR_CANCELLATION_PAGE2_CONTAINER",
                    "label": "Review the following information:",
                    "type": "CARD",
                    "useClass": "transparentCard"
                  },
                  {
                    "childNode": [
                      {
                        "order": 0,
                        "topic": "RDR_CANCELLATION_PAGE2_CONTAINER"
                      }
                    ],
                    "internalKey": "RDR_CANCELLATION_PAGE2",
                    "label": "",
                    "type": "PAGE"
                  },
                  {
                    "archived": false,
                    "css": {
                      "backgroundColor": "",
                      "height": "auto",
                      "margin": "auto",
                      "textAlign": "center",
                      "width": "auto"
                    },
                    "internalKey": "RDR_POLICY_CANCELLED",
                    "markdown": "This policy will be cancelled as of",
                    "type": "MARKDOWN"
                  },
                  {
                    "autoExpand": false,
                    "childNode": [
                      {
                        "order": 0,
                        "topic": "RDR_POLICY_CANCELLED"
                      }
                    ],
                    "commit": {
                      "author": "kassandra.stafford@evari.tech",
                      "description": "",
                      "summary": "new child"
                    },
                    "css": {},
                    "internalKey": "RDR_CANCELLATION_PAGE3_CONTAINER",
                    "label": "",
                    "type": "CARD",
                    "useClass": "transparentCard"
                  },
                  {
                    "childNode": [
                      {
                        "order": 0,
                        "topic": "RDR_CANCELLATION_PAGE3_CONTAINER"
                      }
                    ],
                    "internalKey": "RDR_CANCELLATION_PAGE3",
                    "label": "",
                    "type": "PAGE"
                  },
                  {
                    "childNode": [
                      {
                        "buttonNextLabel": "CONTINUE",
                        "order": 0,
                        "title": "Cancel Request",
                        "topic": "RDR_CANCELLATION_PAGE1"
                      },
                      {
                        "buttonNextLabel": "SUBMIT",
                        "buttonPreviousLabel": "PREVIOUS PAGE",
                        "navigateConfirm": {
                          "active": true,
                          "config": {
                            "childNode": [
                              {
                                "order": 0,
                                "topic": "RDR_CANCELLATION_CONFIRMATION_TEXT"
                              }
                            ],
                            "config": {
                              "animation": "revealing",
                              "backdropBlur": 2,
                              "closeOnClickAway": false,
                              "fitFullScreenOnMobile": false,
                              "header": {
                                "closeIcon": false,
                                "icon": {
                                  "fill": "#ffffff",
                                  "name": "TICK_CIRCLE",
                                  "size": 1.5
                                },
                                "styles": {
                                  "backgroundColor": "#293745",
                                  "closeIconColor": "#ffffff",
                                  "textColor": "#ffffff"
                                }
                              }
                            },
                            "design": "NONE",
                            "severity": "none",
                            "showIcon": false,
                            "text": "",
                            "textConfirm": "Confirm",
                            "title": "Confirm Cancellation"
                          }
                        },
                        "order": 1,
                        "title": "Cancellation Summary",
                        "topic": "RDR_CANCELLATION_PAGE2"
                      },
                      {
                        "buttonNextHref": "https://admin.mitti.com.au/contract/view?pid=0a150d2b-0e5a-4e1b-8906-57b048374513&subject={$.form.policyContract.subject}&topic={$.form.policyContract.topic}",
                        "buttonNextLabel": "CLOSE",
                        "buttonPreviousLabel": "PREVIOUS PAGE",
                        "order": 2,
                        "title": "Complete",
                        "topic": "RDR_CANCELLATION_PAGE3"
                      }
                    ],
                    "commit": {
                      "author": "kassandra.stafford@evari.tech",
                      "description": "",
                      "summary": "Update page names"
                    },
                    "internalKey": "RDR_BPKPLUS_CANCELLATION_NAVIGATION",
                    "label": "",
                    "mfeData": [
                      "formTopic",
                      "formSubject"
                    ],
                    "navigationStyle": "NEXTBACK",
                    "prenavigate": "RENDER_VALIDATE_CURRENT_PAGE",
                    "showProgressBar": true,
                    "subscriptionConfig": {
                      "command": "get-form",
                      "subject": "{$.mfeData.formSubject}",
                      "topic": "{$.mfeData.formTopic}"
                    },
                    "subscriptionDataVariable": "form",
                    "type": "NAVIGATION"
                  },
                  {
                    "css": {
                      "backgroundColor": "#F7F7F7",
                      "border": "1px solid #1A374D",
                      "color": "#1A374D"
                    },
                    "href": "https://admin.mitti.com.au/contract/view?pid=0a150d2b-0e5a-4e1b-8906-57b048374513&subject={$.form.policyContract.subject}&topic={$.form.policyContract.topic}",
                    "internalKey": "RDR_RETURN_BUTTON",
                    "isVisible": true,
                    "label": "",
                    "mfeData": [
                      "formTopic",
                      "formSubject"
                    ],
                    "navigationRoot": "",
                    "subscriptionConfig": {
                      "command": "get-form",
                      "subject": "{$.mfeData.formSubject}",
                      "topic": "{$.mfeData.formTopic}"
                    },
                    "subscriptionDataVariable": "form",
                    "text": "Back To Dashboard",
                    "type": "NAVIGATION_BUTTON"
                  },
                  {
                    "childNode": [
                      {
                        "order": 1,
                        "topic": "RDR_BPKPLUS_CANCELLATION_NAVIGATION"
                      },
                      {
                        "order": 2,
                        "topic": "RDR_RETURN_BUTTON"
                      }
                    ],
                    "classes": {
                      "greyCard": {
                        "background": "",
                        "border": "2px solid #293745",
                        "borderRadius": "15px"
                      },
                      "purpleCard": {
                        "background": "",
                        "border": "2px solid #6559FF",
                        "borderRadius": "15px"
                      },
                      "transparentCard": {
                        "background": "",
                        "border": "2px solid #00D1FF",
                        "borderRadius": "15px"
                      }
                    },
                    "commit": {
                      "author": "kassandra.stafford@evari.tech",
                      "description": "",
                      "summary": "dashboard button"
                    },
                    "css": {
                      "backgroundImage": ""
                    },
                    "internalKey": "RDR_BPKPLUS_CANCELLATION_ROOT",
                    "label": "",
                    "property": {
                      "fixedContainer": 70,
                      "showBg": false
                    },
                    "type": "ROOT"
                  }
                ]
              },
              "subject": {
                "type": "string",
                "example": "$RENDER/NODE"
              }
            }
          }
        ]
      }
    },
    {
      "id": "post_render_publish_node",
      "operationId": "nodePublish",
      "name": "Node Publish",
      "description": "NODE - publish",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_publish_node/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/publish/node"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "publish-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "RDR_LATITUDE_DEPENDANTS"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_publish_recursive",
      "operationId": "nodePublishRecursive",
      "name": "Node Publish Recursive",
      "description": "NODE - publish recursive",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_publish_recursive/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/publish/recursive"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "recursive-publish-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  },
                  "topic": {
                    "type": "string",
                    "example": "RDR_RDC_TotalRev"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_render_multi-upsert_node",
      "operationId": "nodeUpsertAndPublishMulti",
      "name": "Node Upsert And Publish Multi",
      "description": "NODE - upsert and publish multi",
      "schema": {
        "tags": [
          "render"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_render_multi-upsert_node/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/render/multi-upsert/node"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accordion": {
                              "type": "boolean",
                              "example": true
                            },
                            "autoExpand": {
                              "type": "boolean",
                              "example": false
                            },
                            "childNode": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "order": {
                                    "type": "number",
                                    "example": 0
                                  },
                                  "topic": {
                                    "type": "string",
                                    "example": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_MORE_PROD"
                                  }
                                }
                              },
                              "example": [
                                {
                                  "order": 0,
                                  "topic": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_MORE_PROD"
                                }
                              ]
                            },
                            "collapsed": {
                              "type": "boolean",
                              "example": true
                            },
                            "css": {
                              "type": "object",
                              "properties": {
                                "backgroundColor": {
                                  "type": "string",
                                  "example": "lightsteelblue"
                                },
                                "backgroundImage": {
                                  "type": "string",
                                  "example": ""
                                },
                                "color": {
                                  "type": "string",
                                  "example": "black"
                                },
                                "flexDirection": {
                                  "type": "string",
                                  "example": "column"
                                },
                                "height": {
                                  "type": "string",
                                  "example": "150px"
                                },
                                "margin": {
                                  "type": "string",
                                  "example": "auto"
                                },
                                "minWidth": {
                                  "type": "string",
                                  "example": "100%"
                                },
                                "width": {
                                  "type": "string",
                                  "example": "100%"
                                }
                              }
                            },
                            "internalKey": {
                              "type": "string",
                              "example": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_TEXT_PROD"
                            },
                            "isVisible": {
                              "type": "boolean",
                              "example": false
                            },
                            "label": {
                              "type": "string",
                              "example": "User Must Refer Reason"
                            },
                            "markdown": {
                              "type": "string",
                              "example": "Based on the information provided we will need to review this quote. Please click SUBMIT and an underwriter will review your quote and will provide an outcome of the review by the next business day. If you have any queries please contact us at hello@mitti.com.au or 1300 164 884."
                            },
                            "mfeAttribute": {
                              "type": "object",
                              "properties": {
                                "formConfigTopic": {
                                  "type": "string",
                                  "example": "FRM_MITTI_UNDERWRITING_PROD"
                                },
                                "points": {
                                  "type": "string",
                                  "example": "$.data.NEW_TRIGGERING_RULES_NAMES.rules"
                                },
                                "title": {
                                  "type": "string",
                                  "example": "Referral Reasons"
                                }
                              }
                            },
                            "mfeData": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "topicPrefix"
                              },
                              "example": [
                                "topicPrefix",
                                "parentConfigTopic",
                                "authToken",
                                "apiRoot",
                                "websocketUrl"
                              ]
                            },
                            "mfeElement": {
                              "type": "string",
                              "example": "evari-form-summary-list"
                            },
                            "property": {
                              "type": "object",
                              "properties": {
                                "fixedContainer": {
                                  "type": "number",
                                  "example": 60
                                },
                                "scrollable": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "showBg": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "toastMessage": {
                                  "type": "string",
                                  "example": "This quote will need to be referred in its current state. Click the tab in the top right for more information."
                                },
                                "toggleable": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "example": "MARKDOWN"
                            }
                          }
                        },
                        "example": [
                          {
                            "internalKey": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_TEXT_PROD",
                            "label": "User Must Refer Reason",
                            "markdown": "Based on the information provided we will need to review this quote. Please click SUBMIT and an underwriter will review your quote and will provide an outcome of the review by the next business day. If you have any queries please contact us at hello@mitti.com.au or 1300 164 884.",
                            "type": "MARKDOWN"
                          },
                          {
                            "internalKey": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_MORE_PROD",
                            "label": "User Must Refer Reasons",
                            "mfeAttribute": {
                              "points": "$.data.NEW_TRIGGERING_RULES_NAMES.rules",
                              "title": "Referral Reasons"
                            },
                            "mfeElement": "evari-form-summary-list",
                            "type": "MFE"
                          },
                          {
                            "accordion": true,
                            "autoExpand": false,
                            "childNode": [
                              {
                                "order": 0,
                                "topic": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_MORE_PROD"
                              }
                            ],
                            "internalKey": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_MORE_CONTAINER_PROD",
                            "label": "Referral Reasons",
                            "type": "CONTAINER"
                          },
                          {
                            "childNode": [
                              {
                                "order": 0,
                                "topic": "RDR_MITTI_UNDERWRITING_USER_REFERRED_TEXT_PROD"
                              },
                              {
                                "order": 0,
                                "topic": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_TEXT_PROD"
                              },
                              {
                                "order": 1,
                                "topic": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_MORE_CONTAINER_PROD"
                              }
                            ],
                            "internalKey": "RDR_MITTI_UNDERWRITING_USER_REFERRED_ROOT_PROD",
                            "isVisible": false,
                            "label": "User Referred Root",
                            "type": "ROOT"
                          },
                          {
                            "childNode": [
                              {
                                "order": 0,
                                "topic": "RDR_MITTI_UNDERWRITING_SUBFORM_PROD"
                              },
                              {
                                "order": 1,
                                "topic": "RDR_MITTI_UNDERWRITING_USER_MUST_REFER_ROOT_PROD"
                              },
                              {
                                "order": 2,
                                "topic": "RDR_MITTI_UNDERWRITING_USER_REFERRED_ROOT_PROD"
                              }
                            ],
                            "collapsed": true,
                            "css": {
                              "backgroundColor": "lightsteelblue",
                              "color": "black",
                              "flexDirection": "column"
                            },
                            "internalKey": "RDR_MITTI_UNDERWRITING_SUBFORM_PARENT_PANEL_PROD",
                            "isVisible": false,
                            "label": "Parent Sidebar",
                            "mfeAttribute": {
                              "formConfigTopic": "FRM_MITTI_UNDERWRITING_PROD"
                            },
                            "mfeData": [
                              "topicPrefix",
                              "parentConfigTopic",
                              "authToken",
                              "apiRoot",
                              "websocketUrl"
                            ],
                            "mfeElement": "evari-form-subform-body",
                            "property": {
                              "scrollable": true,
                              "toastMessage": "This quote will need to be referred in its current state. Click the tab in the top right for more information.",
                              "toggleable": true
                            },
                            "type": "PANEL"
                          },
                          {
                            "css": {
                              "minWidth": "100%",
                              "width": "100%"
                            },
                            "internalKey": "RDR_MITTI_UNDERWRITING_DECLINED_PANEL_HEADER_PROD",
                            "label": "Declined Header",
                            "markdown": "# This is Declined",
                            "type": "MARKDOWN"
                          },
                          {
                            "css": {
                              "minWidth": "100%",
                              "width": "100%"
                            },
                            "internalKey": "RDR_MITTI_UNDERWRITING_DECLINED_PANEL_TEXT_PROD",
                            "label": "Declined Text",
                            "markdown": "",
                            "type": "MARKDOWN"
                          },
                          {
                            "childNode": [
                              {
                                "order": 0,
                                "topic": "RDR_MITTI_UNDERWRITING_DECLINED_PANEL_HEADER_PROD"
                              },
                              {
                                "order": 1,
                                "topic": "RDR_MITTI_UNDERWRITING_DECLINED_PANEL_TEXT_PROD"
                              }
                            ],
                            "collapsed": true,
                            "css": {
                              "backgroundColor": "#B22222",
                              "color": "white",
                              "flexDirection": "column"
                            },
                            "internalKey": "RDR_MITTI_UNDERWRITING_DECLINED_PANEL_PROD",
                            "isVisible": false,
                            "label": "Declined Sidebar",
                            "type": "PANEL"
                          },
                          {
                            "childNode": [
                              {
                                "order": 0,
                                "topic": "RDR_MITTI_LOGO_PROD"
                              },
                              {
                                "order": 1,
                                "topic": "RDR_MITTI_PAGE_GROUP_PROD"
                              },
                              {
                                "order": 2,
                                "topic": "RDR_MITTI_FOOTER_TEXT_PROD"
                              },
                              {
                                "order": 3,
                                "topic": "RDR_MITTI_UNDERWRITING_SUBFORM_PARENT_PANEL_PROD"
                              },
                              {
                                "order": 4,
                                "topic": "RDR_MITTI_UNDERWRITING_DECLINED_PANEL_PROD"
                              }
                            ],
                            "css": {
                              "backgroundImage": ""
                            },
                            "internalKey": "RDR_MITTI_ROOT_PROD",
                            "label": "",
                            "property": {
                              "fixedContainer": 60,
                              "showBg": false
                            },
                            "type": "ROOT"
                          },
                          {
                            "css": {
                              "height": "150px",
                              "margin": "auto",
                              "width": "200px"
                            },
                            "internalKey": "RDR_MITTI_LOGO_PROD",
                            "label": "",
                            "markdown": "![Evari](https://s3-ap-southeast-2.amazonaws.com/web-resources-bucket-961566305394-ap-southeast-2/310fb4cf-9757-4f55-84ea-62940310df15)",
                            "type": "MARKDOWN"
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "multi-upsert-node"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RENDER/NODE/DRAFT"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_rule_config",
      "operationId": "setRulesMulti",
      "name": "Set Rules Multi",
      "description": "Set Rules Multi",
      "schema": {
        "tags": [
          "rule"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_rule_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/rule/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-collections"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RULE/COLLECTION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_rule_action",
      "operationId": "runRulesetViaPegasus",
      "name": "Run Ruleset Via Pegasus",
      "description": "Run Ruleset via Pegasus",
      "schema": {
        "tags": [
          "rule"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_rule_action/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/rule/action"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "collection": {
                        "type": "string",
                        "example": "TOPIC_OF_RULE_COLLECTION"
                      },
                      "facts": {
                        "type": "object",
                        "properties": {
                          "input1intger.value": {
                            "type": "number",
                            "example": 111
                          },
                          "input2string.value": {
                            "type": "string",
                            "example": "145.4"
                          },
                          "input3Boolean.value": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "run-collection-rules"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RULE/ACTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "referenceIDForRuleRunNoNeedToChange"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_rule_balrog-run",
      "operationId": "deprecatedRunRulesetViaBalrog",
      "name": "Deprecated Run Ruleset Via Balrog",
      "description": "[DEPRECATED] Run Ruleset via Balrog",
      "schema": {
        "tags": [
          "rule"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_rule_balrog-run/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/rule/balrog-run"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "facts": {
                        "type": "object",
                        "properties": {
                          "DEMO_GOODS_VALUE.value": {
                            "type": "number",
                            "example": 200
                          },
                          "PACK_CARRIER.value": {
                            "type": "string",
                            "example": "Aramex"
                          },
                          "PACK_GOODS.value": {
                            "type": "string",
                            "example": "Beauty Products"
                          },
                          "PACK_TRIP_TYPE.value": {
                            "type": "string",
                            "example": "Domestic"
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "run-collection-rules"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RULE/COLLECTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "DEMO_PACKAGE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Cloudstream-API/post_rule_balrog-run/output-200.schema.json",
            "type": "object",
            "properties": {
              "PACK_TRIP_TYPE_MODIFER.value": {
                "type": "number",
                "example": 1
              },
              "RDR_PACKAGE_DECLINE.isVisible": {
                "type": "boolean",
                "example": false
              },
              "RDR_PRICING_DISPLAY.markdown": {
                "type": "string",
                "example": "$ 1.45 Total Premium (Excl Taxes and Fees)"
              },
              "carrierRiskRating.value": {
                "type": "string",
                "example": "Medium"
              },
              "error": {
                "type": "string",
                "example": "Invalid request"
              },
              "goodsRiskRating.value": {
                "type": "string",
                "example": "Low"
              },
              "liability.ceil": {
                "type": "number",
                "example": 8
              },
              "liability.div25": {
                "type": "number",
                "example": 8
              },
              "liability.value": {
                "type": "number",
                "example": 200
              },
              "loadedRiskRating.value": {
                "type": "string",
                "example": "Medium"
              },
              "riskFactor.value": {
                "type": "number",
                "example": 1.25
              },
              "riskPremium.value": {
                "type": "number",
                "example": 1.25
              },
              "totalPremium.value": {
                "type": "number",
                "example": 1.45
              }
            }
          }
        ]
      }
    },
    {
      "id": "post_rule_run",
      "operationId": "deprecatedLocalBalrogRunRules",
      "name": "Deprecated Local Balrog Run Rules",
      "description": "[DEPRECATED] [LOCAL] Balrog run rules",
      "schema": {
        "tags": [
          "rule"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_rule_run/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/rule/run"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "facts": {
                        "type": "object",
                        "properties": {
                          "DEMO_GOODS_VALUE.value": {
                            "type": "number",
                            "example": 200
                          },
                          "PACK_CARRIER.value": {
                            "type": "string",
                            "example": "Aramex"
                          },
                          "PACK_GOODS.value": {
                            "type": "string",
                            "example": "Beauty Products"
                          },
                          "PACK_TRIP_TYPE.value": {
                            "type": "string",
                            "example": "Domestic"
                          }
                        }
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "run-collection-rules"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$RULE/COLLECTION"
                  },
                  "topic": {
                    "type": "string",
                    "example": "DEMO_PACKAGE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_team_create",
      "operationId": "teamCreate",
      "name": "Team Create",
      "description": "TEAM - create",
      "schema": {
        "tags": [
          "team"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_team_create/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/team/create"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Organisation"
                      },
                      "productTopic": {
                        "type": "object",
                        "properties": {
                          "38514636-7a24-4ee8-a601-435e19de6db2": {
                            "type": "boolean",
                            "example": true
                          },
                          "eea520eb-3b33-4353-a606-3c48e9e990d5": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "questions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "answerConfig": {
                              "type": "object",
                              "properties": {
                                "false": {
                                  "type": "string",
                                  "example": "No"
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "internalKey": {
                                        "type": "string",
                                        "example": "SIGNED"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "Signed"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "internalKey": "SIGNED",
                                      "value": "Signed"
                                    },
                                    {
                                      "internalKey": "UNSIGNED",
                                      "value": "Unsigned"
                                    }
                                  ]
                                },
                                "true": {
                                  "type": "string",
                                  "example": "Yes"
                                }
                              }
                            },
                            "answerType": {
                              "type": "string",
                              "example": "string"
                            },
                            "key": {
                              "type": "string",
                              "example": "licenseNumber"
                            },
                            "label": {
                              "type": "string",
                              "example": "License Number"
                            },
                            "readOnly": {
                              "type": "boolean",
                              "example": false
                            }
                          }
                        },
                        "example": [
                          {
                            "answerType": "string",
                            "key": "licenseNumber",
                            "label": "License Number",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "phoneNumber",
                            "label": "Phone Number",
                            "readOnly": false
                          },
                          {
                            "answerType": "email",
                            "key": "contactEmail",
                            "label": "Contact Email",
                            "readOnly": false
                          },
                          {
                            "answerType": "email",
                            "key": "accountsEmail",
                            "label": "Accounts Email",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "streetAddress",
                            "label": "Street Address",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "state",
                            "label": "State",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "city",
                            "label": "City",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "zipCode",
                            "label": "Zip Code",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "country",
                            "label": "Country",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "bankName",
                            "label": "Bank Name",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "bankRoutingNumber",
                            "label": "Bank Routing Number",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "bankAccountNumber",
                            "label": "Bank Account Number",
                            "readOnly": false
                          },
                          {
                            "answerConfig": {
                              "options": [
                                {
                                  "internalKey": "SIGNED",
                                  "value": "Signed"
                                },
                                {
                                  "internalKey": "UNSIGNED",
                                  "value": "Unsigned"
                                }
                              ]
                            },
                            "answerType": "dropdown",
                            "key": "w9Status",
                            "label": "W-9 Status",
                            "readOnly": false
                          },
                          {
                            "answerConfig": {
                              "false": "No",
                              "true": "Yes"
                            },
                            "answerType": "boolean",
                            "key": "canAccessOthers",
                            "label": "Can Access Other Teams",
                            "readOnly": false
                          },
                          {
                            "answerConfig": {
                              "options": [
                                {
                                  "internalKey": "BROKER",
                                  "value": "Broker"
                                },
                                {
                                  "internalKey": "BROKER_AND_MGA",
                                  "value": "Broker and MGA"
                                },
                                {
                                  "internalKey": "DISTRIBUTION",
                                  "value": "Distribution"
                                },
                                {
                                  "internalKey": "MGU",
                                  "value": "MGU"
                                },
                                {
                                  "internalKey": "MGA",
                                  "value": "MGA"
                                },
                                {
                                  "internalKey": "RETAIL_AGENT",
                                  "value": "Retail Agent"
                                },
                                {
                                  "internalKey": "WHOLESALER",
                                  "value": "Wholesaler"
                                }
                              ]
                            },
                            "answerType": "dropdown",
                            "key": "agencyType",
                            "label": "Agency Type",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "legacyCD",
                            "label": "Legacy CD",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "agentCD",
                            "label": "Agent CD",
                            "readOnly": false
                          },
                          {
                            "answerType": "string",
                            "key": "wrapperID",
                            "label": "Wrapper ID",
                            "readOnly": false
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$TEAM/TYPE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_team_get",
      "operationId": "teamGet",
      "name": "Team Get",
      "description": "TEAM - get",
      "schema": {
        "tags": [
          "team"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_team_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/team/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "get"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$TEAM/TYPE"
                  },
                  "topic": {
                    "type": "string",
                    "example": "TEAM_ORGANISATION"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_team_list",
      "operationId": "teamListAllDp",
      "name": "Team List All Dp",
      "description": "TEAM - list all (DP)",
      "schema": {
        "tags": [
          "team"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_team_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/team/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$TEAM/TYPE"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_team_list_search",
      "operationId": "teamListBySearch",
      "name": "Team List By Search",
      "description": "TEAM - list by search",
      "schema": {
        "tags": [
          "team"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_team_list_search/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/team/list/search"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "includeArchived": {
                        "type": "boolean",
                        "example": true
                      },
                      "searchTerm": {
                        "type": "string",
                        "example": "1"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-by-search-term"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$TEAM"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_team_list_topics",
      "operationId": "teamTopicsList",
      "name": "Team Topics List",
      "description": "TEAM - topics list",
      "schema": {
        "tags": [
          "team"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_team_list_topics/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/team/list/topics"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "teamTopic": {
                        "type": "string",
                        "example": "TEAM_ONE"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-topics"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$TEAM"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_team_update",
      "operationId": "teamUpdate",
      "name": "Team Update",
      "description": "TEAM - update",
      "schema": {
        "tags": [
          "team"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_team_update/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/team/update"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "displayPreferences": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "displayOrder": {
                              "type": "number",
                              "example": 1
                            },
                            "key": {
                              "type": "string",
                              "example": "$.label"
                            },
                            "name": {
                              "type": "string",
                              "example": "Label"
                            },
                            "type": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "column"
                              },
                              "example": [
                                "column",
                                "info"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "displayOrder": 1,
                            "key": "$.label",
                            "name": "Label",
                            "type": [
                              "column",
                              "info"
                            ]
                          },
                          {
                            "displayOrder": 2,
                            "key": "$.accountsEmail",
                            "name": "Email",
                            "type": [
                              "column",
                              "info"
                            ]
                          },
                          {
                            "displayOrder": 3,
                            "key": "$.phoneNumber",
                            "name": "Phone number",
                            "type": [
                              "column",
                              "info"
                            ]
                          },
                          {
                            "displayOrder": 4,
                            "key": "$.state",
                            "name": "state",
                            "type": [
                              "column",
                              "info"
                            ]
                          },
                          {
                            "displayOrder": 5,
                            "key": "$.internalKey",
                            "name": "internalKey",
                            "type": [
                              "column",
                              "info"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "update"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$TEAM/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "LIST"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_command",
      "operationId": "commandIndexUsers",
      "name": "Command Index Users",
      "description": "COMMAND - index users",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_command/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/command"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "index-users"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_get",
      "operationId": "configGet",
      "name": "Config Get",
      "description": "CONFIG - get",
      "schema": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_get/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/get"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "tokenServiceId": {
                        "type": "string",
                        "example": "232d745f-6c46-5871-a1ad-a791086b2b01"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "get"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_list",
      "operationId": "configList",
      "name": "Config List",
      "description": "CONFIG - list",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_list/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/list"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "example": "list-dp"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_update_config",
      "operationId": "configUpdate",
      "name": "Config Update",
      "description": "CONFIG - update",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_update_config/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/update/config"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "displayPreferences": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "displayOrder": {
                              "type": "number",
                              "example": 1
                            },
                            "key": {
                              "type": "string",
                              "example": "$.account_number"
                            },
                            "name": {
                              "type": "string",
                              "example": "Account number"
                            },
                            "type": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "column"
                              },
                              "example": [
                                "column"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "displayOrder": 1,
                            "key": "$.account_number",
                            "name": "Account number",
                            "type": [
                              "column"
                            ]
                          },
                          {
                            "displayOrder": 2,
                            "key": "$.username",
                            "name": "Username",
                            "type": [
                              "column"
                            ]
                          },
                          {
                            "displayOrder": 3,
                            "key": "$.email",
                            "name": "Email",
                            "type": [
                              "column",
                              "index",
                              "info"
                            ]
                          }
                        ]
                      },
                      "label": {
                        "type": "string",
                        "example": "user list"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "update-config"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER/CONFIG"
                  },
                  "topic": {
                    "type": "string",
                    "example": "list"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_create",
      "operationId": "userCreate",
      "name": "User Create",
      "description": "USER - create",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_create/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/create"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "brack+thisisaneewuser@evari.tech"
                      },
                      "username": {
                        "type": "string",
                        "example": "brack+thisisaneewuser@evari.tech"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "create-user"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_create/output-200.schema.json",
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "properties": {
                  "account_number": {
                    "type": "string",
                    "example": "EV2EE5-AR7DF9-ICD81"
                  },
                  "email": {
                    "type": "string",
                    "example": "brack+thisisaneewuser@evari.tech"
                  },
                  "internalKey": {
                    "type": "string",
                    "example": "USR_MHPETGRKFH02EOGPQC7MF"
                  },
                  "username": {
                    "type": "string",
                    "example": "andrii.muradian@evari.tech"
                  }
                }
              },
              "command": {
                "type": "string",
                "example": "create-user"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "messageTime": {
                    "type": "number",
                    "example": 1608128380066
                  },
                  "originType": {
                    "type": "string",
                    "example": "http"
                  }
                }
              },
              "subject": {
                "type": "string",
                "example": "$USER"
              },
              "topic": {
                "type": "string",
                "example": "USR_MHPETGRKFH02EOGPQC7MF"
              },
              "type": {
                "type": "string",
                "example": "user-created"
              }
            }
          }
        ]
      }
    },
    {
      "id": "post_userv3_identify",
      "operationId": "userIdentify",
      "name": "User Identify",
      "description": "USER - identify",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_identify/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/identify"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "identity": {
                        "type": "string",
                        "example": "pking@evari.tech"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "identity"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER/IDENTITY"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_list_search",
      "operationId": "userListBySearchTerm",
      "name": "User List By Search Term",
      "description": "USER - list (by search term)",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_list_search/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/list/search"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "searchTerm": {
                        "type": "string",
                        "example": "marcus"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "list-by-search-term"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_update",
      "operationId": "userUpdate",
      "name": "User Update",
      "description": "USER - update",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_update/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/update"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "tokenServiceId": {
                        "type": "string",
                        "example": "87ef7856-fdf9-5eca-85bb-55adbb230a49"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "update-user"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "USR_B24070EAF7A0A8F"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_lookup",
      "operationId": "userLookupByEmailExact",
      "name": "User Lookup By Email Exact",
      "description": "USER - lookup by email exact",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_lookup/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/lookup"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "brack+parentorg@evari.tech"
                      }
                    }
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_userv3_search",
      "operationId": "userSearchByEmail",
      "name": "User Search By Email",
      "description": "USER - search by email",
      "schema": {
        "tags": [
          "user"
        ],
        "security": "$ref:security",
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/Cloudstream-API/post_userv3_search/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/userv3/search"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "example": "@starwars.local"
                      }
                    }
                  },
                  "command": {
                    "type": "string",
                    "example": "search"
                  },
                  "subject": {
                    "type": "string",
                    "example": "$USER"
                  },
                  "topic": {
                    "type": "string",
                    "example": "search-by-username"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    }
  ],
  "references": {
    "baseURL": {
      "type": "string",
      "enum": [
        "https://api.cloudstream.evari.tech/apiv2"
      ]
    },
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "queryDesc": "Query parameters sent with the request",
    "paramDesc": "URL parameters sent with the request",
    "headerDesc": "HTTP headers sent when making the request",
    "dataDesc": "Data sent with the request",
    "schema": "https://json-schema.org/draft/2020-12/schema"
  },
  "securitySchemes": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT",
      "description": "JWT Authorization header using the Bearer scheme"
    }
  }
}