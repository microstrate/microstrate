{
  "name": "GitLab API",
  "description": "An OpenAPI definition for the GitLab REST API.\nFew API resources or endpoints are currently included.\nThe intent is to expand this to match the entire Markdown documentation of the API:\n<https://docs.gitlab.com/ee/api/>. Contributions are welcome.\n\nWhen viewing this on gitlab.com, you can test API calls directly from the browser\nagainst the `gitlab.com` instance, if you are logged in.\nThe feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/#session-cookie),\nso each request is made using your account.\n\nInstructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html)\n",
  "nodes": [
    {
      "id": "get_groups__id__badges__badge_id_",
      "operationId": "getApiV4GroupsIdBadgesBadgeId",
      "name": "Get Api V 4 Groups Id Badges Badge Id",
      "description": "Gets a badge of a group.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__badges__badge_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/badges/{badge_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "badge_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user."
                },
                "badge_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The badge ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__badges__badge_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "description": "API_Entities_Badge model"
          }
        ]
      }
    },
    {
      "id": "delete_groups__id__badges__badge_id_",
      "operationId": "deleteApiV4GroupsIdBadgesBadgeId",
      "name": "Delete Api V 4 Groups Id Badges Badge Id",
      "description": "Removes a badge from the group.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_groups__id__badges__badge_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/badges/{badge_id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "badge_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user."
                },
                "badge_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The badge ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "put_groups__id__badges__badge_id_",
      "operationId": "putApiV4GroupsIdBadgesBadgeId",
      "name": "Put Api V 4 Groups Id Badges Badge Id",
      "description": "Updates a badge of a group.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_groups__id__badges__badge_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/badges/{badge_id}"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "badge_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user."
                },
                "badge_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "link_url": {
                    "type": "string",
                    "description": "URL of the badge link"
                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL of the badge image"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the badge"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_groups__id__badges__badge_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "description": "API_Entities_Badge model"
          }
        ]
      }
    },
    {
      "id": "get_groups__id__badges",
      "operationId": "getApiV4GroupsIdBadges",
      "name": "Get Api V 4 Groups Id Badges",
      "description": "Gets a list of group badges viewable by the authenticated user.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__badges/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/badges"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                },
                "name": {
                  "type": "string",
                  "description": "Name for the badge"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_groups__id__badges",
      "operationId": "postApiV4GroupsIdBadges",
      "name": "Post Api V 4 Groups Id Badges",
      "description": "Adds a badge to a group.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_groups__id__badges/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/badges"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "image_url",
                  "link_url"
                ],
                "properties": {
                  "link_url": {
                    "type": "string",
                    "description": "URL of the badge link"
                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL of the badge image"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the badge"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_groups__id__badges/output-201.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "description": "API_Entities_Badge model"
          }
        ]
      }
    },
    {
      "id": "get_groups__id__badges_render",
      "operationId": "getApiV4GroupsIdBadgesRender",
      "name": "Get Api V 4 Groups Id Badges Render",
      "description": "Preview a badge from a group.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__badges_render/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/badges/render"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "required": [
                "link_url",
                "image_url"
              ],
              "properties": {
                "link_url": {
                  "type": "string",
                  "description": "URL of the badge link"
                },
                "image_url": {
                  "type": "string",
                  "description": "URL of the badge image"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__badges_render/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              }
            },
            "description": "API_Entities_BasicBadgeDetails model"
          }
        ]
      }
    },
    {
      "id": "delete_groups__id__access_requests__user_id_",
      "operationId": "deleteApiV4GroupsIdAccessRequestsUserId",
      "name": "Delete Api V 4 Groups Id Access Requests User Id",
      "description": "Denies an access request for the given user.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_groups__id__access_requests__user_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/access_requests/{user_id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "user_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The user ID of the access requester"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "put_groups__id__access_requests__user_id__approve",
      "operationId": "putApiV4GroupsIdAccessRequestsUserIdApprove",
      "name": "Put Api V 4 Groups Id Access Requests User Id Approve",
      "description": "Approves an access request for the given user.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_groups__id__access_requests__user_id__approve/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/access_requests/{user_id}/approve"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "user_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The user ID of the access requester"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "access_level": {
                    "type": "integer",
                    "description": "A valid access level (defaults: `30`, the Developer role)",
                    "format": "int32",
                    "default": 30
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_groups__id__access_requests__user_id__approve/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "name": {
                "type": "string",
                "example": "Administrator"
              },
              "state": {
                "type": "string",
                "example": "active"
              },
              "avatar_url": {
                "type": "string",
                "example": "https://gravatar.com/avatar/1"
              },
              "avatar_path": {
                "type": "string",
                "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
              },
              "custom_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "foo"
                    },
                    "value": {
                      "type": "string",
                      "example": "bar"
                    }
                  }
                }
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/root"
              },
              "email": {
                "type": "string"
              },
              "requested_at": {
                "type": "string"
              }
            },
            "description": "API_Entities_AccessRequester model"
          }
        ]
      }
    },
    {
      "id": "get_groups__id__access_requests",
      "operationId": "getApiV4GroupsIdAccessRequests",
      "name": "Get Api V 4 Groups Id Access Requests",
      "description": "Gets a list of access requests for a group.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__access_requests/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/access_requests"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_groups__id__access_requests/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "name": {
                "type": "string",
                "example": "Administrator"
              },
              "state": {
                "type": "string",
                "example": "active"
              },
              "avatar_url": {
                "type": "string",
                "example": "https://gravatar.com/avatar/1"
              },
              "avatar_path": {
                "type": "string",
                "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
              },
              "custom_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "foo"
                    },
                    "value": {
                      "type": "string",
                      "example": "bar"
                    }
                  }
                }
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/root"
              },
              "email": {
                "type": "string"
              },
              "requested_at": {
                "type": "string"
              }
            },
            "description": "API_Entities_AccessRequester model"
          }
        ]
      }
    },
    {
      "id": "post_groups__id__access_requests",
      "operationId": "postApiV4GroupsIdAccessRequests",
      "name": "Post Api V 4 Groups Id Access Requests",
      "description": "Requests access for the authenticated user to a group.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_groups__id__access_requests/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/groups/{id}/access_requests"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the group owned by the authenticated user"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_groups__id__access_requests/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "name": {
                "type": "string",
                "example": "Administrator"
              },
              "state": {
                "type": "string",
                "example": "active"
              },
              "avatar_url": {
                "type": "string",
                "example": "https://gravatar.com/avatar/1"
              },
              "avatar_path": {
                "type": "string",
                "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
              },
              "custom_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "foo"
                    },
                    "value": {
                      "type": "string",
                      "example": "bar"
                    }
                  }
                }
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/root"
              },
              "email": {
                "type": "string"
              },
              "requested_at": {
                "type": "string"
              }
            },
            "description": "API_Entities_AccessRequester model"
          }
        ]
      }
    },
    {
      "id": "delete_projects__id__repository_merged_branches",
      "operationId": "deleteApiV4ProjectsIdRepositoryMergedBranches",
      "name": "Delete Api V 4 Projects Id Repository Merged Branches",
      "description": "Delete all merged branches",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_projects__id__repository_merged_branches/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/merged_branches"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_projects__id__repository_branches__branch_",
      "operationId": "getApiV4ProjectsIdRepositoryBranchesBranch",
      "name": "Get Api V 4 Projects Id Repository Branches Branch",
      "description": "Get a single repository branch",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__repository_branches__branch_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/branches/{branch}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "branch"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "branch": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__repository_branches__branch_/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "master"
              },
              "commit": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2695effb5807a22ff3d138d593fd856244e155e7"
                  },
                  "short_id": {
                    "type": "string",
                    "example": "2695effb"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-26T09:08:53.000Z"
                  },
                  "parent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "message": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "author_name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "author_email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "authored_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "committer_name": {
                    "type": "string",
                    "example": "Jack Smith"
                  },
                  "committer_email": {
                    "type": "string",
                    "example": "jack@example.com"
                  },
                  "committed_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "trailers": {
                    "type": "object",
                    "properties": {},
                    "example": "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
                  }
                }
              },
              "merged": {
                "type": "boolean",
                "example": true
              },
              "protected": {
                "type": "boolean",
                "example": true
              },
              "developers_can_push": {
                "type": "boolean",
                "example": true
              },
              "developers_can_merge": {
                "type": "boolean",
                "example": true
              },
              "can_push": {
                "type": "boolean",
                "example": true
              },
              "default": {
                "type": "boolean",
                "example": true
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/Commit921/the-dude/-/tree/master"
              }
            },
            "description": "API_Entities_Branch model"
          }
        ]
      }
    },
    {
      "id": "delete_projects__id__repository_branches__branch_",
      "operationId": "deleteApiV4ProjectsIdRepositoryBranchesBranch",
      "name": "Delete Api V 4 Projects Id Repository Branches Branch",
      "description": "Delete a branch",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_projects__id__repository_branches__branch_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/branches/{branch}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "branch"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "branch": {
                  "type": "string",
                  "description": "The name of the branch"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_projects__id__repository_branches",
      "operationId": "getApiV4ProjectsIdRepositoryBranches",
      "name": "Get Api V 4 Projects Id Repository Branches",
      "description": "Get a project repository branches",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__repository_branches/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/branches"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                },
                "search": {
                  "type": "string",
                  "description": "Return list of branches matching the search criteria"
                },
                "regex": {
                  "type": "string",
                  "description": "Return list of branches matching the regex"
                },
                "sort": {
                  "type": "string",
                  "enum": [
                    "name_asc",
                    "updated_asc",
                    "updated_desc"
                  ],
                  "description": "Return list of branches sorted by the given field"
                },
                "page_token": {
                  "type": "string",
                  "description": "Name of branch to start the pagination from"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_projects__id__repository_branches",
      "operationId": "postApiV4ProjectsIdRepositoryBranches",
      "name": "Post Api V 4 Projects Id Repository Branches",
      "description": "Create branch",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__repository_branches/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/branches"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "required": [
                "branch",
                "ref"
              ],
              "properties": {
                "branch": {
                  "type": "string",
                  "description": "The name of the branch"
                },
                "ref": {
                  "type": "string",
                  "description": "Create branch from commit sha or existing branch"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__repository_branches/output-201.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "master"
              },
              "commit": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2695effb5807a22ff3d138d593fd856244e155e7"
                  },
                  "short_id": {
                    "type": "string",
                    "example": "2695effb"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-26T09:08:53.000Z"
                  },
                  "parent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "message": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "author_name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "author_email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "authored_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "committer_name": {
                    "type": "string",
                    "example": "Jack Smith"
                  },
                  "committer_email": {
                    "type": "string",
                    "example": "jack@example.com"
                  },
                  "committed_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "trailers": {
                    "type": "object",
                    "properties": {},
                    "example": "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
                  }
                }
              },
              "merged": {
                "type": "boolean",
                "example": true
              },
              "protected": {
                "type": "boolean",
                "example": true
              },
              "developers_can_push": {
                "type": "boolean",
                "example": true
              },
              "developers_can_merge": {
                "type": "boolean",
                "example": true
              },
              "can_push": {
                "type": "boolean",
                "example": true
              },
              "default": {
                "type": "boolean",
                "example": true
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/Commit921/the-dude/-/tree/master"
              }
            },
            "description": "API_Entities_Branch model"
          }
        ]
      }
    },
    {
      "id": "put_projects__id__repository_branches__branch__unprotect",
      "operationId": "putApiV4ProjectsIdRepositoryBranchesBranchUnprotect",
      "name": "Put Api V 4 Projects Id Repository Branches Branch Unprotect",
      "description": "Unprotect a single branch",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__repository_branches__branch__unprotect/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/branches/{branch}/unprotect"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "branch"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "branch": {
                  "type": "string",
                  "description": "The name of the branch"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__repository_branches__branch__unprotect/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "master"
              },
              "commit": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2695effb5807a22ff3d138d593fd856244e155e7"
                  },
                  "short_id": {
                    "type": "string",
                    "example": "2695effb"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-26T09:08:53.000Z"
                  },
                  "parent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "message": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "author_name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "author_email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "authored_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "committer_name": {
                    "type": "string",
                    "example": "Jack Smith"
                  },
                  "committer_email": {
                    "type": "string",
                    "example": "jack@example.com"
                  },
                  "committed_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "trailers": {
                    "type": "object",
                    "properties": {},
                    "example": "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
                  }
                }
              },
              "merged": {
                "type": "boolean",
                "example": true
              },
              "protected": {
                "type": "boolean",
                "example": true
              },
              "developers_can_push": {
                "type": "boolean",
                "example": true
              },
              "developers_can_merge": {
                "type": "boolean",
                "example": true
              },
              "can_push": {
                "type": "boolean",
                "example": true
              },
              "default": {
                "type": "boolean",
                "example": true
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/Commit921/the-dude/-/tree/master"
              }
            },
            "description": "API_Entities_Branch model"
          }
        ]
      }
    },
    {
      "id": "put_projects__id__repository_branches__branch__protect",
      "operationId": "putApiV4ProjectsIdRepositoryBranchesBranchProtect",
      "name": "Put Api V 4 Projects Id Repository Branches Branch Protect",
      "description": "Protect a single branch",
      "schema": {
        "tags": [
          "branches"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__repository_branches__branch__protect/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/repository/branches/{branch}/protect"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "branch"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "branch": {
                  "type": "string",
                  "description": "The name of the branch"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "developers_can_push": {
                    "type": "boolean",
                    "description": "Flag if developers can push to that branch"
                  },
                  "developers_can_merge": {
                    "type": "boolean",
                    "description": "Flag if developers can merge to that branch"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__repository_branches__branch__protect/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "master"
              },
              "commit": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2695effb5807a22ff3d138d593fd856244e155e7"
                  },
                  "short_id": {
                    "type": "string",
                    "example": "2695effb"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-26T09:08:53.000Z"
                  },
                  "parent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "message": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "author_name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "author_email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "authored_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "committer_name": {
                    "type": "string",
                    "example": "Jack Smith"
                  },
                  "committer_email": {
                    "type": "string",
                    "example": "jack@example.com"
                  },
                  "committed_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "trailers": {
                    "type": "object",
                    "properties": {},
                    "example": "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
                  }
                }
              },
              "merged": {
                "type": "boolean",
                "example": true
              },
              "protected": {
                "type": "boolean",
                "example": true
              },
              "developers_can_push": {
                "type": "boolean",
                "example": true
              },
              "developers_can_merge": {
                "type": "boolean",
                "example": true
              },
              "can_push": {
                "type": "boolean",
                "example": true
              },
              "default": {
                "type": "boolean",
                "example": true
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/Commit921/the-dude/-/tree/master"
              }
            },
            "description": "API_Entities_Branch model"
          }
        ]
      }
    },
    {
      "id": "get_projects__id__badges__badge_id_",
      "operationId": "getApiV4ProjectsIdBadgesBadgeId",
      "name": "Get Api V 4 Projects Id Badges Badge Id",
      "description": "Gets a badge of a project.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__badges__badge_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/badges/{badge_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "badge_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user."
                },
                "badge_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The badge ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__badges__badge_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "description": "API_Entities_Badge model"
          }
        ]
      }
    },
    {
      "id": "delete_projects__id__badges__badge_id_",
      "operationId": "deleteApiV4ProjectsIdBadgesBadgeId",
      "name": "Delete Api V 4 Projects Id Badges Badge Id",
      "description": "Removes a badge from the project.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_projects__id__badges__badge_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/badges/{badge_id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "badge_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user."
                },
                "badge_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The badge ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "put_projects__id__badges__badge_id_",
      "operationId": "putApiV4ProjectsIdBadgesBadgeId",
      "name": "Put Api V 4 Projects Id Badges Badge Id",
      "description": "Updates a badge of a project.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__badges__badge_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/badges/{badge_id}"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "badge_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user."
                },
                "badge_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "link_url": {
                    "type": "string",
                    "description": "URL of the badge link"
                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL of the badge image"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the badge"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__badges__badge_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "description": "API_Entities_Badge model"
          }
        ]
      }
    },
    {
      "id": "get_projects__id__badges",
      "operationId": "getApiV4ProjectsIdBadges",
      "name": "Get Api V 4 Projects Id Badges",
      "description": "Gets a list of project badges viewable by the authenticated user.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__badges/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/badges"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                },
                "name": {
                  "type": "string",
                  "description": "Name for the badge"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_projects__id__badges",
      "operationId": "postApiV4ProjectsIdBadges",
      "name": "Post Api V 4 Projects Id Badges",
      "description": "Adds a badge to a project.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__badges/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/badges"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "image_url",
                  "link_url"
                ],
                "properties": {
                  "link_url": {
                    "type": "string",
                    "description": "URL of the badge link"
                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL of the badge image"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the badge"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__badges/output-201.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "description": "API_Entities_Badge model"
          }
        ]
      }
    },
    {
      "id": "get_projects__id__badges_render",
      "operationId": "getApiV4ProjectsIdBadgesRender",
      "name": "Get Api V 4 Projects Id Badges Render",
      "description": "Preview a badge from a project.",
      "schema": {
        "tags": [
          "badges"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__badges_render/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/badges/render"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "required": [
                "link_url",
                "image_url"
              ],
              "properties": {
                "link_url": {
                  "type": "string",
                  "description": "URL of the badge link"
                },
                "image_url": {
                  "type": "string",
                  "description": "URL of the badge image"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user."
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__badges_render/output-200.schema.json",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "link_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "rendered_link_url": {
                "type": "string"
              },
              "rendered_image_url": {
                "type": "string"
              }
            },
            "description": "API_Entities_BasicBadgeDetails model"
          }
        ]
      }
    },
    {
      "id": "delete_projects__id__access_requests__user_id_",
      "operationId": "deleteApiV4ProjectsIdAccessRequestsUserId",
      "name": "Delete Api V 4 Projects Id Access Requests User Id",
      "description": "Denies an access request for the given user.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_projects__id__access_requests__user_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/access_requests/{user_id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "user_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The user ID of the access requester"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "put_projects__id__access_requests__user_id__approve",
      "operationId": "putApiV4ProjectsIdAccessRequestsUserIdApprove",
      "name": "Put Api V 4 Projects Id Access Requests User Id Approve",
      "description": "Approves an access request for the given user.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__access_requests__user_id__approve/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/access_requests/{user_id}/approve"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "user_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The user ID of the access requester"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "access_level": {
                    "type": "integer",
                    "description": "A valid access level (defaults: `30`, the Developer role)",
                    "format": "int32",
                    "default": 30
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__access_requests__user_id__approve/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "name": {
                "type": "string",
                "example": "Administrator"
              },
              "state": {
                "type": "string",
                "example": "active"
              },
              "avatar_url": {
                "type": "string",
                "example": "https://gravatar.com/avatar/1"
              },
              "avatar_path": {
                "type": "string",
                "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
              },
              "custom_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "foo"
                    },
                    "value": {
                      "type": "string",
                      "example": "bar"
                    }
                  }
                }
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/root"
              },
              "email": {
                "type": "string"
              },
              "requested_at": {
                "type": "string"
              }
            },
            "description": "API_Entities_AccessRequester model"
          }
        ]
      }
    },
    {
      "id": "get_projects__id__access_requests",
      "operationId": "getApiV4ProjectsIdAccessRequests",
      "name": "Get Api V 4 Projects Id Access Requests",
      "description": "Gets a list of access requests for a project.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__access_requests/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/access_requests"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__access_requests/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "name": {
                "type": "string",
                "example": "Administrator"
              },
              "state": {
                "type": "string",
                "example": "active"
              },
              "avatar_url": {
                "type": "string",
                "example": "https://gravatar.com/avatar/1"
              },
              "avatar_path": {
                "type": "string",
                "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
              },
              "custom_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "foo"
                    },
                    "value": {
                      "type": "string",
                      "example": "bar"
                    }
                  }
                }
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/root"
              },
              "email": {
                "type": "string"
              },
              "requested_at": {
                "type": "string"
              }
            },
            "description": "API_Entities_AccessRequester model"
          }
        ]
      }
    },
    {
      "id": "post_projects__id__access_requests",
      "operationId": "postApiV4ProjectsIdAccessRequests",
      "name": "Post Api V 4 Projects Id Access Requests",
      "description": "Requests access for the authenticated user to a project.",
      "schema": {
        "tags": [
          "access_requests"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__access_requests/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/access_requests"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project owned by the authenticated user"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__access_requests/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "name": {
                "type": "string",
                "example": "Administrator"
              },
              "state": {
                "type": "string",
                "example": "active"
              },
              "avatar_url": {
                "type": "string",
                "example": "https://gravatar.com/avatar/1"
              },
              "avatar_path": {
                "type": "string",
                "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
              },
              "custom_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "foo"
                    },
                    "value": {
                      "type": "string",
                      "example": "bar"
                    }
                  }
                }
              },
              "web_url": {
                "type": "string",
                "example": "https://gitlab.example.com/root"
              },
              "email": {
                "type": "string"
              },
              "requested_at": {
                "type": "string"
              }
            },
            "description": "API_Entities_AccessRequester model"
          }
        ]
      }
    },
    {
      "id": "delete_projects__id__alert_management_alerts__alert_iid__metric_images__metric_image_id_",
      "operationId": "deleteApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesMetricImageId",
      "name": "Delete Api V 4 Projects Id Alert Management Alerts Alert Iid Metric Images Metric Image Id",
      "description": "Remove a metric image for an alert",
      "schema": {
        "tags": [
          "alert_management"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_projects__id__alert_management_alerts__alert_iid__metric_images__metric_image_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "alert_iid",
                "metric_image_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "alert_iid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The IID of the Alert"
                },
                "metric_image_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of metric image"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/delete_projects__id__alert_management_alerts__alert_iid__metric_images__metric_image_id_/output-204.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 23
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2020-11-13T00:06:18.084Z"
              },
              "filename": {
                "type": "string",
                "example": "file.png"
              },
              "file_path": {
                "type": "string",
                "example": "/uploads/-/system/alert_metric_image/file/23/file.png"
              },
              "url": {
                "type": "string",
                "example": "https://example.com/metric"
              },
              "url_text": {
                "type": "string",
                "example": "An example metric"
              }
            },
            "description": "API_Entities_MetricImage model"
          }
        ]
      }
    },
    {
      "id": "put_projects__id__alert_management_alerts__alert_iid__metric_images__metric_image_id_",
      "operationId": "putApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesMetricImageId",
      "name": "Put Api V 4 Projects Id Alert Management Alerts Alert Iid Metric Images Metric Image Id",
      "description": "Update a metric image for an alert",
      "schema": {
        "tags": [
          "alert_management"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__alert_management_alerts__alert_iid__metric_images__metric_image_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "alert_iid",
                "metric_image_id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "alert_iid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The IID of the Alert"
                },
                "metric_image_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of metric image"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "multipart/form-data"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The url to view more metric info"
                  },
                  "url_text": {
                    "type": "string",
                    "description": "A description of the image or URL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_projects__id__alert_management_alerts__alert_iid__metric_images__metric_image_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 23
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2020-11-13T00:06:18.084Z"
              },
              "filename": {
                "type": "string",
                "example": "file.png"
              },
              "file_path": {
                "type": "string",
                "example": "/uploads/-/system/alert_metric_image/file/23/file.png"
              },
              "url": {
                "type": "string",
                "example": "https://example.com/metric"
              },
              "url_text": {
                "type": "string",
                "example": "An example metric"
              }
            },
            "description": "API_Entities_MetricImage model"
          }
        ]
      }
    },
    {
      "id": "get_projects__id__alert_management_alerts__alert_iid__metric_images",
      "operationId": "getApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImages",
      "name": "Get Api V 4 Projects Id Alert Management Alerts Alert Iid Metric Images",
      "description": "Metric Images for alert",
      "schema": {
        "tags": [
          "alert_management"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__alert_management_alerts__alert_iid__metric_images/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/alert_management_alerts/{alert_iid}/metric_images"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "alert_iid"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "alert_iid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The IID of the Alert"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_projects__id__alert_management_alerts__alert_iid__metric_images",
      "operationId": "postApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImages",
      "name": "Post Api V 4 Projects Id Alert Management Alerts Alert Iid Metric Images",
      "description": "Upload a metric image for an alert",
      "schema": {
        "tags": [
          "alert_management"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__alert_management_alerts__alert_iid__metric_images/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/alert_management_alerts/{alert_iid}/metric_images"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "alert_iid"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "alert_iid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The IID of the Alert"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "multipart/form-data"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The image file to be uploaded",
                    "format": "binary"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url to view more metric info"
                  },
                  "url_text": {
                    "type": "string",
                    "description": "A description of the image or URL"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__alert_management_alerts__alert_iid__metric_images/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 23
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2020-11-13T00:06:18.084Z"
              },
              "filename": {
                "type": "string",
                "example": "file.png"
              },
              "file_path": {
                "type": "string",
                "example": "/uploads/-/system/alert_metric_image/file/23/file.png"
              },
              "url": {
                "type": "string",
                "example": "https://example.com/metric"
              },
              "url_text": {
                "type": "string",
                "example": "An example metric"
              }
            },
            "description": "API_Entities_MetricImage model"
          }
        ]
      }
    },
    {
      "id": "post_projects__id__alert_management_alerts__alert_iid__metric_images_authorize",
      "operationId": "postApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesAuthorize",
      "name": "Post Api V 4 Projects Id Alert Management Alerts Alert Iid Metric Images Authorize",
      "description": "Workhorse authorize metric image file upload",
      "schema": {
        "tags": [
          "alert_management"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__alert_management_alerts__alert_iid__metric_images_authorize/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/authorize"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "alert_iid"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID or URL-encoded path of the project"
                },
                "alert_iid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The IID of the Alert"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_admin_batched_background_migrations__id_",
      "operationId": "getApiV4AdminBatchedBackgroundMigrationsId",
      "name": "Get Api V 4 Admin Batched Background Migrations Id",
      "description": "Retrieve a batched background migration",
      "schema": {
        "tags": [
          "batched_background_migrations"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_batched_background_migrations__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/batched_background_migrations/{id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "database": {
                  "type": "string",
                  "default": "main",
                  "enum": [
                    "main",
                    "ci",
                    "embedding",
                    "main_clusterwide",
                    "geo"
                  ],
                  "description": "The name of the database"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The batched background migration id"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_admin_batched_background_migrations__id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "job_class_name": {
                "type": "string",
                "example": "CopyColumnUsingBackgroundMigrationJob"
              },
              "table_name": {
                "type": "string",
                "example": "events"
              },
              "status": {
                "type": "string",
                "example": "active"
              },
              "progress": {
                "type": "number",
                "format": "float",
                "example": 50
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-28T14:26:39.000Z"
              }
            },
            "description": "API_Entities_BatchedBackgroundMigration model"
          }
        ]
      }
    },
    {
      "id": "get_admin_batched_background_migrations",
      "operationId": "getApiV4AdminBatchedBackgroundMigrations",
      "name": "Get Api V 4 Admin Batched Background Migrations",
      "description": "Get the list of batched background migrations",
      "schema": {
        "tags": [
          "batched_background_migrations"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_batched_background_migrations/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/batched_background_migrations"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "database": {
                  "type": "string",
                  "default": "main",
                  "enum": [
                    "main",
                    "ci",
                    "embedding",
                    "main_clusterwide",
                    "geo"
                  ],
                  "description": "The name of the database, the default `main`"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "put_admin_batched_background_migrations__id__resume",
      "operationId": "putApiV4AdminBatchedBackgroundMigrationsIdResume",
      "name": "Put Api V 4 Admin Batched Background Migrations Id Resume",
      "description": "Resume a batched background migration",
      "schema": {
        "tags": [
          "batched_background_migrations"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_admin_batched_background_migrations__id__resume/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/batched_background_migrations/{id}/resume"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The batched background migration id"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "The name of the database",
                    "default": "main",
                    "enum": [
                      "main",
                      "ci",
                      "embedding",
                      "main_clusterwide",
                      "geo"
                    ]
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_admin_batched_background_migrations__id__resume/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "job_class_name": {
                "type": "string",
                "example": "CopyColumnUsingBackgroundMigrationJob"
              },
              "table_name": {
                "type": "string",
                "example": "events"
              },
              "status": {
                "type": "string",
                "example": "active"
              },
              "progress": {
                "type": "number",
                "format": "float",
                "example": 50
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-28T14:26:39.000Z"
              }
            },
            "description": "API_Entities_BatchedBackgroundMigration model"
          }
        ]
      }
    },
    {
      "id": "put_admin_batched_background_migrations__id__pause",
      "operationId": "putApiV4AdminBatchedBackgroundMigrationsIdPause",
      "name": "Put Api V 4 Admin Batched Background Migrations Id Pause",
      "description": "Pause a batched background migration",
      "schema": {
        "tags": [
          "batched_background_migrations"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_admin_batched_background_migrations__id__pause/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/batched_background_migrations/{id}/pause"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The batched background migration id"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "The name of the database",
                    "default": "main",
                    "enum": [
                      "main",
                      "ci",
                      "embedding",
                      "main_clusterwide",
                      "geo"
                    ]
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_admin_batched_background_migrations__id__pause/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "job_class_name": {
                "type": "string",
                "example": "CopyColumnUsingBackgroundMigrationJob"
              },
              "table_name": {
                "type": "string",
                "example": "events"
              },
              "status": {
                "type": "string",
                "example": "active"
              },
              "progress": {
                "type": "number",
                "format": "float",
                "example": 50
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-28T14:26:39.000Z"
              }
            },
            "description": "API_Entities_BatchedBackgroundMigration model"
          }
        ]
      }
    },
    {
      "id": "get_admin_ci_variables__key_",
      "operationId": "getApiV4AdminCiVariablesKey",
      "name": "Get Api V 4 Admin Ci Variables Key",
      "description": "Get the details of a specific instance-level variable",
      "schema": {
        "tags": [
          "ci_variables"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_ci_variables__key_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/ci/variables/{key}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The key of a variable"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_admin_ci_variables__key_/output-200.schema.json",
            "type": "object",
            "properties": {
              "variable_type": {
                "type": "string",
                "example": "env_var"
              },
              "key": {
                "type": "string",
                "example": "TEST_VARIABLE_1"
              },
              "value": {
                "type": "string",
                "example": "TEST_1"
              },
              "protected": {
                "type": "boolean"
              },
              "masked": {
                "type": "boolean"
              },
              "raw": {
                "type": "boolean"
              },
              "environment_scope": {
                "type": "string",
                "example": "*"
              }
            },
            "description": "API_Entities_Ci_Variable model"
          }
        ]
      }
    },
    {
      "id": "delete_admin_ci_variables__key_",
      "operationId": "deleteApiV4AdminCiVariablesKey",
      "name": "Delete Api V 4 Admin Ci Variables Key",
      "description": "Delete an existing instance-level variable",
      "schema": {
        "tags": [
          "ci_variables"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_admin_ci_variables__key_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/ci/variables/{key}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The key of a variable"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/delete_admin_ci_variables__key_/output-204.schema.json",
            "type": "object",
            "properties": {
              "variable_type": {
                "type": "string",
                "example": "env_var"
              },
              "key": {
                "type": "string",
                "example": "TEST_VARIABLE_1"
              },
              "value": {
                "type": "string",
                "example": "TEST_1"
              },
              "protected": {
                "type": "boolean"
              },
              "masked": {
                "type": "boolean"
              },
              "raw": {
                "type": "boolean"
              },
              "environment_scope": {
                "type": "string",
                "example": "*"
              }
            },
            "description": "API_Entities_Ci_Variable model"
          }
        ]
      }
    },
    {
      "id": "put_admin_ci_variables__key_",
      "operationId": "putApiV4AdminCiVariablesKey",
      "name": "Put Api V 4 Admin Ci Variables Key",
      "description": "Update an instance-level variable",
      "schema": {
        "tags": [
          "ci_variables"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_admin_ci_variables__key_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/ci/variables/{key}"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The key of a variable"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The value of a variable"
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "Whether the variable is protected"
                  },
                  "masked": {
                    "type": "boolean",
                    "description": "Whether the variable is masked"
                  },
                  "raw": {
                    "type": "boolean",
                    "description": "Whether the variable will be expanded"
                  },
                  "variable_type": {
                    "type": "string",
                    "description": "The type of a variable. Available types are: env_var (default) and file",
                    "enum": [
                      "env_var",
                      "file"
                    ]
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_admin_ci_variables__key_/output-200.schema.json",
            "type": "object",
            "properties": {
              "variable_type": {
                "type": "string",
                "example": "env_var"
              },
              "key": {
                "type": "string",
                "example": "TEST_VARIABLE_1"
              },
              "value": {
                "type": "string",
                "example": "TEST_1"
              },
              "protected": {
                "type": "boolean"
              },
              "masked": {
                "type": "boolean"
              },
              "raw": {
                "type": "boolean"
              },
              "environment_scope": {
                "type": "string",
                "example": "*"
              }
            },
            "description": "API_Entities_Ci_Variable model"
          }
        ]
      }
    },
    {
      "id": "get_admin_ci_variables",
      "operationId": "getApiV4AdminCiVariables",
      "name": "Get Api V 4 Admin Ci Variables",
      "description": "List all instance-level variables",
      "schema": {
        "tags": [
          "ci_variables"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_ci_variables/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/ci/variables"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_admin_ci_variables/output-200.schema.json",
            "type": "object",
            "properties": {
              "variable_type": {
                "type": "string",
                "example": "env_var"
              },
              "key": {
                "type": "string",
                "example": "TEST_VARIABLE_1"
              },
              "value": {
                "type": "string",
                "example": "TEST_1"
              },
              "protected": {
                "type": "boolean"
              },
              "masked": {
                "type": "boolean"
              },
              "raw": {
                "type": "boolean"
              },
              "environment_scope": {
                "type": "string",
                "example": "*"
              }
            },
            "description": "API_Entities_Ci_Variable model"
          }
        ]
      }
    },
    {
      "id": "post_admin_ci_variables",
      "operationId": "postApiV4AdminCiVariables",
      "name": "Post Api V 4 Admin Ci Variables",
      "description": "Create a new instance-level variable",
      "schema": {
        "tags": [
          "ci_variables"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_admin_ci_variables/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/ci/variables"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key of the variable. Max 255 characters"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of a variable"
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "Whether the variable is protected"
                  },
                  "masked": {
                    "type": "boolean",
                    "description": "Whether the variable is masked"
                  },
                  "raw": {
                    "type": "boolean",
                    "description": "Whether the variable will be expanded"
                  },
                  "variable_type": {
                    "type": "string",
                    "description": "The type of a variable. Available types are: env_var (default) and file",
                    "enum": [
                      "env_var",
                      "file"
                    ]
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_admin_ci_variables/output-201.schema.json",
            "type": "object",
            "properties": {
              "variable_type": {
                "type": "string",
                "example": "env_var"
              },
              "key": {
                "type": "string",
                "example": "TEST_VARIABLE_1"
              },
              "value": {
                "type": "string",
                "example": "TEST_1"
              },
              "protected": {
                "type": "boolean"
              },
              "masked": {
                "type": "boolean"
              },
              "raw": {
                "type": "boolean"
              },
              "environment_scope": {
                "type": "string",
                "example": "*"
              }
            },
            "description": "API_Entities_Ci_Variable model"
          }
        ]
      }
    },
    {
      "id": "get_admin_databases__database_name__dictionary_tables__table_name_",
      "operationId": "getApiV4AdminDatabasesDatabaseNameDictionaryTablesTableName",
      "name": "Get Api V 4 Admin Databases Database Name Dictionary Tables Table Name",
      "description": "Retrieve dictionary details",
      "schema": {
        "tags": [
          "admin"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_databases__database_name__dictionary_tables__table_name_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/databases/{database_name}/dictionary/tables/{table_name}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "database_name",
                "table_name"
              ],
              "properties": {
                "database_name": {
                  "type": "string",
                  "enum": [
                    "main",
                    "ci"
                  ],
                  "description": "The database name"
                },
                "table_name": {
                  "type": "string",
                  "description": "The table name"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_admin_databases__database_name__dictionary_tables__table_name_/output-200.schema.json",
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "example": "users"
              },
              "feature_categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "database"
                }
              }
            },
            "description": "API_Entities_Dictionary_Table model"
          }
        ]
      }
    },
    {
      "id": "get_admin_clusters__cluster_id_",
      "operationId": "getApiV4AdminClustersClusterId",
      "name": "Get Api V 4 Admin Clusters Cluster Id",
      "description": "Get a single instance cluster",
      "schema": {
        "tags": [
          "clusters"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_clusters__cluster_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/clusters/{cluster_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "cluster_id"
              ],
              "properties": {
                "cluster_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The cluster ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_admin_clusters__cluster_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "managed": {
                "type": "string"
              },
              "provider_type": {
                "type": "string"
              },
              "platform_type": {
                "type": "string"
              },
              "environment_scope": {
                "type": "string"
              },
              "cluster_type": {
                "type": "string"
              },
              "namespace_per_environment": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "name": {
                    "type": "string",
                    "example": "Administrator"
                  },
                  "state": {
                    "type": "string",
                    "example": "active"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "https://gravatar.com/avatar/1"
                  },
                  "avatar_path": {
                    "type": "string",
                    "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "foo"
                        },
                        "value": {
                          "type": "string",
                          "example": "bar"
                        }
                      }
                    }
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/root"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "platform_kubernetes": {
                "type": "object",
                "properties": {
                  "api_url": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "authorization_type": {
                    "type": "string"
                  },
                  "ca_cert": {
                    "type": "string"
                  }
                }
              },
              "provider_gcp": {
                "type": "object",
                "properties": {
                  "cluster_id": {
                    "type": "string"
                  },
                  "status_name": {
                    "type": "string"
                  },
                  "gcp_project_id": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "machine_type": {
                    "type": "string"
                  },
                  "num_nodes": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  }
                }
              },
              "management_project": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "desc"
                  },
                  "name": {
                    "type": "string",
                    "example": "project1"
                  },
                  "name_with_namespace": {
                    "type": "string",
                    "example": "John Doe / project1"
                  },
                  "path": {
                    "type": "string",
                    "example": "project1"
                  },
                  "path_with_namespace": {
                    "type": "string",
                    "example": "namespace1/project1"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-07T04:27:17.016Z"
                  }
                }
              }
            },
            "description": "API_Entities_Cluster model"
          }
        ]
      }
    },
    {
      "id": "delete_admin_clusters__cluster_id_",
      "operationId": "deleteApiV4AdminClustersClusterId",
      "name": "Delete Api V 4 Admin Clusters Cluster Id",
      "description": "Delete instance cluster",
      "schema": {
        "tags": [
          "clusters"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_admin_clusters__cluster_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/clusters/{cluster_id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "cluster_id"
              ],
              "properties": {
                "cluster_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The cluster ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/delete_admin_clusters__cluster_id_/output-204.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "managed": {
                "type": "string"
              },
              "provider_type": {
                "type": "string"
              },
              "platform_type": {
                "type": "string"
              },
              "environment_scope": {
                "type": "string"
              },
              "cluster_type": {
                "type": "string"
              },
              "namespace_per_environment": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "name": {
                    "type": "string",
                    "example": "Administrator"
                  },
                  "state": {
                    "type": "string",
                    "example": "active"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "https://gravatar.com/avatar/1"
                  },
                  "avatar_path": {
                    "type": "string",
                    "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "foo"
                        },
                        "value": {
                          "type": "string",
                          "example": "bar"
                        }
                      }
                    }
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/root"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "platform_kubernetes": {
                "type": "object",
                "properties": {
                  "api_url": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "authorization_type": {
                    "type": "string"
                  },
                  "ca_cert": {
                    "type": "string"
                  }
                }
              },
              "provider_gcp": {
                "type": "object",
                "properties": {
                  "cluster_id": {
                    "type": "string"
                  },
                  "status_name": {
                    "type": "string"
                  },
                  "gcp_project_id": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "machine_type": {
                    "type": "string"
                  },
                  "num_nodes": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  }
                }
              },
              "management_project": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "desc"
                  },
                  "name": {
                    "type": "string",
                    "example": "project1"
                  },
                  "name_with_namespace": {
                    "type": "string",
                    "example": "John Doe / project1"
                  },
                  "path": {
                    "type": "string",
                    "example": "project1"
                  },
                  "path_with_namespace": {
                    "type": "string",
                    "example": "namespace1/project1"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-07T04:27:17.016Z"
                  }
                }
              }
            },
            "description": "API_Entities_Cluster model"
          }
        ]
      }
    },
    {
      "id": "put_admin_clusters__cluster_id_",
      "operationId": "putApiV4AdminClustersClusterId",
      "name": "Put Api V 4 Admin Clusters Cluster Id",
      "description": "Edit instance cluster",
      "schema": {
        "tags": [
          "clusters"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_admin_clusters__cluster_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/clusters/{cluster_id}"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "cluster_id"
              ],
              "properties": {
                "cluster_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The cluster ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Cluster name"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable Gitlab's connection to your Kubernetes cluster"
                  },
                  "environment_scope": {
                    "type": "string",
                    "description": "The associated environment to the cluster"
                  },
                  "namespace_per_environment": {
                    "type": "boolean",
                    "description": "Deploy each environment to a separate Kubernetes namespace",
                    "default": true
                  },
                  "domain": {
                    "type": "string",
                    "description": "Cluster base domain"
                  },
                  "management_project_id": {
                    "type": "integer",
                    "description": "The ID of the management project",
                    "format": "int32"
                  },
                  "managed": {
                    "type": "boolean",
                    "description": "Determines if GitLab will manage namespaces and service accounts for this cluster"
                  },
                  "platform_kubernetes_attributes[api_url]": {
                    "type": "string",
                    "description": "URL to access the Kubernetes API"
                  },
                  "platform_kubernetes_attributes[token]": {
                    "type": "string",
                    "description": "Token to authenticate against Kubernetes"
                  },
                  "platform_kubernetes_attributes[ca_cert]": {
                    "type": "string",
                    "description": "TLS certificate (needed if API is using a self-signed TLS certificate)"
                  },
                  "platform_kubernetes_attributes[namespace]": {
                    "type": "string",
                    "description": "Unique namespace related to Project"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_admin_clusters__cluster_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "managed": {
                "type": "string"
              },
              "provider_type": {
                "type": "string"
              },
              "platform_type": {
                "type": "string"
              },
              "environment_scope": {
                "type": "string"
              },
              "cluster_type": {
                "type": "string"
              },
              "namespace_per_environment": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "name": {
                    "type": "string",
                    "example": "Administrator"
                  },
                  "state": {
                    "type": "string",
                    "example": "active"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "https://gravatar.com/avatar/1"
                  },
                  "avatar_path": {
                    "type": "string",
                    "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "foo"
                        },
                        "value": {
                          "type": "string",
                          "example": "bar"
                        }
                      }
                    }
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/root"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "platform_kubernetes": {
                "type": "object",
                "properties": {
                  "api_url": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "authorization_type": {
                    "type": "string"
                  },
                  "ca_cert": {
                    "type": "string"
                  }
                }
              },
              "provider_gcp": {
                "type": "object",
                "properties": {
                  "cluster_id": {
                    "type": "string"
                  },
                  "status_name": {
                    "type": "string"
                  },
                  "gcp_project_id": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "machine_type": {
                    "type": "string"
                  },
                  "num_nodes": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  }
                }
              },
              "management_project": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "desc"
                  },
                  "name": {
                    "type": "string",
                    "example": "project1"
                  },
                  "name_with_namespace": {
                    "type": "string",
                    "example": "John Doe / project1"
                  },
                  "path": {
                    "type": "string",
                    "example": "project1"
                  },
                  "path_with_namespace": {
                    "type": "string",
                    "example": "namespace1/project1"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-07T04:27:17.016Z"
                  }
                }
              }
            },
            "description": "API_Entities_Cluster model"
          }
        ]
      }
    },
    {
      "id": "post_admin_clusters_add",
      "operationId": "postApiV4AdminClustersAdd",
      "name": "Post Api V 4 Admin Clusters Add",
      "description": "Add existing instance cluster",
      "schema": {
        "tags": [
          "clusters"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_admin_clusters_add/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/clusters/add"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "name",
                  "platform_kubernetes_attributes[api_url]",
                  "platform_kubernetes_attributes[token]"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Cluster name"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Determines if cluster is active or not, defaults to true",
                    "default": true
                  },
                  "environment_scope": {
                    "type": "string",
                    "description": "The associated environment to the cluster",
                    "default": "*"
                  },
                  "namespace_per_environment": {
                    "type": "boolean",
                    "description": "Deploy each environment to a separate Kubernetes namespace",
                    "default": true
                  },
                  "domain": {
                    "type": "string",
                    "description": "Cluster base domain"
                  },
                  "management_project_id": {
                    "type": "integer",
                    "description": "The ID of the management project",
                    "format": "int32"
                  },
                  "managed": {
                    "type": "boolean",
                    "description": "Determines if GitLab will manage namespaces and service accounts for this cluster, defaults to true",
                    "default": true
                  },
                  "platform_kubernetes_attributes[api_url]": {
                    "type": "string",
                    "description": "URL to access the Kubernetes API"
                  },
                  "platform_kubernetes_attributes[token]": {
                    "type": "string",
                    "description": "Token to authenticate against Kubernetes"
                  },
                  "platform_kubernetes_attributes[ca_cert]": {
                    "type": "string",
                    "description": "TLS certificate (needed if API is using a self-signed TLS certificate)"
                  },
                  "platform_kubernetes_attributes[namespace]": {
                    "type": "string",
                    "description": "Unique namespace related to Project"
                  },
                  "platform_kubernetes_attributes[authorization_type]": {
                    "type": "string",
                    "description": "Cluster authorization type, defaults to RBAC",
                    "default": "rbac",
                    "enum": [
                      "unknown_authorization",
                      "rbac",
                      "abac"
                    ]
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_admin_clusters_add/output-201.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "managed": {
                "type": "string"
              },
              "provider_type": {
                "type": "string"
              },
              "platform_type": {
                "type": "string"
              },
              "environment_scope": {
                "type": "string"
              },
              "cluster_type": {
                "type": "string"
              },
              "namespace_per_environment": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "name": {
                    "type": "string",
                    "example": "Administrator"
                  },
                  "state": {
                    "type": "string",
                    "example": "active"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "https://gravatar.com/avatar/1"
                  },
                  "avatar_path": {
                    "type": "string",
                    "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "foo"
                        },
                        "value": {
                          "type": "string",
                          "example": "bar"
                        }
                      }
                    }
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/root"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "platform_kubernetes": {
                "type": "object",
                "properties": {
                  "api_url": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "authorization_type": {
                    "type": "string"
                  },
                  "ca_cert": {
                    "type": "string"
                  }
                }
              },
              "provider_gcp": {
                "type": "object",
                "properties": {
                  "cluster_id": {
                    "type": "string"
                  },
                  "status_name": {
                    "type": "string"
                  },
                  "gcp_project_id": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "machine_type": {
                    "type": "string"
                  },
                  "num_nodes": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  }
                }
              },
              "management_project": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "desc"
                  },
                  "name": {
                    "type": "string",
                    "example": "project1"
                  },
                  "name_with_namespace": {
                    "type": "string",
                    "example": "John Doe / project1"
                  },
                  "path": {
                    "type": "string",
                    "example": "project1"
                  },
                  "path_with_namespace": {
                    "type": "string",
                    "example": "namespace1/project1"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-07T04:27:17.016Z"
                  }
                }
              }
            },
            "description": "API_Entities_Cluster model"
          }
        ]
      }
    },
    {
      "id": "get_admin_clusters",
      "operationId": "getApiV4AdminClusters",
      "name": "Get Api V 4 Admin Clusters",
      "description": "List instance clusters",
      "schema": {
        "tags": [
          "clusters"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_admin_clusters/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/clusters"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_admin_migrations__timestamp__mark",
      "operationId": "postApiV4AdminMigrationsTimestampMark",
      "name": "Post Api V 4 Admin Migrations Timestamp Mark",
      "description": "Mark the migration as successfully executed",
      "schema": {
        "tags": [
          "migrations"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_admin_migrations__timestamp__mark/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/admin/migrations/{timestamp}/mark"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "timestamp"
              ],
              "properties": {
                "timestamp": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The migration version timestamp"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "The name of the database",
                    "default": "main",
                    "enum": [
                      "main",
                      "ci",
                      "embedding",
                      "main_clusterwide",
                      "geo"
                    ]
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "delete_applications__id_",
      "operationId": "deleteApiV4ApplicationsId",
      "name": "Delete Api V 4 Applications Id",
      "description": "Delete an application",
      "schema": {
        "tags": [
          "applications"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_applications__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/applications/{id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of the application (not the application_id)"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_applications",
      "operationId": "getApiV4Applications",
      "name": "Get Api V 4 Applications",
      "description": "Get applications",
      "schema": {
        "tags": [
          "applications"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_applications/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/applications"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_applications",
      "operationId": "postApiV4Applications",
      "name": "Post Api V 4 Applications",
      "description": "Create a new application",
      "schema": {
        "tags": [
          "applications"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_applications/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/applications"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "name",
                  "redirect_uri",
                  "scopes"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the application."
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "Redirect URI of the application."
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Scopes of the application. You can specify multiple scopes by separating\\\n                                 each scope using a space"
                  },
                  "confidential": {
                    "type": "boolean",
                    "description": "The application is used where the client secret can be kept confidential. Native mobile apps \\\n                        and Single Page Apps are considered non-confidential. Defaults to true if not supplied",
                    "default": true
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_applications/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "application_id": {
                "type": "string",
                "example": "5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737"
              },
              "application_name": {
                "type": "string",
                "example": "MyApplication"
              },
              "callback_url": {
                "type": "string",
                "example": "https://redirect.uri"
              },
              "confidential": {
                "type": "boolean",
                "example": true
              },
              "secret": {
                "type": "string",
                "example": "ee1dd64b6adc89cf7e2c23099301ccc2c61b441064e9324d963c46902a85ec34"
              }
            },
            "description": "API_Entities_ApplicationWithSecret model"
          }
        ]
      }
    },
    {
      "id": "get_avatar",
      "operationId": "getApiV4Avatar",
      "name": "Get Api V 4 Avatar",
      "description": "Return avatar url for a user",
      "schema": {
        "tags": [
          "avatar"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_avatar/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/avatar"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Public email address of the user"
                },
                "size": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Single pixel dimension for Gravatar images"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_avatar/output-200.schema.json",
            "type": "object",
            "properties": {
              "avatar_url": {
                "type": "string"
              }
            },
            "description": "API_Entities_Avatar model"
          }
        ]
      }
    },
    {
      "id": "get_broadcast_messages__id_",
      "operationId": "getApiV4BroadcastMessagesId",
      "name": "Get Api V 4 Broadcast Messages Id",
      "description": "Get a specific broadcast message",
      "schema": {
        "tags": [
          "broadcast_messages"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_broadcast_messages__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/broadcast_messages/{id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Broadcast message ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_broadcast_messages__id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "starts_at": {
                "type": "string"
              },
              "ends_at": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "font": {
                "type": "string"
              },
              "target_access_levels": {
                "type": "string"
              },
              "target_path": {
                "type": "string"
              },
              "broadcast_type": {
                "type": "string"
              },
              "dismissable": {
                "type": "string"
              },
              "active": {
                "type": "string"
              }
            },
            "description": "API_Entities_BroadcastMessage model"
          }
        ]
      }
    },
    {
      "id": "delete_broadcast_messages__id_",
      "operationId": "deleteApiV4BroadcastMessagesId",
      "name": "Delete Api V 4 Broadcast Messages Id",
      "description": "Delete a broadcast message",
      "schema": {
        "tags": [
          "broadcast_messages"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/delete_broadcast_messages__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/broadcast_messages/{id}"
            },
            "method": {
              "type": "string",
              "const": "delete"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Broadcast message ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/delete_broadcast_messages__id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "starts_at": {
                "type": "string"
              },
              "ends_at": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "font": {
                "type": "string"
              },
              "target_access_levels": {
                "type": "string"
              },
              "target_path": {
                "type": "string"
              },
              "broadcast_type": {
                "type": "string"
              },
              "dismissable": {
                "type": "string"
              },
              "active": {
                "type": "string"
              }
            },
            "description": "API_Entities_BroadcastMessage model"
          }
        ]
      }
    },
    {
      "id": "put_broadcast_messages__id_",
      "operationId": "putApiV4BroadcastMessagesId",
      "name": "Put Api V 4 Broadcast Messages Id",
      "description": "Update a broadcast message",
      "schema": {
        "tags": [
          "broadcast_messages"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_broadcast_messages__id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/broadcast_messages/{id}"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Broadcast message ID"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message to display"
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Starting time",
                    "format": "date-time"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Ending time",
                    "format": "date-time"
                  },
                  "color": {
                    "type": "string",
                    "description": "Background color"
                  },
                  "font": {
                    "type": "string",
                    "description": "Foreground color"
                  },
                  "target_access_levels": {
                    "type": "array",
                    "description": "Target user roles",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        10,
                        20,
                        30,
                        40,
                        50
                      ]
                    }
                  },
                  "target_path": {
                    "type": "string",
                    "description": "Target path"
                  },
                  "broadcast_type": {
                    "type": "string",
                    "description": "Broadcast Type",
                    "enum": [
                      "banner",
                      "notification"
                    ]
                  },
                  "dismissable": {
                    "type": "boolean",
                    "description": "Is dismissable"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_broadcast_messages__id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "starts_at": {
                "type": "string"
              },
              "ends_at": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "font": {
                "type": "string"
              },
              "target_access_levels": {
                "type": "string"
              },
              "target_path": {
                "type": "string"
              },
              "broadcast_type": {
                "type": "string"
              },
              "dismissable": {
                "type": "string"
              },
              "active": {
                "type": "string"
              }
            },
            "description": "API_Entities_BroadcastMessage model"
          }
        ]
      }
    },
    {
      "id": "get_broadcast_messages",
      "operationId": "getApiV4BroadcastMessages",
      "name": "Get Api V 4 Broadcast Messages",
      "description": "Get all broadcast messages",
      "schema": {
        "tags": [
          "broadcast_messages"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_broadcast_messages/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/broadcast_messages"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_broadcast_messages/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "starts_at": {
                "type": "string"
              },
              "ends_at": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "font": {
                "type": "string"
              },
              "target_access_levels": {
                "type": "string"
              },
              "target_path": {
                "type": "string"
              },
              "broadcast_type": {
                "type": "string"
              },
              "dismissable": {
                "type": "string"
              },
              "active": {
                "type": "string"
              }
            },
            "description": "API_Entities_BroadcastMessage model"
          }
        ]
      }
    },
    {
      "id": "post_broadcast_messages",
      "operationId": "postApiV4BroadcastMessages",
      "name": "Post Api V 4 Broadcast Messages",
      "description": "Create a broadcast message",
      "schema": {
        "tags": [
          "broadcast_messages"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_broadcast_messages/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/broadcast_messages"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "message"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message to display"
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Starting time",
                    "format": "date-time"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Ending time",
                    "format": "date-time"
                  },
                  "color": {
                    "type": "string",
                    "description": "Background color"
                  },
                  "font": {
                    "type": "string",
                    "description": "Foreground color"
                  },
                  "target_access_levels": {
                    "type": "array",
                    "description": "Target user roles",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        10,
                        20,
                        30,
                        40,
                        50
                      ]
                    }
                  },
                  "target_path": {
                    "type": "string",
                    "description": "Target path"
                  },
                  "broadcast_type": {
                    "type": "string",
                    "description": "Broadcast type. Defaults to banner",
                    "enum": [
                      "banner",
                      "notification"
                    ]
                  },
                  "dismissable": {
                    "type": "boolean",
                    "description": "Is dismissable"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_broadcast_messages/output-201.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "starts_at": {
                "type": "string"
              },
              "ends_at": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "font": {
                "type": "string"
              },
              "target_access_levels": {
                "type": "string"
              },
              "target_path": {
                "type": "string"
              },
              "broadcast_type": {
                "type": "string"
              },
              "dismissable": {
                "type": "string"
              },
              "active": {
                "type": "string"
              }
            },
            "description": "API_Entities_BroadcastMessage model"
          }
        ]
      }
    },
    {
      "id": "get_bulk_imports__import_id__entities__entity_id_",
      "operationId": "getApiV4BulkImportsImportIdEntitiesEntityId",
      "name": "Get Api V 4 Bulk Imports Import Id Entities Entity Id",
      "description": "Get GitLab Migration entity details",
      "schema": {
        "tags": [
          "bulk_imports"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports__import_id__entities__entity_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/bulk_imports/{import_id}/entities/{entity_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "import_id",
                "entity_id"
              ],
              "properties": {
                "import_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of user's GitLab Migration"
                },
                "entity_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of GitLab Migration entity"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports__import_id__entities__entity_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "bulk_import_id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "status": {
                "type": "string",
                "example": "created",
                "enum": [
                  "created",
                  "started",
                  "finished",
                  "timeout",
                  "failed"
                ]
              },
              "entity_type": {
                "type": "string",
                "enum": [
                  "group",
                  "project"
                ]
              },
              "source_full_path": {
                "type": "string",
                "example": "source_group"
              },
              "destination_full_path": {
                "type": "string",
                "example": "some_group/source_project"
              },
              "destination_name": {
                "type": "string",
                "example": "destination_slug"
              },
              "destination_slug": {
                "type": "string",
                "example": "destination_slug"
              },
              "destination_namespace": {
                "type": "string",
                "example": "destination_path"
              },
              "parent_id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "namespace_id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "project_id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-05-28T11:42:42.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-05-28T11:42:42.000Z"
              },
              "failures": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "relation": {
                      "type": "string",
                      "example": "group"
                    },
                    "step": {
                      "type": "string",
                      "example": "extractor"
                    },
                    "exception_message": {
                      "type": "string",
                      "example": "error message"
                    },
                    "exception_class": {
                      "type": "string",
                      "example": "Exception"
                    },
                    "correlation_id_value": {
                      "type": "string",
                      "example": "dfcf583058ed4508e4c7c617bd7f0edd"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2012-05-28T11:42:42.000Z"
                    },
                    "pipeline_class": {
                      "type": "string",
                      "example": "BulkImports::Groups::Pipelines::GroupPipeline"
                    },
                    "pipeline_step": {
                      "type": "string",
                      "example": "extractor"
                    }
                  }
                }
              },
              "migrate_projects": {
                "type": "boolean",
                "example": true
              }
            },
            "description": "API_Entities_BulkImports model"
          }
        ]
      }
    },
    {
      "id": "get_bulk_imports__import_id__entities",
      "operationId": "getApiV4BulkImportsImportIdEntities",
      "name": "Get Api V 4 Bulk Imports Import Id Entities",
      "description": "List GitLab Migration entities",
      "schema": {
        "tags": [
          "bulk_imports"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports__import_id__entities/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/bulk_imports/{import_id}/entities"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "created",
                    "started",
                    "finished",
                    "timeout",
                    "failed"
                  ],
                  "description": "Return import entities with specified status"
                },
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "import_id"
              ],
              "properties": {
                "import_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of user's GitLab Migration"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_bulk_imports__import_id_",
      "operationId": "getApiV4BulkImportsImportId",
      "name": "Get Api V 4 Bulk Imports Import Id",
      "description": "Get GitLab Migration details",
      "schema": {
        "tags": [
          "bulk_imports"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports__import_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/bulk_imports/{import_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "import_id"
              ],
              "properties": {
                "import_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of user's GitLab Migration"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports__import_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "status": {
                "type": "string",
                "example": "finished",
                "enum": [
                  "created",
                  "started",
                  "finished",
                  "timeout",
                  "failed"
                ]
              },
              "source_type": {
                "type": "string",
                "example": "gitlab"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-05-28T11:42:42.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-05-28T11:42:42.000Z"
              }
            },
            "description": "API_Entities_BulkImport model"
          }
        ]
      }
    },
    {
      "id": "get_bulk_imports_entities",
      "operationId": "getApiV4BulkImportsEntities",
      "name": "Get Api V 4 Bulk Imports Entities",
      "description": "List all GitLab Migrations' entities",
      "schema": {
        "tags": [
          "bulk_imports"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports_entities/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/bulk_imports/entities"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                },
                "sort": {
                  "type": "string",
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "description": "Return GitLab Migrations sorted in created by `asc` or `desc` order."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "created",
                    "started",
                    "finished",
                    "timeout",
                    "failed"
                  ],
                  "description": "Return all GitLab Migrations' entities with specified status"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_bulk_imports",
      "operationId": "getApiV4BulkImports",
      "name": "Get Api V 4 Bulk Imports",
      "description": "List all GitLab Migrations",
      "schema": {
        "tags": [
          "bulk_imports"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_bulk_imports/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/bulk_imports"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "description": "Current page number"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "description": "Number of items per page"
                },
                "sort": {
                  "type": "string",
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "description": "Return GitLab Migrations sorted in created by `asc` or `desc` order."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "created",
                    "started",
                    "finished",
                    "timeout",
                    "failed"
                  ],
                  "description": "Return GitLab Migrations with specified status"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "post_bulk_imports",
      "operationId": "postApiV4BulkImports",
      "name": "Post Api V 4 Bulk Imports",
      "description": "Start a new GitLab Migration",
      "schema": {
        "tags": [
          "bulk_imports"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_bulk_imports/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/bulk_imports"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/x-www-form-urlencoded"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "configuration[access_token]",
                  "configuration[url]",
                  "entities[destination_namespace]",
                  "entities[source_full_path]",
                  "entities[source_type]"
                ],
                "properties": {
                  "configuration[url]": {
                    "type": "string",
                    "description": "Source GitLab instance URL"
                  },
                  "configuration[access_token]": {
                    "type": "string",
                    "description": "Access token to the source GitLab instance"
                  },
                  "entities[source_type]": {
                    "type": "array",
                    "description": "Source entity type",
                    "items": {
                      "type": "string",
                      "enum": [
                        "group_entity",
                        "project_entity"
                      ]
                    }
                  },
                  "entities[source_full_path]": {
                    "type": "array",
                    "description": "Relative path of the source entity to import",
                    "items": {
                      "type": "string"
                    }
                  },
                  "entities[destination_namespace]": {
                    "type": "array",
                    "description": "Destination namespace for the entity",
                    "items": {
                      "type": "string"
                    }
                  },
                  "entities[destination_slug]": {
                    "type": "array",
                    "description": "Destination slug for the entity",
                    "items": {
                      "type": "string"
                    }
                  },
                  "entities[destination_name]": {
                    "type": "array",
                    "description": "Deprecated: Use :destination_slug instead. Destination slug for the entity",
                    "items": {
                      "type": "string"
                    }
                  },
                  "entities[migrate_projects]": {
                    "type": "array",
                    "description": "Indicates group migration should include nested projects",
                    "items": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/post_bulk_imports/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "status": {
                "type": "string",
                "example": "finished",
                "enum": [
                  "created",
                  "started",
                  "finished",
                  "timeout",
                  "failed"
                ]
              },
              "source_type": {
                "type": "string",
                "example": "gitlab"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-05-28T11:42:42.000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-05-28T11:42:42.000Z"
              }
            },
            "description": "API_Entities_BulkImport model"
          }
        ]
      }
    },
    {
      "id": "get_application_appearance",
      "operationId": "getApiV4ApplicationAppearance",
      "name": "Get Api V 4 Application Appearance",
      "description": "Get the current appearance",
      "schema": {
        "tags": [
          "application"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_application_appearance/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/application/appearance"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_application_appearance/output-200.schema.json",
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "pwa_name": {
                "type": "string"
              },
              "pwa_short_name": {
                "type": "string"
              },
              "pwa_description": {
                "type": "string"
              },
              "logo": {
                "type": "string"
              },
              "pwa_icon": {
                "type": "string"
              },
              "header_logo": {
                "type": "string"
              },
              "favicon": {
                "type": "string"
              },
              "new_project_guidelines": {
                "type": "string"
              },
              "profile_image_guidelines": {
                "type": "string"
              },
              "header_message": {
                "type": "string"
              },
              "footer_message": {
                "type": "string"
              },
              "message_background_color": {
                "type": "string"
              },
              "message_font_color": {
                "type": "string"
              },
              "email_header_and_footer_enabled": {
                "type": "string"
              }
            },
            "description": "API_Entities_Appearance model"
          }
        ]
      }
    },
    {
      "id": "put_application_appearance",
      "operationId": "putApiV4ApplicationAppearance",
      "name": "Put Api V 4 Application Appearance",
      "description": "Modify appearance",
      "schema": {
        "tags": [
          "application"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_application_appearance/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/application/appearance"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "multipart/form-data"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Instance title on the sign in / sign up page"
                  },
                  "description": {
                    "type": "string",
                    "description": "Markdown text shown on the sign in / sign up page"
                  },
                  "pwa_name": {
                    "type": "string",
                    "description": "Name of the Progressive Web App"
                  },
                  "pwa_short_name": {
                    "type": "string",
                    "description": "Optional, short name for Progressive Web App"
                  },
                  "pwa_description": {
                    "type": "string",
                    "description": "An explanation of what the Progressive Web App does"
                  },
                  "logo": {
                    "type": "string",
                    "description": "Instance image used on the sign in / sign up page",
                    "format": "binary"
                  },
                  "pwa_icon": {
                    "type": "string",
                    "description": "Icon used for Progressive Web App",
                    "format": "binary"
                  },
                  "header_logo": {
                    "type": "string",
                    "description": "Instance image used for the main navigation bar",
                    "format": "binary"
                  },
                  "favicon": {
                    "type": "string",
                    "description": "Instance favicon in .ico/.png format",
                    "format": "binary"
                  },
                  "new_project_guidelines": {
                    "type": "string",
                    "description": "Markdown text shown on the new project page"
                  },
                  "profile_image_guidelines": {
                    "type": "string",
                    "description": "Markdown text shown on the profile page below Public Avatar"
                  },
                  "header_message": {
                    "type": "string",
                    "description": "Message within the system header bar"
                  },
                  "footer_message": {
                    "type": "string",
                    "description": "Message within the system footer bar"
                  },
                  "message_background_color": {
                    "type": "string",
                    "description": "Background color for the system header / footer bar"
                  },
                  "message_font_color": {
                    "type": "string",
                    "description": "Font color for the system header / footer bar"
                  },
                  "email_header_and_footer_enabled": {
                    "type": "boolean",
                    "description": "Add header and footer to all outgoing emails if enabled"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_application_appearance/output-200.schema.json",
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "pwa_name": {
                "type": "string"
              },
              "pwa_short_name": {
                "type": "string"
              },
              "pwa_description": {
                "type": "string"
              },
              "logo": {
                "type": "string"
              },
              "pwa_icon": {
                "type": "string"
              },
              "header_logo": {
                "type": "string"
              },
              "favicon": {
                "type": "string"
              },
              "new_project_guidelines": {
                "type": "string"
              },
              "profile_image_guidelines": {
                "type": "string"
              },
              "header_message": {
                "type": "string"
              },
              "footer_message": {
                "type": "string"
              },
              "message_background_color": {
                "type": "string"
              },
              "message_font_color": {
                "type": "string"
              },
              "email_header_and_footer_enabled": {
                "type": "string"
              }
            },
            "description": "API_Entities_Appearance model"
          }
        ]
      }
    },
    {
      "id": "get_application_plan_limits",
      "operationId": "getApiV4ApplicationPlanLimits",
      "name": "Get Api V 4 Application Plan Limits",
      "description": "Get current plan limits",
      "schema": {
        "tags": [
          "plan_limits"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_application_plan_limits/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/application/plan_limits"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "plan_name": {
                  "type": "string",
                  "default": "default",
                  "enum": [
                    "default",
                    "free",
                    "bronze",
                    "silver",
                    "premium",
                    "gold",
                    "ultimate",
                    "ultimate_trial",
                    "premium_trial",
                    "opensource"
                  ],
                  "description": "Name of the plan to get the limits from. Default: default."
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_application_plan_limits/output-200.schema.json",
            "type": "object",
            "properties": {
              "ci_pipeline_size": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "ci_active_jobs": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "ci_project_subscriptions": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "ci_pipeline_schedules": {
                "type": "integer",
                "format": "int32",
                "example": 10
              },
              "ci_needs_size_limit": {
                "type": "integer",
                "format": "int32",
                "example": 50
              },
              "ci_registered_group_runners": {
                "type": "integer",
                "format": "int32",
                "example": 1000
              },
              "ci_registered_project_runners": {
                "type": "integer",
                "format": "int32",
                "example": 1000
              },
              "conan_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 3221225472
              },
              "enforcement_limit": {
                "type": "integer",
                "format": "int32",
                "example": 15000
              },
              "generic_packages_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 5368709120
              },
              "helm_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 5242880
              },
              "limits_history": {
                "type": "object",
                "properties": {},
                "example": "{\"enforcement_limit\"=>[{\"timestamp\"=>1686909124, \"user_id\"=>1, \"username\"=>\"x\", \"value\"=>5}],\n                   \"notification_limit\"=>[{\"timestamp\"=>1686909124, \"user_id\"=>2, \"username\"=>\"y\", \"value\"=>7}]}"
              },
              "maven_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 3221225472
              },
              "notification_limit": {
                "type": "integer",
                "format": "int32",
                "example": 15000
              },
              "npm_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 524288000
              },
              "nuget_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 524288000
              },
              "pipeline_hierarchy_size": {
                "type": "integer",
                "format": "int32",
                "example": 1000
              },
              "pypi_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 3221225472
              },
              "terraform_module_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 1073741824
              },
              "storage_size_limit": {
                "type": "integer",
                "format": "int32",
                "example": 15000
              }
            },
            "description": "API_Entities_PlanLimit model"
          }
        ]
      }
    },
    {
      "id": "put_application_plan_limits",
      "operationId": "putApiV4ApplicationPlanLimits",
      "name": "Put Api V 4 Application Plan Limits",
      "description": "Change plan limits",
      "schema": {
        "tags": [
          "plan_limits"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/put_application_plan_limits/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/application/plan_limits"
            },
            "method": {
              "type": "string",
              "const": "put"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "const": "application/json"
                }
              }
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {
                "required": [
                  "plan_name"
                ],
                "properties": {
                  "plan_name": {
                    "type": "string",
                    "description": "Name of the plan to update",
                    "enum": [
                      "default",
                      "free",
                      "bronze",
                      "silver",
                      "premium",
                      "gold",
                      "ultimate",
                      "ultimate_trial",
                      "premium_trial",
                      "opensource"
                    ]
                  },
                  "ci_pipeline_size": {
                    "type": "integer",
                    "description": "Maximum number of jobs in a single pipeline",
                    "format": "int32"
                  },
                  "ci_active_jobs": {
                    "type": "integer",
                    "description": "Total number of jobs in currently active pipelines",
                    "format": "int32"
                  },
                  "ci_project_subscriptions": {
                    "type": "integer",
                    "description": "Maximum number of pipeline subscriptions to and from a project",
                    "format": "int32"
                  },
                  "ci_pipeline_schedules": {
                    "type": "integer",
                    "description": "Maximum number of pipeline schedules",
                    "format": "int32"
                  },
                  "ci_needs_size_limit": {
                    "type": "integer",
                    "description": "Maximum number of needs dependencies that a job can have",
                    "format": "int32"
                  },
                  "ci_registered_group_runners": {
                    "type": "integer",
                    "description": "Maximum number of runners registered per group",
                    "format": "int32"
                  },
                  "ci_registered_project_runners": {
                    "type": "integer",
                    "description": "Maximum number of runners registered per project",
                    "format": "int32"
                  },
                  "conan_max_file_size": {
                    "type": "integer",
                    "description": "Maximum Conan package file size in bytes",
                    "format": "int32"
                  },
                  "enforcement_limit": {
                    "type": "integer",
                    "description": "Maximum storage size for the root namespace enforcement in MiB",
                    "format": "int32"
                  },
                  "generic_packages_max_file_size": {
                    "type": "integer",
                    "description": "Maximum generic package file size in bytes",
                    "format": "int32"
                  },
                  "helm_max_file_size": {
                    "type": "integer",
                    "description": "Maximum Helm chart file size in bytes",
                    "format": "int32"
                  },
                  "maven_max_file_size": {
                    "type": "integer",
                    "description": "Maximum Maven package file size in bytes",
                    "format": "int32"
                  },
                  "notification_limit": {
                    "type": "integer",
                    "description": "Maximum storage size for the root namespace notifications in MiB",
                    "format": "int32"
                  },
                  "npm_max_file_size": {
                    "type": "integer",
                    "description": "Maximum NPM package file size in bytes",
                    "format": "int32"
                  },
                  "nuget_max_file_size": {
                    "type": "integer",
                    "description": "Maximum NuGet package file size in bytes",
                    "format": "int32"
                  },
                  "pypi_max_file_size": {
                    "type": "integer",
                    "description": "Maximum PyPI package file size in bytes",
                    "format": "int32"
                  },
                  "terraform_module_max_file_size": {
                    "type": "integer",
                    "description": "Maximum Terraform Module package file size in bytes",
                    "format": "int32"
                  },
                  "storage_size_limit": {
                    "type": "integer",
                    "description": "Maximum storage size for the root namespace in MiB",
                    "format": "int32"
                  },
                  "pipeline_hierarchy_size": {
                    "type": "integer",
                    "description": "Maximum number of downstream pipelines in a pipeline's hierarchy tree",
                    "format": "int32"
                  }
                }
              }
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/put_application_plan_limits/output-200.schema.json",
            "type": "object",
            "properties": {
              "ci_pipeline_size": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "ci_active_jobs": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "ci_project_subscriptions": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "ci_pipeline_schedules": {
                "type": "integer",
                "format": "int32",
                "example": 10
              },
              "ci_needs_size_limit": {
                "type": "integer",
                "format": "int32",
                "example": 50
              },
              "ci_registered_group_runners": {
                "type": "integer",
                "format": "int32",
                "example": 1000
              },
              "ci_registered_project_runners": {
                "type": "integer",
                "format": "int32",
                "example": 1000
              },
              "conan_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 3221225472
              },
              "enforcement_limit": {
                "type": "integer",
                "format": "int32",
                "example": 15000
              },
              "generic_packages_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 5368709120
              },
              "helm_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 5242880
              },
              "limits_history": {
                "type": "object",
                "properties": {},
                "example": "{\"enforcement_limit\"=>[{\"timestamp\"=>1686909124, \"user_id\"=>1, \"username\"=>\"x\", \"value\"=>5}],\n                   \"notification_limit\"=>[{\"timestamp\"=>1686909124, \"user_id\"=>2, \"username\"=>\"y\", \"value\"=>7}]}"
              },
              "maven_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 3221225472
              },
              "notification_limit": {
                "type": "integer",
                "format": "int32",
                "example": 15000
              },
              "npm_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 524288000
              },
              "nuget_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 524288000
              },
              "pipeline_hierarchy_size": {
                "type": "integer",
                "format": "int32",
                "example": 1000
              },
              "pypi_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 3221225472
              },
              "terraform_module_max_file_size": {
                "type": "integer",
                "format": "int32",
                "example": 1073741824
              },
              "storage_size_limit": {
                "type": "integer",
                "format": "int32",
                "example": 15000
              }
            },
            "description": "API_Entities_PlanLimit model"
          }
        ]
      }
    },
    {
      "id": "get_metadata",
      "operationId": "getApiV4Metadata",
      "name": "Get Api V 4 Metadata",
      "description": "Retrieve metadata information for this GitLab instance",
      "schema": {
        "tags": [
          "metadata"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_metadata/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/metadata"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_metadata/output-200.schema.json",
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "example": "15.2-pre"
              },
              "revision": {
                "type": "string",
                "example": "c401a659d0c"
              },
              "kas": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "externalUrl": {
                    "type": "string",
                    "example": "grpc://gitlab.example.com:8150"
                  },
                  "version": {
                    "type": "string",
                    "example": "15.0.0"
                  }
                }
              },
              "enterprise": {
                "type": "boolean"
              }
            },
            "description": "API_Entities_Metadata model"
          }
        ]
      }
    },
    {
      "id": "get_version",
      "operationId": "getApiV4Version",
      "name": "Get Api V 4 Version",
      "description": "Retrieves version information for the GitLab instance",
      "schema": {
        "tags": [
          "metadata"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_version/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/version"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_version/output-200.schema.json",
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "example": "15.2-pre"
              },
              "revision": {
                "type": "string",
                "example": "c401a659d0c"
              },
              "kas": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "externalUrl": {
                    "type": "string",
                    "example": "grpc://gitlab.example.com:8150"
                  },
                  "version": {
                    "type": "string",
                    "example": "15.0.0"
                  }
                }
              },
              "enterprise": {
                "type": "boolean"
              }
            },
            "description": "API_Entities_Metadata model"
          }
        ]
      }
    },
    {
      "id": "get_projects__id__jobs",
      "operationId": "listProjectJobs",
      "name": "List Project Jobs",
      "description": "List jobs for a project",
      "schema": {
        "tags": [
          "jobs"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__jobs/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/jobs"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "scope": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Return all jobs with the specified statuses"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The ID of the project"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    },
    {
      "id": "get_projects__id__jobs__job_id_",
      "operationId": "getSingleJob",
      "name": "Get Single Job",
      "description": "Get a single job by ID",
      "schema": {
        "tags": [
          "jobs"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__jobs__job_id_/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/jobs/{job_id}"
            },
            "method": {
              "type": "string",
              "const": "get"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {}
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "job_id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The ID of the project"
                },
                "job_id": {
                  "type": "integer",
                  "description": "The ID of the job"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": [
          {
            "$schema": "$ref:schema",
            "$id": "https://datahub.com/integration/GitLab-API/get_projects__id__jobs__job_id_/output-200.schema.json",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The ID of the job"
              },
              "name": {
                "type": "string",
                "description": "The name of the job"
              },
              "status": {
                "type": "string",
                "description": "The current status of the job"
              },
              "stage": {
                "type": "string",
                "description": "The stage of the job in the CI/CD pipeline"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2016-01-11T10:13:33.506Z",
                "description": "The creation time of the job"
              },
              "started_at": {
                "type": "string",
                "format": "date-time",
                "example": "2016-01-11T10:13:33.506Z",
                "description": "The start time of the job"
              },
              "finished_at": {
                "type": "string",
                "format": "date-time",
                "example": "2016-01-11T10:13:33.506Z",
                "description": "The finish time of the job"
              },
              "commit": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2695effb5807a22ff3d138d593fd856244e155e7"
                  },
                  "short_id": {
                    "type": "string",
                    "example": "2695effb"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-26T09:08:53.000Z"
                  },
                  "parent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "message": {
                    "type": "string",
                    "example": "Initial commit"
                  },
                  "author_name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "author_email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "authored_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "committer_name": {
                    "type": "string",
                    "example": "Jack Smith"
                  },
                  "committer_email": {
                    "type": "string",
                    "example": "jack@example.com"
                  },
                  "committed_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-05-28T11:42:42.000Z"
                  },
                  "trailers": {
                    "type": "object",
                    "properties": {},
                    "example": "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
                  }
                }
              },
              "archived": {
                "type": "boolean",
                "description": "Indicates if the job is archived"
              },
              "allow_failure": {
                "type": "boolean",
                "description": "Indicates if the job is allowed to fail"
              },
              "erased_at": {
                "type": "string",
                "format": "date-time",
                "example": "2016-01-11T10:13:33.506Z",
                "description": "The time when the job was erased, if applicable"
              },
              "duration": {
                "type": "integer",
                "description": "The duration of the job in seconds"
              },
              "queued_duration": {
                "type": "number",
                "description": "The duration the job was queued before execution, in seconds"
              },
              "ref": {
                "type": "string",
                "description": "The reference for the job"
              },
              "artifacts": {
                "type": "array",
                "description": "The artifacts produced by the job"
              },
              "tag": {
                "type": "boolean",
                "description": "Indicates if the job is tagged"
              },
              "web_url": {
                "type": "string",
                "description": "The URL for accessing the job in the web interface"
              },
              "project": {
                "type": "object",
                "properties": {
                  "ci_job_token_scope_enabled": {
                    "type": "boolean",
                    "description": "Indicates if the CI/CD job token scope setting is enabled for the project"
                  }
                }
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "name": {
                    "type": "string",
                    "example": "Administrator"
                  },
                  "state": {
                    "type": "string",
                    "example": "active"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "https://gravatar.com/avatar/1"
                  },
                  "avatar_path": {
                    "type": "string",
                    "example": "/user/avatar/28/The-Big-Lebowski-400-400.png"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "foo"
                        },
                        "value": {
                          "type": "string",
                          "example": "bar"
                        }
                      }
                    }
                  },
                  "web_url": {
                    "type": "string",
                    "example": "https://gitlab.example.com/root"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "description": "The user that started the job"
              }
            },
            "description": "API_Entities_Job model"
          }
        ]
      }
    },
    {
      "id": "post_projects__id__jobs__job_id__play",
      "operationId": "triggerManualJob",
      "name": "Trigger Manual Job",
      "description": "Run a manual job",
      "schema": {
        "tags": [
          "jobs"
        ],
        "input": {
          "$schema": "$ref:schema",
          "$id": "https://datahub.com/integration/GitLab-API/post_projects__id__jobs__job_id__play/input.schema.json",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "const": "/projects/{id}/jobs/{job_id}/play"
            },
            "method": {
              "type": "string",
              "const": "post"
            },
            "query": {
              "type": "object",
              "description": "$ref:queryDesc",
              "properties": {
                "job_variables_attributes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array containing the custom variables available to the job"
                }
              }
            },
            "params": {
              "type": "object",
              "description": "$ref:paramDesc",
              "required": [
                "id",
                "job_id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The ID of the project"
                },
                "job_id": {
                  "type": "integer",
                  "description": "The ID of the manual job to run"
                }
              }
            },
            "headers": {
              "type": "object",
              "description": "$ref:headerDesc",
              "properties": {}
            },
            "data": {
              "description": "$ref:dataDesc",
              "properties": {}
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout specifies the number of milliseconds before the request times out. If the request takes longer than timeout, the request will be aborted.",
              "minimum": 0,
              "default": 0
            },
            "baseURL": "$ref:baseURL"
          },
          "required": [
            "url",
            "method"
          ]
        },
        "output": []
      }
    }
  ],
  "references": {
    "baseURL": {
      "type": "string",
      "enum": [
        "https://www.gitlab.com/api/v4"
      ]
    },
    "queryDesc": "Query parameters sent with the request",
    "paramDesc": "URL parameters sent with the request",
    "headerDesc": "HTTP headers sent when making the request",
    "dataDesc": "Data sent with the request",
    "schema": "https://json-schema.org/draft/2020-12/schema"
  }
}